MIME-Version: 1.0
Content-Type: multipart/related; boundary="----=_NextPart_1f9c1f14.8e9d.4eb5"

------=_NextPart_1f9c1f14.8e9d.4eb5
Content-Location: file:///C:/Doc/G.191.htm
Content-Type: text/html; charset="utf-8"

<?xml version="1.0"?>
<html xmlns:epub="http://www.idpf.org/2007/ops" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns="http://www.w3.org/TR/REC-html40" lang="en" xml:lang="en">
  <head><!--[if gte mso 9]>
<xml>
<w:WordDocument>
<w:View>Print</w:View>
<w:Zoom>100</w:Zoom>
<w:DoNotOptimizeForBrowser/>
</w:WordDocument>
</xml>
<![endif]-->
<meta http-equiv=Content-Type content="text/html; charset=utf-8"/>

  <link rel=File-List href="G.191_files/filelist.xml"/>
<style>
  <!--
@charset "UTF-8";
/* Font Definitions */
@font-face {
  font-family: Wingdings;
  panose-1: 5 0 0 0 0 0 0 0 0 0;
  mso-font-charset: 2;
  mso-generic-font-family: decorative;
  mso-font-pitch: variable;
  mso-font-signature: 0 268435456 0 0 -2147483648 0; }

@font-face {
  font-family: "MS Mincho";
  panose-1: 2 2 6 9 4 2 5 8 3 4;
  mso-font-alt: "ＭＳ 明朝";
  mso-font-charset: 128;
  mso-generic-font-family: modern;
  mso-font-pitch: fixed;
  mso-font-signature: -536870145 1791491579 134217746 0 131231 0; }

@font-face {
  font-family: "Cambria Math";
  panose-1: 2 4 5 3 5 4 6 3 2 4;
  mso-font-charset: 0;
  mso-generic-font-family: roman;
  mso-font-pitch: variable;
  mso-font-signature: -536870145 1107305727 0 0 415 0; }

@font-face {
  font-family: "Arial Narrow";
  panose-1: 2 11 5 6 2 2 2 3 2 4;
  mso-font-charset: 0;
  mso-generic-font-family: swiss;
  mso-font-pitch: variable;
  mso-font-signature: 3 0 0 0 1 0; }

@font-face {
  font-family: "Source Sans Pro";
  panose-1: 2 11 5 3 3 4 3 2 2 4;
  mso-font-alt: Arial;
  mso-font-charset: 77;
  mso-generic-font-family: swiss;
  mso-font-pitch: variable;
  mso-font-signature: 536870919 1 0 0 403 0; }

@font-face {
  font-family: Tahoma;
  panose-1: 2 11 6 4 3 5 4 4 2 4;
  mso-font-charset: 0;
  mso-generic-font-family: swiss;
  mso-font-pitch: variable;
  mso-font-signature: -520081665 -1073717157 41 0 66047 0; }

@font-face {
  font-family: Times;
  panose-1: 2 0 5 0 0 0 0 0 0 0;
  mso-font-charset: 0;
  mso-generic-font-family: auto;
  mso-font-pitch: variable;
  mso-font-signature: -536870145 1342185562 0 0 415 0; }

@font-face {
  font-family: "Wingdings 2";
  panose-1: 5 2 1 2 1 5 7 7 7 7;
  mso-font-charset: 2;
  mso-generic-font-family: decorative;
  mso-font-pitch: variable;
  mso-font-signature: 0 268435456 0 0 -2147483648 0; }

@font-face {
  font-family: "\@MS Mincho";
  panose-1: 2 2 6 9 4 2 5 8 3 4;
  mso-font-charset: 128;
  mso-generic-font-family: modern;
  mso-font-pitch: fixed;
  mso-font-signature: -536870145 1791491579 134217746 0 131231 0; }

p.MsoNormal, li.MsoNormal, div.MsoNormal {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "";
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  margin-bottom: .0001pt;
  text-align: justify;
  text-justify: inter-ideograph;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US; }

p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph {
  mso-style-priority: 34;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  text-align: justify;
  text-justify: inter-ideograph;
  /* do not put in margin-left, it is specific to list level */
  mso-add-space: auto;
  mso-pagination: widow-orphan;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-ansi-language: EN-AU;
  mso-fareast-language: EN-US; }

p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst {
  mso-style-priority: 34;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-type: export-only;
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  text-align: justify;
  text-justify: inter-ideograph;
  /* do not put in margin-left, it is specific to list level */
  mso-add-space: auto;
  mso-pagination: widow-orphan;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-ansi-language: EN-AU;
  mso-fareast-language: EN-US; }

p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle {
  mso-style-priority: 34;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-type: export-only;
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  text-align: justify;
  text-justify: inter-ideograph;
  /* do not put in margin-left, it is specific to list level */
  mso-add-space: auto;
  mso-pagination: widow-orphan;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-ansi-language: EN-AU;
  mso-fareast-language: EN-US; }

p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast {
  mso-style-priority: 34;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-type: export-only;
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  text-align: justify;
  text-justify: inter-ideograph;
  /* do not put in margin-left, it is specific to list level */
  mso-add-space: auto;
  mso-pagination: widow-orphan;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-ansi-language: EN-AU;
  mso-fareast-language: EN-US; }

p.MsoCommentText, li.MsoCommentText, div.MsoCommentText {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-link: "Comment Text Char";
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US; }

p.MsoHeader, li.MsoHeader, div.MsoHeader {
  mso-style-unhide: no;
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 9.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US; }

p.MsoHeaderLandscape, li.MsoHeaderLandscape, div.MsoHeaderLandscape {
  mso-style-unhide: no;
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 9.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US; }

p.MsoFooter, li.MsoFooter, div.MsoFooter {
  mso-style-unhide: no;
  margin: 0cm;
  margin-bottom: .0001pt;
  text-align: justify;
  text-justify: inter-ideograph;
  mso-pagination: widow-orphan;
  tab-stops: 297.7pt right 17.0cm;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 8.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US;
  mso-bidi-font-weight: normal; }

p.MsoFooterLandscape, li.MsoFooterLandscape, div.MsoFooterLandscape {
  mso-style-unhide: no;
  margin: 0cm;
  margin-bottom: .0001pt;
  text-align: justify;
  text-justify: inter-ideograph;
  mso-pagination: widow-orphan;
  tab-stops: 366.5pt right 733.1pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 8.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US;
  mso-bidi-font-weight: normal; }

span.MsoCommentReference {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-parent: "";
  mso-ansi-font-size: 8.0pt;
  mso-bidi-font-size: 8.0pt; }

p.MsoBodyText, li.MsoBodyText, div.MsoBodyText {
  mso-style-unhide: no;
  margin-top: 9.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-bidi-font-family: "Times New Roman";
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US; }

p.MsoTitle, li.MsoTitle, div.MsoTitle {
  mso-style-priority: 10;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-link: "Title Char";
  mso-style-next: Normal;
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-add-space: auto;
  mso-pagination: widow-orphan;
  font-size: 28.0pt;
  font-family: "Calibri Light",sans-serif;
  mso-fareast-font-family: "Times New Roman";
  mso-bidi-font-family: "Times New Roman";
  letter-spacing: -.5pt;
  mso-font-kerning: 14.0pt;
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US; }

p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst {
  mso-style-priority: 10;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-link: "Title Char";
  mso-style-next: Normal;
  mso-style-type: export-only;
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-add-space: auto;
  mso-pagination: widow-orphan;
  font-size: 28.0pt;
  font-family: "Calibri Light",sans-serif;
  mso-fareast-font-family: "Times New Roman";
  mso-bidi-font-family: "Times New Roman";
  letter-spacing: -.5pt;
  mso-font-kerning: 14.0pt;
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US; }

p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle {
  mso-style-priority: 10;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-link: "Title Char";
  mso-style-next: Normal;
  mso-style-type: export-only;
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-add-space: auto;
  mso-pagination: widow-orphan;
  font-size: 28.0pt;
  font-family: "Calibri Light",sans-serif;
  mso-fareast-font-family: "Times New Roman";
  mso-bidi-font-family: "Times New Roman";
  letter-spacing: -.5pt;
  mso-font-kerning: 14.0pt;
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US; }

p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast {
  mso-style-priority: 10;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-link: "Title Char";
  mso-style-next: Normal;
  mso-style-type: export-only;
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-add-space: auto;
  mso-pagination: widow-orphan;
  font-size: 28.0pt;
  font-family: "Calibri Light",sans-serif;
  mso-fareast-font-family: "Times New Roman";
  mso-bidi-font-family: "Times New Roman";
  letter-spacing: -.5pt;
  mso-font-kerning: 14.0pt;
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US; }

a:link, span.MsoHyperlink {
  mso-style-unhide: no;
  mso-style-parent: "";
  color: blue; }

a:visited, span.MsoHyperlinkFollowed {
  mso-style-unhide: no;
  mso-style-parent: "";
  color: purple; }

a.url {
  font-family: "Arial",sans-serif;
  font-size: 8pt;
  text-decoration: underline;
  text-underline: single; }

p.MsoCommentSubject, li.MsoCommentSubject, div.MsoCommentSubject {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-parent: "Comment Text";
  mso-style-next: "Comment Text";
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US;
  font-weight: bold; }

p.MsoAcetate, li.MsoAcetate, div.MsoAcetate {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  margin: 0cm;
  margin-bottom: .0001pt;
  text-align: justify;
  text-justify: inter-ideograph;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 8.0pt;
  font-family: "Tahoma",sans-serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-US;
  mso-fareast-language: EN-US; }

span.MsoPlaceholderText {
  mso-style-noshow: yes;
  mso-style-priority: 99;
  mso-style-unhide: no;
  font-family: "Times New Roman",serif;
  mso-ascii-font-family: "Times New Roman";
  mso-hansi-font-family: "Times New Roman";
  color: gray; }

span.blackgraphtxsidebar {
  mso-style-name: blackgraphtxsidebar;
  mso-style-unhide: no;
  mso-style-parent: ""; }

span.blackgraphtx {
  mso-style-name: blackgraphtx;
  mso-style-unhide: no;
  mso-style-parent: ""; }

.MsoChpDefault {
  mso-style-type: export-only;
  mso-default-props: yes; }

p.MsoRMPane, li.MsoRMPane, div.MsoRMPane {
  mso-style-noshow: yes;
  mso-style-priority: 99;
  mso-style-unhide: no;
  mso-style-parent: "";
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: SimSun;
  mso-fareast-theme-font: minor-fareast;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

div.figure, p.figure {
  text-align: center; }

div.pseudocode {
  margin-left: 1.27cm;
  margin-right: 1.27cm; }

p.pseudocode, li.pseudocode {
  margin-left: 0cm;
  margin-right: 0cm; }

div.pseudocode, p.pseudocode, li.pseudocode {
  text-align: left;
  font-size: 10pt; }

h1 {
  mso-style-priority: 1;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-link: "Heading 1 Char";
  mso-style-next: Normal;
  margin-top: 18.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 39.7pt;
  margin-bottom: .0001pt;
  text-indent: -39.7pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 1;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  mso-list: l1 level1 lfo6;
  mso-hyphenate: none;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
          
  color: black;
  font-weight: bold;
  mso-font-kerning: 0pt;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  mso-bidi-font-weight: normal; }

p.supertitle {
  mso-style-priority: 1;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-next: h1;
  margin-top: 36.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 39.7pt;
  margin-bottom: .0001pt;
  text-indent: -39.7pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  mso-hyphenate: none;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
          
  color: black;
  mso-font-kerning: 0pt;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  mso-bidi-font-weight: normal; }

h1.Section3 {
  margin-top: 36.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  margin-bottom: 6pt;
  text-align: center;
  text-indent: 0cm;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 1;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 14.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.h1Preface {
  mso-style-priority: 1;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-link: "Heading 1 Char";
  mso-style-next: Normal;
  margin-top: 18.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 39.7pt;
  margin-bottom: .0001pt;
  text-indent: -39.7pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  color: black;
  font-weight: bold;
  mso-font-kerning: 0pt;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  mso-bidi-font-weight: normal; }

h1.Annex, .h1Annex {
  mso-style-priority: 1;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-link: "Heading 1 Char";
  mso-style-next: Normal;
  margin-top: 36.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 0cm;
  margin-bottom: .0001pt;
  text-indent: 0cm;
  text-align: center;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 14.0pt;
  mso-bidi-font-size: 10.0pt;
  mso-hyphenate: none;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  color: black;
  mso-font-kerning: 0pt;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  mso-bidi-font-weight: normal; }

h1.Annex {
  mso-outline-level: 1;
  mso-list: l1 level1 lfo6; }

.h2Annex {
  mso-style-priority: 2;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "Heading 1";
  mso-style-link: "Heading 2 Char";
  mso-style-next: Normal;
  margin-top: 12.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 39.7pt;
  margin-bottom: .0001pt;
  text-indent: 0cm;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 2;
  mso-hyphenate: none;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  font-weight: bold;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  color: black;
  font-weight: bold;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  mso-bidi-font-weight: normal; }

h2 {
  mso-style-priority: 2;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "Heading 1";
  mso-style-link: "Heading 2 Char";
  mso-style-next: Normal;
  margin-top: 12.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 39.7pt;
  margin-bottom: .0001pt;
  text-indent: -39.7pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 2;
  mso-list: l1 level2 lfo6;
  mso-hyphenate: none;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  color: black;
  font-weight: bold;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  mso-bidi-font-weight: normal; }

h3 {
  mso-style-priority: 3;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "Heading 1";
  mso-style-link: "Heading 3 Char";
  mso-style-next: Normal;
  margin-top: 8.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 39.7pt;
  margin-bottom: .0001pt;
  text-indent: -39.7pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 3;
  mso-list: l1 level3 lfo6;
  mso-hyphenate: none;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  color: black;
  font-weight: bold;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  mso-bidi-font-weight: normal; }

h4 {
  mso-style-priority: 4;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "Heading 3";
  mso-style-link: "Heading 4 Char";
  mso-style-next: Normal;
  margin-top: 8.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 51.05pt;
  margin-bottom: .0001pt;
  text-indent: -51.05pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 4;
  mso-list: l1 level4 lfo6;
  mso-hyphenate: none;
  tab-stops: 51.05pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  color: black;
  font-weight: bold;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  mso-bidi-font-weight: normal; }

h5 {
  mso-style-priority: 5;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "Heading 4";
  mso-style-link: "Heading 5 Char";
  mso-style-next: Normal;
  margin-top: 8.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 51.05pt;
  margin-bottom: .0001pt;
  text-indent: -51.05pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 5;
  mso-list: l1 level5 lfo6;
  mso-hyphenate: none;
  tab-stops: 51.05pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-weight: bold;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  color: black;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  mso-bidi-font-weight: normal; }

h6 {
  mso-style-priority: 6;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "Heading 5";
  mso-style-link: "Heading 6 Char";
  mso-style-next: Normal;
  margin-top: 8.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 79.4pt;
  margin-bottom: .0001pt;
  text-indent: -79.4pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 6;
  tab-stops: 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  mso-list: l1 level6 lfo6;
  mso-hyphenate: none;
  font-family: "Times New Roman",serif;
  color: black;
  font-weight: bold;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  mso-bidi-font-weight: normal; }

p.MsoHeading7, li.MsoHeading7, div.MsoHeading7 {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "Heading 6";
  mso-style-next: Normal;
  margin-top: 8.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 79.4pt;
  margin-bottom: .0001pt;
  text-indent: -79.4pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 7;
  tab-stops: 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.MsoHeading8, li.MsoHeading8, div.MsoHeading8 {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "Heading 6";
  mso-style-next: Normal;
  margin-top: 8.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 79.4pt;
  margin-bottom: .0001pt;
  text-indent: -79.4pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 8;
  tab-stops: 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.MsoHeading9, li.MsoHeading9, div.MsoHeading9 {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "Normal 6";
  mso-style-next: Βασικό;
  margin-top: 8.0pt;
  margin-right: 0cm;
  margin-bottom: 6pt;
  margin-left: 79.4pt;
  margin-bottom: .0001pt;
  text-indent: -79.4pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  mso-outline-level: 9;
  tab-stops: 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.MsoIndex1, li.MsoIndex1, div.MsoIndex1 {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-next: Normal;
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.MsoIndex2, li.MsoIndex2, div.MsoIndex2 {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-next: Normal;
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 14.2pt;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.MsoIndex3, li.MsoIndex3, div.MsoIndex3 {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-next: Normal;
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 1.0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.MsoToc1, li.MsoToc1, div.MsoToc1 {
  mso-style-priority: 39;
  mso-style-unhide: no;
  margin-top: 6.0pt;
  margin-right: 42.55pt;
  margin-bottom: 0cm;
  margin-left: 34.0pt;
  margin-bottom: .0001pt;
  text-indent: -34.0pt;
  mso-pagination: widow-orphan;
  tab-stops: 48.2pt right dotted 17.0cm;
  /* right blank 17.0cm;*/
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-bidi-font-weight: normal; }

p.MsoToc2, li.MsoToc2, div.MsoToc2 {
  mso-style-noshow: yes;
  mso-style-priority: 39;
  mso-style-unhide: no;
  mso-style-parent: "TOC 1";
  mso-style-next: Normal;
  margin-top: 4.0pt;
  margin-right: 42.55pt;
  margin-bottom: 0cm;
  margin-left: 76.55pt;
  margin-bottom: .0001pt;
  text-indent: -42.55pt;
  mso-pagination: widow-orphan;
  tab-stops: 48.2pt right dotted 17.0cm;
  /* right blank 17.0cm;*/
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-bidi-font-weight: normal; }

p.MsoToc3, li.MsoToc3, div.MsoToc3 {
  mso-style-noshow: yes;
  mso-style-priority: 39;
  mso-style-unhide: no;
  mso-style-parent: "TOC 2";
  mso-style-next: Normal;
  margin-top: 4.0pt;
  margin-right: 42.55pt;
  margin-bottom: 0cm;
  margin-left: 76.55pt;
  margin-bottom: .0001pt;
  text-indent: -42.55pt;
  mso-pagination: widow-orphan;
  tab-stops: 48.2pt right dotted 17.0cm;
  /* right blank 17.0cm;*/
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-bidi-font-weight: normal; }

p.MsoToc4, li.MsoToc4, div.MsoToc4 {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-parent: "TOC 3";
  margin-top: 4.0pt;
  margin-right: 42.55pt;
  margin-bottom: 0cm;
  margin-left: 76.55pt;
  margin-bottom: .0001pt;
  text-indent: -42.55pt;
  mso-pagination: widow-orphan;
  tab-stops: 48.2pt right dotted 17.0cm;
  /* right blank 17.0cm;*/
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.MsoToc5, li.MsoToc5, div.MsoToc5 {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-parent: "TOC 4";
  margin-top: 4.0pt;
  margin-right: 42.55pt;
  margin-bottom: 0cm;
  margin-left: 76.55pt;
  margin-bottom: .0001pt;
  text-indent: -42.55pt;
  mso-pagination: widow-orphan;
  tab-stops: 48.2pt right dotted 17.0cm;
  /* right blank 17.0cm;*/
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.MsoToc6, li.MsoToc6, div.MsoToc6 {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-parent: "TOC 4";
  margin-top: 4.0pt;
  margin-right: 42.55pt;
  margin-bottom: 0cm;
  margin-left: 76.55pt;
  margin-bottom: .0001pt;
  text-indent: -42.55pt;
  mso-pagination: widow-orphan;
  tab-stops: 48.2pt right dotted 17.0cm;
  /* right blank 17.0cm;*/
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.MsoToc7, li.MsoToc7, div.MsoToc7 {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-parent: "TOC 4";
  margin-top: 4.0pt;
  margin-right: 42.55pt;
  margin-bottom: 0cm;
  margin-left: 76.55pt;
  margin-bottom: .0001pt;
  text-indent: -42.55pt;
  mso-pagination: widow-orphan;
  tab-stops: 48.2pt right dotted 17.0cm;
  /* right blank 17.0cm;*/
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.MsoToc8, li.MsoToc8, div.MsoToc8 {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-parent: "TOC 4";
  margin-top: 4.0pt;
  margin-right: 42.55pt;
  margin-bottom: 0cm;
  margin-left: 76.55pt;
  margin-bottom: .0001pt;
  text-indent: -42.55pt;
  mso-pagination: widow-orphan;
  tab-stops: 48.2pt right dotted 17.0cm;
  /* right blank 17.0cm;*/
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.MsoToc9, li.MsoToc9, div.MsoToc9 {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-parent: "TOC 3";
  margin-top: 4.0pt;
  margin-right: 42.55pt;
  margin-bottom: 0cm;
  margin-left: 76.55pt;
  margin-bottom: .0001pt;
  text-indent: -42.55pt;
  mso-pagination: widow-orphan;
  tab-stops: 48.2pt right dotted 17.0cm;
  /* right blank 17.0cm;*/
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

span.MsoFootnoteReference {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-ansi-font-size: 9.0pt;
  position: relative;
  top: -3.0pt;
  mso-text-raise: 3.0pt;
  mso-style-priority: 99; }

p.MsoFootnoteText, li.MsoFootnoteText, div.MsoFootnoteText {
  mso-style-noshow: yes;
  mso-style-priority: 99;
  mso-style-link: "Footnote Text Char";
  margin-top: 4.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 12.75pt;
  margin-bottom: .0001pt;
  text-align: justify;
  text-justify: inter-ideograph;
  text-indent: -12.75pt;
  mso-pagination: widow-orphan lines-together;
  tab-stops: 12.75pt 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 11.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.MsoBodyText, li.MsoBodyText, div.MsoBodyText {
  mso-style-noshow: yes;
  mso-style-priority: 99;
  mso-style-unhide: no;
  mso-style-link: "Body Text Char";
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  margin-left: 0cm;
  text-align: justify;
  line-height: 12.0pt;
  mso-pagination: widow-orphan;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

span.Heading1Char {
  mso-style-name: "Heading 1 Char";
  mso-style-priority: 1;
  mso-style-unhide: no;
  mso-style-locked: yes;
  mso-style-parent: "";
  mso-style-link: "Heading 1";
  mso-ansi-font-size: 13.0pt;
  font-family: "Times New Roman",serif;
  mso-ascii-font-family: Cambria;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-hansi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

span.Heading2Char {
  mso-style-name: "Heading 2 Char";
  mso-style-priority: 2;
  mso-style-unhide: no;
  mso-style-locked: yes;
  mso-style-parent: "";
  mso-style-link: "Heading 2";
  mso-ansi-font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-ascii-font-family: Cambria;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-hansi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

span.Heading3Char {
  mso-style-name: "Heading 3 Char";
  mso-style-priority: 3;
  mso-style-unhide: no;
  mso-style-locked: yes;
  mso-style-parent: "";
  mso-style-link: "Heading 3";
  mso-ansi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-ascii-font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-hansi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

span.Heading4Char {
  mso-style-name: "Heading 4 Char";
  mso-style-priority: 4;
  mso-style-unhide: no;
  mso-style-locked: yes;
  mso-style-parent: "";
  mso-style-link: "Heading 4";
  mso-ansi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-ascii-font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-hansi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

span.Heading5Char {
  mso-style-name: "Heading 5 Char";
  mso-style-priority: 5;
  mso-style-unhide: no;
  mso-style-locked: yes;
  mso-style-parent: "";
  mso-style-link: "Heading 5";
  mso-ansi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-ascii-font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-hansi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

span.Heading6Char {
  mso-style-name: "Heading 6 Char";
  mso-style-priority: 6;
  mso-style-unhide: no;
  mso-style-locked: yes;
  mso-style-parent: "";
  mso-style-link: "Heading 6";
  mso-ansi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-ascii-font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-hansi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.Tablebody, li.Tablebody, div.Tablebody {
  mso-style-name: "Table body";
  mso-style-noshow: yes;
  mso-style-unhide: no;
  margin-top: 3.0pt;
  margin-right: 0cm;
  margin-bottom: 3.0pt;
  margin-left: 0cm;
  line-height: 12;
  mso-pagination: widow-orphan;
  font-size: 10.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

/* Page Definitions */
@page {
  size: 612.0pt 792.0pt;
  margin: 36.0pt 53.85pt 21.55pt 53.85pt;
  mso-header-margin: 42.55pt;
  mso-footer-margin: 43.1pt;
  mso-footnote-separator: url("file:///C:/Doc/G.191_files/header.html") fs;
  mso-footnote-continuation-separator: url("file:///C:/Doc/G.191_files/header.html") fcs;
  mso-endnote-separator: url("file:///C:/Doc/G.191_files/header.html") es;
  mso-endnote-continuation-separator: url("file:///C:/Doc/G.191_files/header.html") ecs; }

/* List Definitions */
@list l0 {
  mso-list-id: 145051656;
  mso-list-template-ids: 2112159680; }

@list l0:level1 {
  mso-level-number-format: alpha-upper;
  mso-level-style-link: ANNEX;
  mso-level-suffix: none;
  mso-level-text: "Annex\00A0%1";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-ansi-font-size: 14.0pt;
  mso-bidi-font-size: 14.0pt;
  font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l0:level2 {
  mso-level-style-link: a2;
  mso-level-text: "%1\.%2";
  mso-level-tab-stop: 18.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l0:level3 {
  mso-level-style-link: a3;
  mso-level-text: "%1\.%2\.%3";
  mso-level-tab-stop: 36.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l0:level4 {
  mso-level-style-link: a4;
  mso-level-text: "%1\.%2\.%3\.%4";
  mso-level-tab-stop: 54.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l0:level5 {
  mso-level-style-link: a5;
  mso-level-text: "%1\.%2\.%3\.%4\.%5";
  mso-level-tab-stop: 54.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l0:level6 {
  mso-level-style-link: a6;
  mso-level-text: "%1\.%2\.%3\.%4\.%5\.%6";
  mso-level-tab-stop: 72.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l0:level7 {
  mso-level-reset-level: level2;
  mso-level-suffix: space;
  mso-level-text: "Figure\00A0%1\.%7\00A0—";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif; }

@list l0:level8 {
  mso-level-reset-level: level2;
  mso-level-suffix: space;
  mso-level-text: "Table\00A0%1\.%8\00A0—";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif; }

@list l0:level9 {
  mso-level-number-format: roman-lower;
  mso-level-text: "\(%9\)";
  mso-level-tab-stop: 306.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif; }

@list l1 {
  mso-list-id: 866942648;
  mso-list-template-ids: -1756330000; }

@list l1:level1 {
  mso-level-style-link: "Heading 1";
  mso-level-text: "%1";
  mso-level-tab-stop: 21.6pt;
  mso-level-number-position: left;
  margin-left: 21.6pt;
  text-indent: -21.6pt;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l1:level2 {
  mso-level-style-link: "Heading 2";
  mso-level-text: "%1\.%2";
  mso-level-tab-stop: 18.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l1:level3 {
  mso-level-style-link: "Heading 3";
  mso-level-text: "%1\.%2\.%3";
  mso-level-tab-stop: 36.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l1:level4 {
  mso-level-style-link: "Heading 4";
  mso-level-text: "%1\.%2\.%3\.%4";
  mso-level-tab-stop: 54.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l1:level5 {
  mso-level-style-link: "Heading 5";
  mso-level-text: "%1\.%2\.%3\.%4\.%5";
  mso-level-tab-stop: 54.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l1:level6 {
  mso-level-style-link: "Heading 6";
  mso-level-text: "%1\.%2\.%3\.%4\.%5\.%6";
  mso-level-tab-stop: 72.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-font-weight: bold;
  mso-ansi-font-style: normal; }

@list l1:level7 {
  mso-level-text: "%1\.%2\.%3\.%4\.%5\.%6\.%7";
  mso-level-tab-stop: 72.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif; }

@list l1:level8 {
  mso-level-text: "%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8";
  mso-level-tab-stop: 90.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif; }

@list l1:level9 {
  mso-level-text: "%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8\.%9";
  mso-level-tab-stop: 90.0pt;
  mso-level-number-position: left;
  margin-left: 0cm;
  text-indent: 0cm;
  mso-bidi-font-family: "Times New Roman",serif; }

/* ordered list */
@list l2 {
  mso-list-id: 525294607;
  mso-list-template-ids: 67633181; }

@list l2:level1 {
  mso-level-number-format: alpha-lower;
  mso-level-text: "%1\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 1.4cm;
  text-indent: -1.4cm; }

@list l2:level2 {
  mso-level-number-format: roman-lower;
  mso-level-text: "%2\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 2.1cm;
  text-indent: -0.7cm; }

@list l2:level3 {
  mso-level-text: "%3\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 2.8cm;
  text-indent: -0.7cm; }

@list l2:level4 {
  mso-level-number-format: alpha-upper;
  mso-level-text: "%4\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 3.5cm;
  text-indent: -0.7cm; }

@list l2:level5 {
  mso-level-number-format: roman-upper;
  mso-level-text: "%5\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 4.2cm;
  text-indent: -0.7cm; }

@list l2:level6 {
  mso-level-number-format: alpha-lower;
  mso-level-text: "%6\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 4.9cm;
  text-indent: -0.7cm; }

@list l2:level7 {
  mso-level-number-format: roman-lower;
  mso-level-tab-stop: none;
  mso-level-text: "%7\)";
  mso-level-number-position: left;
  margin-left: 5.6cm;
  text-indent: -0.7cm; }

@list l2:level8 {
  mso-level-text: "%8\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 6.3cm;
  text-indent: -0.7cm; }

@list l2:level9 {
  mso-level-number-format: alpha-upper;
  mso-level-text: "%9\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 7.0cm;
  text-indent: -0.7cm; }

/* Unordered list */
@list l3 {
  mso-list-id: 1308196397;
  mso-list-type: hybrid;
  mso-list-template-ids: -277327948 -457018030 67633155 67633157 67633153 67633155 67633157 67633153 67633155 67633157; }

@list l3:level1 {
  mso-level-number-format: bullet;
  mso-level-text: –;
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 1.4cm;
  text-indent: -1.4cm; }

@list l3:level2 {
  mso-level-number-format: bullet;
  mso-level-text: –;
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 2.1cm;
  text-indent: -0.7cm; }

@list l3:level3 {
  mso-level-number-format: bullet;
  mso-level-text: –;
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 2.8cm;
  text-indent: -0.7cm; }

@list l3:level4 {
  mso-level-number-format: bullet;
  mso-level-text: –;
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 3.5cm;
  text-indent: -0.7cm; }

@list l3:level5 {
  mso-level-number-format: bullet;
  mso-level-text: –;
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 4.2cm;
  text-indent: -0.7cm; }

@list l3:level6 {
  mso-level-number-format: bullet;
  mso-level-text: –;
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 4.9cm;
  text-indent: -0.7cm; }

@list l3:level7 {
  mso-level-number-format: bullet;
  mso-level-text: –;
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 5.6cm;
  text-indent: -0.7cm; }

@list l3:level8 {
  mso-level-number-format: bullet;
  mso-level-text: –;
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 6.3cm;
  text-indent: -0.7cm; }

@list l3:level9 {
  mso-level-number-format: bullet;
  mso-level-text: –;
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 7.0cm;
  text-indent: -0.7cm; }

/* steps ordered list */
@list l4 {
  mso-list-id: 525294608;
  mso-list-template-ids: 676331812; }

@list l4:level1 {
  mso-level-text: "%1\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 1.4cm;
  text-indent: -1.4cm; }

@list l4:level2 {
  mso-level-text: "%2\)";
  mso-level-number-format: alpha-lower;
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 2.1cm;
  text-indent: -0.7cm; }

@list l4:level3 {
  mso-level-number-format: roman-lower;
  mso-level-text: "%3\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 2.8cm;
  text-indent: -0.7cm; }

@list l4:level4 {
  mso-level-number-format: alpha-upper;
  mso-level-text: "%4\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 3.5cm;
  text-indent: -0.7cm; }

@list l4:level5 {
  mso-level-number-format: roman-upper;
  mso-level-text: "%5\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 4.2cm;
  text-indent: -0.7cm; }

@list l4:level6 {
  mso-level-text: "%6\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 4.9cm;
  text-indent: -0.7cm; }

@list l4:level7 {
  mso-level-tab-stop: none;
  mso-level-number-format: alpha-lower;
  mso-level-text: "%7\)";
  mso-level-number-position: left;
  margin-left: 5.6cm;
  text-indent: -0.7cm; }

@list l4:level8 {
  mso-level-number-format: roman-lower;
  mso-level-text: "%8\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 6.3cm;
  text-indent: -0.7cm; }

@list l4:level9 {
  mso-level-number-format: alpha-upper;
  mso-level-text: "%9\)";
  mso-level-tab-stop: none;
  mso-level-number-position: left;
  margin-left: 7.0cm;
  text-indent: -0.7cm; }

div.ListContLevel1 {
  mso-style-priority: 34;
  margin-left: 1.4cm;
  margin-right: 0cm; }

div.ListContLevel2 {
  mso-style-priority: 34;
  margin-top: 0cm;
  margin-left: 2.1cm;
  margin-right: 0cm; }

div.ListContLevel3 {
  mso-style-priority: 34;
  margin-left: 2.8cm;
  margin-right: 0cm; }

div.ListContLevel4 {
  mso-style-priority: 34;
  margin-left: 3.5cm;
  margin-right: 0cm; }

div.ListContLevel5 {
  mso-style-priority: 34;
  margin-left: 4.2cm;
  margin-right: 0cm; }

div.ListContLevel6 {
  mso-style-priority: 34;
  margin-left: 4.9cm;
  margin-right: 0cm; }

div.ListContLevel7 {
  mso-style-priority: 34;
  margin-left: 5.6cm;
  margin-right: 0cm; }

div.ListContLevel8 {
  mso-style-priority: 34;
  margin-left: 6.3cm;
  margin-right: 0cm; }

div.ListContLevel9 {
  mso-style-priority: 34;
  margin-left: 7.0cm;
  margin-right: 0cm; }

table.MsoNormalTable {
  mso-style-name: "Table Normal";
  mso-tstyle-rowband-size: 0;
  mso-tstyle-colband-size: 0;
  mso-style-noshow: yes;
  mso-style-priority: 99;
  mso-style-parent: "";
  mso-padding-alt: 0cm 5.4pt 0cm 5.4pt;
  mso-para-margin: 0cm;
  mso-para-margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  font-size: 10.0pt;
  font-family: "Times New Roman",serif; }

ol {
  margin-bottom: 0cm;
  margin-left: 18pt; }

ul {
  margin-bottom: 0cm;
  margin-left: 18pt; }

-->
</style><meta http-equiv=Content-Type content="text/html; charset=UTF-8"/>
    <style>
      <!--
div.table_container {
  margin-bottom: 14pt;
}

ol
        {margin-bottom:0cm;}
ul
        {margin-bottom:0cm;}

table.MsoISOTable tr
    {page-break-inside:avoid;}

td { page-break-inside:avoid; }
tr { page-break-after:avoid; }

table.MsoISOTableBig tr
    {page-break-inside:auto;}

table.MsoISOTableBig td
    {page-break-inside:auto;}

span.stem
    {font-family:"Cambria Math",serif;
    mso-ascii-font-family:"Cambria Math";
    font-style:italic;}

dt
    {page-break-inside:avoid;
    page-break-after:avoid}

br.section
    {page-break-before:always;
    mso-break-type:section-break;}
br.pagebreak
    {page-break-before:always;
    mso-special-character:line-break;}

-->
    </style>
    <style>
      <!--
p.Sourcecode, li.Sourcecode, div.Sourcecode, pre.Sourcecode, pre {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "";
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  margin-left: 0cm;
  text-align: left;
  mso-pagination: widow-orphan;
  tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  font-size: 10.0pt;
  font-family: "Courier New",monospace;
  mso-fareast-font-family: Calibri;
  mso-bidi-font-family: "Courier New";
  mso-ansi-language: EN-GB; }

p.pseudocode, li.pseudocode, div.pseudocode {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "";
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  margin-left: 0cm;
  text-align: left;
  mso-pagination: widow-orphan;
  tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: Calibri;
  mso-bidi-font-family: "Courier New";
  mso-ansi-language: EN-GB; }

p.annex_obligation, li.annex_obligation, div.annex_obligation {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "";
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  margin-bottom: .0001pt;
  text-align: center;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman";
  mso-ansi-language: EN-US; }

p.Biblio, li.Biblio, div.Biblio, p.NormRef, li.NormRef, div.NormRef {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "";
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 39.7pt;
  margin-bottom: .0001pt;
  text-indent: -39.7pt;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

p.FigureTitle {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "";
  margin-top: 12.0pt;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  margin-left: 0cm;
  text-align: center;
  mso-pagination: widow-orphan lines-together;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-weight: bold;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

p.SourceTitle {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "";
  margin-top: 18.0pt;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  margin-left: 0cm;
  text-align: center;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-weight: bold;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

p.AdmonitionTitle, p.RecommendationTitle {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "";
  margin-top: 18.0pt;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  margin-left: 0cm;
  text-align: center;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-weight: bold;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

p.TableTitle {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  mso-style-parent: "";
  margin-top: 18.0pt;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  margin-left: 0cm;
  text-align: center;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-weight: bold;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

p.Note, div.Note, li.Note {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  margin-top: 4.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  margin-bottom: .0001pt;
  text-align: justify;
  text-justify: inter-ideograph;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 11.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

p.TableFootnote, div.TableFootnote, li.TableFootnote {
  mso-style-unhide: no;
  mso-style-qformat: yes;
  margin-top: 2.0pt;
  margin-right: 0cm;
  margin-bottom: 2.0pt;
  margin-left: 14.2pt;
  text-indent: -14.2pt;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 11.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

p.FooterQP, li.FooterQP, div.FooterQP {
  mso-style-name: Footer_QP;
  mso-style-unhide: no;
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  tab-stops: 45.35pt right 439.45pt 17.0cm;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 11.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.FooterQPLandscape, li.FooterQPLandscape, div.FooterQPLandscape {
  mso-style-unhide: no;
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  tab-stops: 45.35pt right 439.45pt 733.1pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 11.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.FirstFooter, li.FirstFooter, div.FirstFooter {
  mso-style-name: FirstFooter;
  mso-style-unhide: no;
  mso-style-parent: Footer;
  margin-top: 2.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  font-size: 8.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.ANNEX, li.ANNEX, div.ANNEX {
  mso-style-name: ANNEX;
  mso-style-priority: 10;
  mso-style-unhide: no;
  mso-style-next: Normal;
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 24.0pt;
  margin-left: 0cm;
  text-align: center;
  text-indent: 0cm;
  line-height: 15.5pt;
  mso-line-height-rule: exactly;
  page-break-before: always;
  mso-pagination: widow-orphan;
  page-break-after: avoid;
  mso-outline-level: 1;
  mso-list: l0 level1 lfo12;
  tab-stops: 20.15pt;
  font-size: 14.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: JA;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.Normalaftertitle, li.Normalaftertitle, div.Normalaftertitle {
  mso-style-name: Normal_after_title;
  mso-style-unhide: no;
  mso-style-next: Normal;
  margin-top: 18.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  margin-bottom: .0001pt;
  text-align: justify;
  text-justify: inter-ideograph;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.BiblioTitle, li.BiblioTitle, div.BiblioTitle {
  mso-style-name: "Biblio Title";
  mso-style-noshow: yes;
  mso-style-unhide: no;
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 15.5pt;
  margin-left: 0cm;
  text-align: center;
  line-height: 15.5pt;
  mso-pagination: widow-orphan;
  mso-outline-level: 1;
  tab-stops: 20.15pt;
  font-size: 14.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.Definition, li.Definition, div.Definition {
  mso-style-name: Definition;
  mso-style-priority: 9;
  mso-style-unhide: no;
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 6.0pt;
  margin-left: 0cm;
  text-align: justify;
  line-height: 12.0pt;
  mso-pagination: widow-orphan;
  tab-stops: 20.15pt;
  font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

p.ForewordTitle, li.ForewordTitle, div.ForewordTitle {
  mso-style-name: "Foreword Title";
  mso-style-noshow: yes;
  mso-style-unhide: no;
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 15.5pt;
  margin-left: 0cm;
  text-align: justify;
  line-height: 15.5pt;
  page-break-before: always;
  mso-pagination: widow-orphan;
  page-break-after: avoid;
  mso-outline-level: 1;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 14.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.IntroTitle, li.IntroTitle, div.IntroTitle {
  mso-style-name: "Intro Title";
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-parent: "Foreword Title";
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 15.5pt;
  margin-left: 0cm;
  text-align: justify;
  line-height: 15.5pt;
  mso-pagination: widow-orphan;
  page-break-after: avoid;
  mso-outline-level: 1;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 14.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  font-weight: bold;
  page-break-before: always;
  mso-bidi-font-weight: normal; }

p.TitlePageSubhead, li.TitlePageSubhead, div.TitlePageSubhead {
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-parent: "Foreword Title";
  margin-top: 0cm;
  margin-right: 0cm;
  margin-bottom: 15.5pt;
  margin-left: 0cm;
  text-align: center;
  line-height: 15.5pt;
  mso-pagination: widow-orphan;
  page-break-after: avoid;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 14.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.Terms, li.Terms, div.Terms {
  mso-style-name: "Term\(s\)";
  mso-style-priority: 8;
  mso-style-unhide: no;
  mso-style-next: Definition;
  margin: 0cm;
  margin-bottom: .0001pt;
  line-height: 12.0pt;
  mso-pagination: widow-orphan;
  page-break-after: avoid;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.AltTerms, li.AltTerms, div.AltTerms {
  mso-style-name: "AltTerm\(s\)";
  mso-style-priority: 8;
  mso-style-unhide: no;
  mso-style-next: Definition;
  margin: 0cm;
  margin-bottom: .0001pt;
  line-height: 12.0pt;
  mso-pagination: widow-orphan;
  page-break-after: avoid;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-bidi-font-weight: normal; }

p.DeprecatedTerms, li.DeprecatedTerms, div.DeprecatedTerms {
  mso-style-name: "DeprecatedTerm\(s\)";
  mso-style-priority: 8;
  mso-style-unhide: no;
  mso-style-next: Definition;
  margin: 0cm;
  margin-bottom: .0001pt;
  line-height: 12.0pt;
  mso-pagination: widow-orphan;
  page-break-after: avoid;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-bidi-font-weight: normal; }

p.TermNum, li.TermNum, div.TermNum {
  mso-style-name: TermNum;
  mso-style-priority: 7;
  mso-style-unhide: no;
  mso-style-next: "Term\(s\)";
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  line-height: 12.0pt;
  text-align: justify;
  text-justify: inter-ideograph;
  mso-pagination: widow-orphan;
  page-break-after: avoid;
  tab-stops: 20.15pt;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-bidi-font-weight: normal; }

p.zzContents, li.zzContents, div.zzContents {
  mso-style-name: zzContents;
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-next: "TOC 1";
  margin-top: 48.0pt;
  margin-right: 0cm;
  margin-bottom: 15.5pt;
  margin-left: 0cm;
  line-height: 15.5pt;
  mso-line-height-rule: exactly;
  page-break-before: always;
  mso-pagination: widow-orphan;
  page-break-after: avoid;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 14.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.zzCopyright, li.zzCopyright {
  mso-style-name: zzCopyright;
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-next: Normal;
  margin-top: 0cm;
  margin-right: 14.2pt;
  margin-bottom: 6.0pt;
  margin-left: 14.2pt;
  text-align: justify;
  line-height: 12.0pt;
  mso-pagination: widow-orphan;
  tab-stops: 20.15pt 25.7pt 481.15pt;
  padding: 0cm;
  mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

div.zzCopyright {
  mso-element: para-border-div;
  border: solid windowtext 1.0pt;
  mso-border-top-alt: solid windowtext .5pt;
  mso-border-left-alt: solid windowtext .5pt;
  mso-border-right-alt: solid windowtext .5pt;
  mso-border-bottom-alt: solid windowtext .5pt;
  padding: 1.0pt 4.0pt 0cm 4.0pt;
  margin-left: 5.1pt;
  margin-right: 5.1pt; }

p.zzCopyright_address {
  margin-top: 0cm;
  margin-right: 14.2pt;
  margin-bottom: 0.0pt;
  margin-left: 14.2pt;
  mso-layout-grid-align: none;
  text-autospace: none;
  padding-left: 20pt;
  mso-padding-alt-left: 20pt;
  font-size: 10.0pt;
  text-align: left;
  mso-bidi-font-size: 11.0pt; }

p.zzSTDTitle, li.zzSTDTitle, div.zzSTDTitle {
  mso-style-name: zzSTDTitle;
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-next: Normal;
  margin-top: 20.0pt;
  margin-right: 0cm;
  margin-bottom: 38.0pt;
  margin-left: 0cm;
  line-height: 17.5pt;
  mso-line-height-rule: exactly;
  mso-pagination: widow-orphan;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 16.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.zzSTDTitle1, li.zzSTDTitle1, div.zzSTDTitle1 {
  mso-style-name: zzSTDTitle;
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-next: Normal;
  margin-top: 0pt;
  margin-right: 0cm;
  margin-bottom: 18.0pt;
  margin-left: 0cm;
  line-height: 17.5pt;
  mso-line-height-rule: exactly;
  mso-pagination: widow-orphan;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 14.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  text-align: left;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.zzSTDTitle2, li.zzSTDTitle2, div.zzSTDTitle2 {
  mso-style-name: zzSTDTitle;
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-next: Normal;
  margin-top: 0pt;
  margin-right: 0cm;
  margin-bottom: 18.0pt;
  margin-left: 0cm;
  line-height: 17.5pt;
  mso-line-height-rule: exactly;
  mso-pagination: widow-orphan;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 14.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  font-weight: bold;
  text-align: center;
  mso-bidi-font-weight: normal; }

p.zzSTDTitle3, li.zzSTDTitle3, div.zzSTDTitle3 {
  mso-style-name: zzSTDTitle;
  mso-style-noshow: yes;
  mso-style-unhide: no;
  mso-style-next: Normal;
  margin-top: 0pt;
  margin-right: 0cm;
  margin-bottom: 18.0pt;
  margin-left: 0cm;
  line-height: 17.5pt;
  mso-line-height-rule: exactly;
  mso-pagination: widow-orphan;
  mso-hyphenate: none;
  tab-stops: 20.15pt;
  font-size: 14.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  font-style: italic;
  text-align: center;
  mso-bidi-font-weight: normal; }

p.Quote, li.Quote, div.Quote {
  mso-style-priority: 99;
  margin-top: 0cm;
  margin-right: 36.0pt;
  margin-bottom: 0cm;
  margin-left: 36.0pt;
  text-align: justify;
  line-height: 12.0pt;
  mso-pagination: widow-orphan;
  tab-stops: 20.15pt;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

p.QuoteAttribution {
  text-align: right;
  mso-style-priority: 99;
  margin-top: 0cm;
  margin-right: 36.0pt;
  margin-bottom: 0cm;
  margin-left: 36.0pt;
  line-height: 12.0pt;
  mso-pagination: widow-orphan;
  tab-stops: 20.15pt;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

p.Admonition, li.Admonition, div.Admonition {
  mso-style-priority: 99;
  margin-top: 0cm;
  margin-right: 57.6pt;
  margin-bottom: 0cm;
  margin-left: 57.6pt;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  border: none;
  mso-border-alt: solid #4472C4 .25pt;
  mso-border-themecolor: accent1;
  padding: 0cm;
  mso-padding-alt: 10.0pt 10.0pt 10.0pt 10.0pt;
  font-size: 12.0pt;
  font-family: "Times New Roman",serif;
  mso-ascii-font-family: "Times New Roman",serif;
  mso-ascii-theme-font: minor-latin;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-fareast-theme-font: minor-fareast;
  mso-hansi-font-family: "Times New Roman",serif;
  mso-hansi-theme-font: minor-latin;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-bidi-theme-font: minor-bidi;
  color: #4472C4;
  mso-themecolor: accent1;
  mso-ansi-language: EN-AU;
  font-style: italic; }

p.Code, li.Code, div.Code {
  mso-style-name: Code;
  mso-style-priority: 16;
  mso-style-unhide: no;
  mso-style-qformat: yes;
  margin: 0cm;
  margin-bottom: .0001pt;
  line-height: 10.0pt;
  mso-pagination: widow-orphan;
  tab-stops: 20.15pt;
  font-size: 9.0pt;
  mso-bidi-font-size: 11.0pt;
  font-family: "Courier New",monospace;
  mso-fareast-font-family: Calibri;
  mso-bidi-font-family: "Source Sans Pro";
  mso-ansi-language: EN-GB; }

p.Formula, li.Formula, div.Formula {
  mso-style-name: Formula;
  mso-style-noshow: yes;
  mso-style-unhide: no;
  margin-top: 6.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt center 241.0pt right 17.0cm;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-bidi-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB; }

table.formula_dl {
  margin-left: 1.4cm;
  margin-right: 1.4cm; }

/* definition list */
p.enumlev1, li.enumlev1, div.enumlev1 {
  mso-style-name: enumlev1;
  mso-style-unhide: no;
  margin-top: 4.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 39.7pt;
  margin-bottom: .0001pt;
  text-align: justify;
  text-justify: inter-ideograph;
  text-indent: -39.7pt;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.enumlev2, li.enumlev2, div.enumlev2 {
  mso-style-name: enumlev2;
  mso-style-unhide: no;
  mso-style-parent: enumlev1;
  margin-top: 4.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 59.55pt;
  margin-bottom: .0001pt;
  text-align: justify;
  text-justify: inter-ideograph;
  text-indent: -19.85pt;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.enumlev3, li.enumlev3, div.enumlev3 {
  mso-style-name: enumlev3;
  mso-style-unhide: no;
  mso-style-parent: enumlev2;
  margin-top: 4.0pt;
  margin-right: 0cm;
  margin-bottom: 0cm;
  margin-left: 79.4pt;
  margin-bottom: .0001pt;
  text-align: justify;
  text-justify: inter-ideograph;
  text-indent: -19.85pt;
  mso-pagination: widow-orphan;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 12.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US; }

p.RecNo, li.RecNo, div.RecNo {
  mso-style-name: Rec_No;
  mso-style-unhide: no;
  mso-style-next: Rec_title;
  margin: 0cm;
  margin-bottom: .0001pt;
  mso-pagination: widow-orphan lines-together;
  page-break-after: avoid;
  tab-stops: 39.7pt 59.55pt 79.4pt 99.25pt;
  mso-layout-grid-align: none;
  punctuation-wrap: simple;
  text-autospace: none;
  font-size: 14.0pt;
  mso-bidi-font-size: 10.0pt;
  font-family: "Times New Roman",serif;
  mso-fareast-font-family: "Times New Roman",serif;
  mso-ansi-language: EN-GB;
  mso-fareast-language: EN-US;
  font-weight: bold;
  mso-bidi-font-weight: normal; }

p.boilerplateHdr {
  text-align: center;
  font-family: "Times New Roman",serif;
  font-size: 11.0pt; }

p.boilerplate {
  font-family: "Times New Roman",serif;
  font-size: 11.0pt;
  text-align: justify;
  margin-top: 6.0pt;
  margin-bottom: 0.0pt; }

p.draftwarningHdr {
  text-align: center;
  font-family: "Times New Roman",serif;
  font-weight: bold;
  font-size: 16.0pt;
  font-style: italic; }

span.addition {
  color: blue; }

span.deletion {
  color: red;
  text-decoration: line-through; }

@page {
  mso-page-border-surround-header: no;
  mso-page-border-surround-footer: no;
  mso-footnote-separator: url("file:///C:/Doc/G.191_files/header.html") fs;
  mso-footnote-continuation-separator: url("file:///C:/Doc/G.191_files/header.html") fcs;
  mso-endnote-separator: url("file:///C:/Doc/G.191_files/header.html") es;
  mso-endnote-continuation-separator: url("file:///C:/Doc/G.191_files/header.html") ecs;
  mso-facing-pages: yes; }

@page WordSection1 {
  size: 21.0cm 842.0pt;
  margin: 54.45pt 54.45pt 14.2pt 54.45pt;
  mso-header-margin: 1.0cm;
  mso-footer-margin: 14.2pt;
  mso-even-header: url("file:///C:/Doc/G.191_files/header.html") eh1;
  mso-header: url("file:///C:/Doc/G.191_files/header.html") h1;
  mso-even-footer: url("file:///C:/Doc/G.191_files/header.html") ef1;
  mso-paper-source: 0; }

div.WordSection1 {
  page: WordSection1; }

@page WordSection2 {
  size: 21.0cm 842.0pt;
  margin: 54.45pt 54.45pt 54.45pt 54.45pt;
  mso-header-margin: 24.1pt;
  mso-footer-margin: 24.1pt;
  mso-page-numbers: roman-lower 1;
  mso-even-header: url("file:///C:/Doc/G.191_files/header.html") eh2;
  mso-header: url("file:///C:/Doc/G.191_files/header.html") h2;
  mso-even-footer: url("file:///C:/Doc/G.191_files/header.html") ef2;
  mso-footer: url("file:///C:/Doc/G.191_files/header.html") f2;
  mso-first-header: url("file:///C:/Doc/G.191_files/header.html") fh2;
  mso-first-footer: url("file:///C:/Doc/G.191_files/header.html") ff2;
  mso-paper-source: 0; }

@page WordSection2L {
  size: 842.0pt 21.0cm;
  margin: 54.45pt 54.45pt 54.45pt 54.45pt;
  mso-header-margin: 24.1pt;
  mso-footer-margin: 24.1pt;
  mso-even-header: url("file:///C:/Doc/G.191_files/header.html") eh2l;
  mso-header: url("file:///C:/Doc/G.191_files/header.html") h2l;
  mso-even-footer: url("file:///C:/Doc/G.191_files/header.html") ef2l;
  mso-footer: url("file:///C:/Doc/G.191_files/header.html") f2l;
  mso-first-header: url("file:///C:/Doc/G.191_files/header.html") fh2l;
  mso-first-footer: url("file:///C:/Doc/G.191_files/header.html") ff2l;
  mso-paper-source: 0; }

@page WordSection2P {
  size: 21.0cm 842.0pt;
  margin: 54.45pt 54.45pt 54.45pt 54.45pt;
  mso-header-margin: 24.1pt;
  mso-footer-margin: 24.1pt;
  mso-even-header: url("file:///C:/Doc/G.191_files/header.html") eh2;
  mso-header: url("file:///C:/Doc/G.191_files/header.html") h2;
  mso-even-footer: url("file:///C:/Doc/G.191_files/header.html") ef2;
  mso-footer: url("file:///C:/Doc/G.191_files/header.html") f2;
  mso-first-header: url("file:///C:/Doc/G.191_files/header.html") fh2;
  mso-first-footer: url("file:///C:/Doc/G.191_files/header.html") ff2;
  mso-paper-source: 0; }

div.WordSection2 {
  page: WordSection2; }

@page WordSection3 {
  size: 21.0cm 842.0pt;
  margin: 2.0cm 2.0cm 2.0cm 2.0cm;
  mso-header-margin: 1.0cm;
  mso-footer-margin: 1.0cm;
  mso-page-numbers: 1;
  mso-even-header: url("file:///C:/Doc/G.191_files/header.html") eh2;
  mso-header: url("file:///C:/Doc/G.191_files/header.html") h2;
  mso-even-footer: url("file:///C:/Doc/G.191_files/header.html") ef3;
  mso-footer: url("file:///C:/Doc/G.191_files/header.html") f3;
  mso-first-header: url("file:///C:/Doc/G.191_files/header.html") fh2;
  mso-first-footer: url("file:///C:/Doc/G.191_files/header.html") ff2;
  mso-paper-source: 0; }

@page WordSection3L {
  size: 842.0pt 21.0cm;
  margin: 2.0cm 2.0cm 2.0cm 2.0cm;
  mso-header-margin: 1.0cm;
  mso-footer-margin: 1.0cm;
  mso-even-header: url("file:///C:/Doc/G.191_files/header.html") eh2l;
  mso-header: url("file:///C:/Doc/G.191_files/header.html") h2l;
  mso-even-footer: url("file:///C:/Doc/G.191_files/header.html") ef3l;
  mso-footer: url("file:///C:/Doc/G.191_files/header.html") f3l;
  mso-first-header: url("file:///C:/Doc/G.191_files/header.html") fh2l;
  mso-first-footer: url("file:///C:/Doc/G.191_files/header.html") ff2l;
  mso-paper-source: 0; }

@page WordSection3P {
  size: 21.0cm 842.0pt;
  margin: 2.0cm 2.0cm 2.0cm 2.0cm;
  mso-header-margin: 1.0cm;
  mso-footer-margin: 1.0cm;
  mso-even-header: url("file:///C:/Doc/G.191_files/header.html") eh2;
  mso-header: url("file:///C:/Doc/G.191_files/header.html") h2;
  mso-even-footer: url("file:///C:/Doc/G.191_files/header.html") ef3;
  mso-footer: url("file:///C:/Doc/G.191_files/header.html") f3;
  mso-first-header: url("file:///C:/Doc/G.191_files/header.html") fh2;
  mso-first-footer: url("file:///C:/Doc/G.191_files/header.html") ff2;
  mso-paper-source: 0; }

div.WordSection3 {
  page: WordSection3; }

table.MsoISOTable, table.MsoISOTableBig {
  mso-style-name: "Table ISO";
  mso-tstyle-rowband-size: 0;
  mso-tstyle-colband-size: 0;
  mso-style-noshow: yes;
  mso-style-priority: 99;
  mso-style-parent: "";
  mso-padding-alt: 0cm 2.85pt 0cm 2.85pt;
  mso-para-margin: 0cm;
  mso-para-margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  border-collapse: collapse;
  mso-table-layout-alt: fixed;
  border: solid windowtext 2pt;
  mso-border-alt: solid windowtext 2pt;
  mso-yfti-tbllook: 480;
  mso-border-insideh: .75pt solid windowtext;
  mso-border-insidev: .75pt solid windowtext;
  font-size: 11.0pt;
  font-family: "Times New Roman",serif; }

table.MsoISOTable th, table.MsoISOTableBig th {
  border: solid windowtext 1pt;
  mso-border-alt: solid windowtext 1pt;
  padding: 0cm 2.85pt 0cm 2.85pt; }

table.MsoISOTable td, table.MsoISOTableBig td {
  border: solid windowtext 1pt;
  mso-border-alt: solid windowtext 1pt;
  padding: 0cm 2.85pt 0cm 2.85pt; }

table.MsoISOTable p, table.MsoISOTableBig p {
  font-size: 11.0pt; }

table.MsoTableGrid {
  mso-style-name: "Table Grid";
  mso-tstyle-rowband-size: 0;
  mso-tstyle-colband-size: 0;
  mso-style-priority: 39;
  mso-style-unhide: no;
  border: solid windowtext 1.0pt;
  mso-border-alt: solid windowtext .5pt;
  mso-padding-alt: 0cm 5.4pt 0cm 5.4pt;
  mso-border-insideh: .5pt solid windowtext;
  mso-border-insidev: .5pt solid windowtext;
  mso-para-margin: 0cm;
  mso-para-margin-bottom: .0001pt;
  mso-pagination: widow-orphan;
  font-size: 10.0pt;
  font-family: "Times New Roman",serif; }

div.formula, div.formula p {
  tab-stops: center 241.0pt right 17.0cm; }

body {
  tab-interval: 36.0pt; }

.coverpage_docnumber {
  text-align: center;
  font-size: 14.0pt;
  font-weight: bold; }

.coverpage_techcommittee {
  text-align: center;
  font-size: 12.0pt; }

.coverpage_docstage {
  text-align: center;
  font-size: 30.0pt;
  color: #485094; }

div.coverpage_warning {
  mso-element: para-border-div;
  border: solid windowtext 1.0pt #485094;
  mso-border-alt: solid windowtext .5pt;
  padding: 1.0pt 4.0pt 1.0pt 4.0pt #485094;
  font-size: 10.0pt;
  margin-left: 4.25pt;
  margin-right: 4.25pt; }

.coverpage_warning {
  color: #485094;
  font-size: 10.0pt; }

a.TableFootnoteRef, span.TableFootnoteRef {
  mso-style-priority: 99;
  mso-style-parent: "Footnote Reference";
  vertical-align: super; }

aside {
  font-size: 11.0pt; }

.example-title {
  font-weight: bold;
  margin-left: 0pt; }

p.example, li.example, div.example, td.example {
  mso-pagination: none;
  font-size: 10.0pt;
  font-family: "Times New Roman",serif; }

div.example {
  margin-right: 0pt;
  margin-left: 0pt;
  margin-top: 0cm;
  margin-bottom: 0cm; }

p.example, li.example {
  margin-right: 0pt;
  margin-left: 0pt; }

td.example p.MsoListParagraph {
  font-size: 10.0pt; }

div.example p.MsoListParagraph {
  font-size: 10.0pt; }

div.Note p.MsoListParagraph {
  font-size: 11.0pt;
  margin-left: 1.0cm; }

div.Note span.stem {
  font-size: 11.0pt; }

div.Note p.Sourcecode, div.Note pre.Sourcecode {
  font-size: 9.0pt;
  margin-left: 1.0cm; }

div.Note table.dl {
  font-size: 11.0pt;
  margin-left: 1.0cm; }

span.note_label, span.example_label, td.example_label, td.note_label {
  font-size: 11.0pt;
  font-family: "Times New Roman",serif; }

table.dl {
  margin-top: 0cm;
  width: 95%;
  mso-table-layout-alt: auto;
  margin-right: 0cm;
  margin-bottom: 11.0pt;
  margin-left: 0cm; }

table.biblio td {
  margin-bottom: 6pt; }

-->
    </style>
  </head>
  <body lang="EN-US" link="blue" vlink="#954F72" xml:lang="EN-US">
    <div class="WordSection1">




<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" width="663" style="border-collapse:collapse;mso-table-layout-alt:fixed;mso-padding-alt:  0cm 5.4pt 0cm 5.4pt">
 <tr style="mso-yfti-irow:0;mso-yfti-firstrow:yes;height:70.9pt;mso-height-rule:   exactly">
  <td width="95" colspan="2" valign="top" style="width:71.4pt;padding:0cm 5.4pt 0cm 5.4pt;   height:70.9pt;mso-height-rule:exactly">
  <p class="MsoNormal"><v:shapetype id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
   <v:stroke joinstyle="miter"/>
   <v:formulas>
    <v:f eqn="if lineDrawn pixelLineWidth 0"/>
    <v:f eqn="sum @0 1 0"/>
    <v:f eqn="sum 0 0 @1"/>
    <v:f eqn="prod @2 1 2"/>
    <v:f eqn="prod @3 21600 pixelWidth"/>
    <v:f eqn="prod @3 21600 pixelHeight"/>
    <v:f eqn="sum @0 0 1"/>
    <v:f eqn="prod @6 1 2"/>
    <v:f eqn="prod @7 21600 pixelWidth"/>
    <v:f eqn="sum @8 21600 0"/>
    <v:f eqn="prod @7 21600 pixelHeight"/>
    <v:f eqn="sum @10 21600 0"/>
   </v:formulas>
   <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
   <o:lock v:ext="edit" aspectratio="t"/>
  </v:shapetype><v:shape id="Picture_x0020_2" o:spid="_x0000_s1026" type="#_x0000_t75" alt="Fond-Rec_e" style="position:absolute;left:0;text-align:left;    margin-left:-75.7pt;margin-top:-60.0pt;width:123.6pt;height:848.15pt;    z-index:251659264;visibility:visible;mso-wrap-style:square;    mso-width-percent:0;mso-height-percent:0;mso-wrap-distance-left:9pt;    mso-wrap-distance-top:0;mso-wrap-distance-right:9pt;    mso-wrap-distance-bottom:0;mso-position-horizontal:absolute;    mso-position-horizontal-relative:text;mso-position-vertical:absolute;    mso-position-vertical-relative:text;mso-width-percent:0;    mso-height-percent:0;mso-width-relative:margin;mso-height-relative:margin" o:allowincell="f">
  <v:imagedata src="G.191_files/98a841c1-3065-4be1-a54d-e5127e04d051.png" o:title="Fond-Rec_e" width="98" height="680"/>
  </v:shape><a name="_Hlk526346232" id="_Hlk526346232"><span lang="EN-GB" xml:lang="EN-GB"><o:p>&#xA0;</o:p></span></a></p>
  <span style="mso-bookmark:_Hlk526346232"></span>
  <p class="MsoNormal" style="margin-top:0cm"><span style="mso-bookmark:_Hlk526346232"><b style="mso-bidi-font-weight:normal"><span lang="EN-US" style="font-size:8.0pt;   mso-bidi-font-size:10.0pt;mso-ansi-language:EN-US" xml:lang="EN-US"><o:p>&#xA0;</o:p></span></b></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
  <td width="568" colspan="3" valign="top" style="width:426.0pt;padding:0cm 5.4pt 0cm 5.4pt;   height:70.9pt;mso-height-rule:exactly">
  <p class="MsoNormal" style="margin-top:0cm"><span style="mso-bookmark:_Hlk526346232"><span lang="EN-US" style="font-family:&quot;Arial&quot;,sans-serif;mso-ansi-language:EN-US" xml:lang="EN-US"><o:p>&#xA0;</o:p></span></span></p>
  <br style="mso-ignore:vglayout" clear="ALL"/>
  <p class="MsoNormal" style="margin-top:14.2pt"><span style="mso-bookmark:_Hlk526346232"><b><span lang="EN-GB" style="font-family:&quot;Arial&quot;,sans-serif;color:gray;letter-spacing:   5.0pt" xml:lang="EN-GB">International Telecommunication Union</span></b></span><span style="mso-bookmark:_Hlk526346232"><b><span lang="EN-US" style="font-size:9.0pt;   mso-bidi-font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;mso-ansi-language:   EN-US" xml:lang="EN-US"><o:p></o:p></span></b></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
 </tr>
 <tr style="mso-yfti-irow:1;height:49.6pt;mso-height-rule:exactly">
  <td width="95" colspan="2" valign="top" style="width:71.4pt;padding:0cm 5.4pt 0cm 5.4pt;   height:49.6pt;mso-height-rule:exactly"><span style="mso-bookmark:_Hlk526346232"></span>
  <p class="MsoNormal" style="margin-top:0cm"><span style="mso-bookmark:_Hlk526346232"><span lang="EN-US" style="mso-ansi-language:EN-US" xml:lang="EN-US"><o:p>&#xA0;</o:p></span></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
  <td width="568" colspan="3" valign="top" style="width:426.0pt;padding:0cm 5.4pt 0cm 5.4pt;   height:49.6pt;mso-height-rule:exactly"><span style="mso-bookmark:_Hlk526346232"></span>
  <p class="MsoNormal"><span style="mso-bookmark:_Hlk526346232"><span lang="EN-US" style="mso-ansi-language:EN-US" xml:lang="EN-US"><o:p>&#xA0;</o:p></span></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
 </tr>
 <tr style="mso-yfti-irow:2;mso-row-margin-left:71.4pt">
  <td style="mso-cell-special:placeholder;border:none;padding:0cm 0cm 0cm 0cm" width="95" colspan="2"><p class="MsoNormal">&#xA0;</p></td>
  <td width="168" valign="top" style="width:126.0pt;padding:0cm 4.25pt 0cm 4.25pt">
  <p class="MsoNormal"><span style="mso-bookmark:_Hlk526346232"><b style="mso-bidi-font-weight:normal"><span lang="EN-US" style="font-size:36.0pt;   mso-bidi-font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;mso-bidi-font-family:   &quot;Times New Roman&quot;;letter-spacing:2.0pt;mso-ansi-language:EN-US" xml:lang="EN-US">ITU-T</span></b></span><span style="mso-bookmark:_Hlk526346232"><b style="mso-bidi-font-weight:normal"><span lang="EN-US" style="font-size:9.0pt;mso-bidi-font-size:10.0pt;mso-ansi-language:   EN-US" xml:lang="EN-US"><o:p></o:p></span></b></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
  <td width="400" colspan="2" valign="top" style="width:300.0pt;padding:0cm 4.25pt 0cm 4.25pt">
  <p class="MsoNormal" align="right" style="margin-top:12.0pt;text-align:right"><span style="mso-bookmark:_Hlk526346232">
    
    <a name="dnume" id="dnume"><b style="mso-bidi-font-weight:   normal"><span lang="EN-US" style="font-size:30.0pt;mso-bidi-font-size:10.0pt;   font-family:&quot;Arial&quot;,sans-serif;mso-ansi-language:EN-US" xml:lang="EN-US">G.191<o:p></o:p></span></b></a>
    
  </span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"><span style="mso-bookmark:dnume"></span></span>
 </tr>
 <tr style="mso-yfti-irow:3;height:48.7pt;mso-row-margin-left:71.4pt">
  <td style="mso-cell-special:placeholder;border:none;padding:0cm 0cm 0cm 0cm" width="95" colspan="2"><p class="MsoNormal">&#xA0;</p></td>
  <td width="303" colspan="2" valign="top" style="width:227.45pt;padding:0cm 4.25pt 0cm 4.25pt;   height:48.7pt">
    
  <p class="MsoNormal" align="left" style="text-align:left"><span style="mso-bookmark:   _Hlk526346232"><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;   mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US" xml:lang="EN-US">TELECOMMUNICATION</span></span><span style="mso-bookmark:_Hlk526346232"><span lang="EN-US" style="font-size:10.0pt;   font-family:&quot;Arial&quot;,sans-serif;mso-ansi-language:EN-US" xml:lang="EN-US"><br/>
  </span></span><span style="mso-bookmark:_Hlk526346232"><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;mso-bidi-font-family:   &quot;Times New Roman&quot;;mso-ansi-language:EN-US" xml:lang="EN-US">STANDARDIZATION SECTOR<br/>
  OF ITU</span></span><span style="mso-bookmark:_Hlk526346232"><b style="mso-bidi-font-weight:normal"><span lang="EN-US" style="font-size:10.0pt;   mso-ansi-language:EN-US" xml:lang="EN-US"><o:p></o:p></span></b></span></p>
  
      
    

  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
  <td width="265" valign="top" style="width:198.55pt;padding:0cm 4.25pt 0cm 4.25pt;   height:48.7pt">
  
  
  <p class="MsoNormal" align="right" style="margin-top:0cm;text-align:right">
  <span style="mso-bookmark:_Hlk526346232"><a name="ddatee" id="ddatee"><span lang="EN-US" style="font-size:14.0pt;mso-bidi-font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;   mso-ansi-language:EN-US" xml:lang="EN-US">(01/2019)<span style="mso-spacerun:yes">&#xA0;&#xA0; </span><o:p></o:p></span></a></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"><span style="mso-bookmark:ddatee"></span></span>
 </tr>
 <tr style="mso-yfti-irow:4;page-break-inside:avoid;height:6.0cm;mso-height-rule:   exactly">
  <td width="95" valign="top" style="width:70.9pt;padding:0cm 5.4pt 0cm 5.4pt;   height:6.0cm;mso-height-rule:exactly"><span style="mso-bookmark:_Hlk526346232"></span>
  <p class="MsoNormal" style="tab-stops:39.7pt 59.55pt 79.4pt 99.25pt right 17.0cm"><span style="mso-bookmark:_Hlk526346232"><span lang="EN-US" style="font-size:9.0pt;   mso-bidi-font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;mso-bidi-font-family:   &quot;Times New Roman&quot;;mso-ansi-language:EN-US" xml:lang="EN-US"><o:p>&#xA0;</o:p></span></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
  <td width="569" colspan="4" valign="bottom" style="width:426.5pt;border:none;   border-bottom:solid windowtext 1.5pt;padding:0cm 5.4pt 0cm 5.4pt;height:6.0cm;   mso-height-rule:exactly">
    
  <p class="MsoNormal" align="left" style="text-align:left;tab-stops:39.7pt 59.55pt 79.4pt 99.25pt right 17.0cm"><span style="mso-bookmark:_Hlk526346232"><a name="dsece" id="dsece"><span lang="EN-US" style="font-size:16.0pt;mso-bidi-font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;   mso-ansi-language:EN-US" xml:lang="EN-US">SERIES G: TRANSMISSION SYSTEMS AND MEDIA, DIGITAL SYSTEMS AND NETWORKS<o:p></o:p></span></a></span></p>
  
  
  <p class="MsoNormal" align="left" style="text-align:left;tab-stops:39.7pt 59.55pt 79.4pt 99.25pt right 17.0cm"><span style="mso-bookmark:_Hlk526346232"><span style="mso-bookmark:dsece"><span lang="EN-US" style="font-size:16.0pt;mso-bidi-font-size:10.0pt;font-family:   &quot;Arial&quot;,sans-serif;mso-ansi-language:EN-US" xml:lang="EN-US">International telephone connections and circuits&#xA0;&#x2014;Software tools for transmission systems<o:p></o:p></span></span></span></p>
  
      
  
  <span style="mso-bookmark:_Hlk526346232"><span style="mso-bookmark:dsece"></span></span>
  <p class="MsoNormal" align="left" style="text-align:left;tab-stops:39.7pt 59.55pt 79.4pt 99.25pt right 17.0cm"><span style="mso-bookmark:_Hlk526346232"><span style="mso-bookmark:dsece"><span lang="EN-US" style="font-size:16.0pt;mso-bidi-font-size:10.0pt;font-family:   &quot;Arial&quot;,sans-serif;mso-ansi-language:EN-US" xml:lang="EN-US"><o:p>&#xA0;</o:p></span></span></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"><span style="mso-bookmark:dsece"></span></span>
 </tr>
 <tr style="mso-yfti-irow:5;page-break-inside:avoid;height:4.0cm;mso-height-rule:   exactly">
  <td width="95" valign="top" style="width:70.9pt;padding:0cm 5.4pt 0cm 5.4pt;   height:4.0cm;mso-height-rule:exactly"><span style="mso-bookmark:_Hlk526346232"></span>
  <p class="MsoNormal" style="tab-stops:39.7pt 59.55pt 79.4pt 99.25pt right 17.0cm"><span style="mso-bookmark:_Hlk526346232"><span lang="EN-US" style="font-size:9.0pt;   mso-bidi-font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;mso-bidi-font-family:   &quot;Times New Roman&quot;;mso-ansi-language:EN-US" xml:lang="EN-US"><o:p>&#xA0;</o:p></span></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
  <td width="569" colspan="4" valign="top" style="width:426.5pt;padding:0cm 5.4pt 0cm 5.4pt;   height:4.0cm;mso-height-rule:exactly">
  <p class="MsoNormal" align="left" style="text-align:left;tab-stops:39.7pt 59.55pt 79.4pt 99.25pt right 17.0cm"><span style="mso-bookmark:_Hlk526346232"><a name="c1tite" id="c1tite">
    <span lang="EN-GB" style="font-size:18.0pt;mso-bidi-font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;   mso-bidi-font-family:&quot;Times New Roman&quot;" xml:lang="EN-GB">
  <b>Software tools for speech and audio coding standardization</b>
  
  </span>
  </a></span><span style="mso-bookmark:_Hlk526346232"><span style="mso-bookmark:c1tite"><b><span lang="EN-US" style="font-size:18.0pt;mso-bidi-font-size:10.0pt;font-family:   &quot;Arial&quot;,sans-serif;mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:   EN-US" xml:lang="EN-US"><o:p></o:p></span></b></span></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"><span style="mso-bookmark:c1tite"></span></span>
 </tr>
 
  
  <tr style="mso-yfti-irow:6;mso-yfti-lastrow:yes;page-break-inside:avoid;   height:2.5cm;mso-height-rule:exactly">
  <td width="95" colspan="5" valign="top" style="width:70.9pt;border:none;   padding:0cm 5.4pt 0cm 5.4pt;height:4.0cm;mso-height-rule:exactly">
</td>
</tr>
 
 
 <tr style="mso-yfti-irow:6;mso-yfti-lastrow:yes;page-break-inside:avoid;   height:1.5cm;mso-height-rule:exactly">
  <td width="95" valign="top" style="width:70.9pt;padding:0cm 5.4pt 0cm 5.4pt;   height:1.5cm;mso-height-rule:exactly"><span style="mso-bookmark:_Hlk526346232"></span>
  <p class="MsoNormal" style="tab-stops:39.7pt 59.55pt 79.4pt 99.25pt right 17.0cm"><span style="mso-bookmark:_Hlk526346232"><span lang="EN-US" style="font-size:9.0pt;   mso-bidi-font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;mso-bidi-font-family:   &quot;Times New Roman&quot;;mso-ansi-language:EN-US" xml:lang="EN-US"><o:p>&#xA0;</o:p></span></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
  <td width="569" colspan="4" valign="bottom" style="width:426.5pt;padding:0cm 5.4pt 0cm 5.4pt;   height:70.9pt;mso-height-rule:exactly">
  <p class="MsoNormal" align="left" style="margin-top:3.0pt;margin-right:0cm;   margin-bottom:12.0pt;margin-left:0cm;text-align:left;tab-stops:39.7pt 59.55pt 79.4pt 99.25pt right 17.0cm"><span style="mso-bookmark:_Hlk526346232"><a name="dnum2e" id="dnum2e"></a>
  
  <span lang="EN-US" style="font-size:16.0pt;mso-bidi-font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif;   mso-ansi-language:EN-US" xml:lang="EN-US">Recommendation<span style="mso-spacerun:yes">&#xA0;
  </span>ITU&#x2011;T<span style="mso-spacerun:yes">&#xA0; </span>G.191<o:p></o:p></span>
  
  </span></p>
  <span style="mso-bookmark:_Hlk526346232"></span>
  <p class="MsoNormal" align="left" style="margin-top:3.0pt;text-align:left;   tab-stops:39.7pt 59.55pt 79.4pt 99.25pt right 17.0cm"><span style="mso-bookmark:   _Hlk526346232"><span lang="EN-US" style="font-size:16.0pt;mso-bidi-font-size:   10.0pt;font-family:&quot;Arial&quot;,sans-serif;mso-ansi-language:EN-US" xml:lang="EN-US"><o:p>&#xA0;</o:p></span></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
 </tr>
</table>

<p class="MsoNormal" align="right" style="margin-top:0.0pt;text-align:right; tab-stops:39.7pt 59.55pt 79.4pt 99.25pt right 17.0cm">
  <span style="mso-bookmark: _Hlk526346232">
    <span lang="EN-US" style="font-size:9.0pt;mso-bidi-font-size:10.0pt; font-family:&quot;Arial&quot;,sans-serif;mso-bidi-font-family:&quot;Times New Roman&quot;; mso-ansi-language:EN-US;mso-fareast-language:ZH-CN;mso-no-proof:yes" xml:lang="EN-US">
      <v:shape id="Picture_x0020_1" o:spid="_x0000_i1033" type="#_x0000_t75" alt="logo_E" style="width:68pt;height:75pt;visibility:visible;mso-wrap-style:square">
<v:imagedata src="G.191_files/1bd81386-51c3-4759-afc0-73619be671ff.svg" o:title="logo_E" width="272" height="300"/>
</v:shape>
    </span>
  </span>
  <span style="mso-bookmark:_Hlk526346232">
    <span lang="EN-US" style="font-size:9.0pt;mso-bidi-font-size:10.0pt;font-family:&quot;Arial&quot;,sans-serif; mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US" xml:lang="EN-US">
      <o:p></o:p>
    </span>
  </span>
</p>


      <p class="MsoNormal">&#xA0;</p>
    </div>
    <p class="MsoNormal">
      <br clear="all" class="section"/>
    </p>
    <div class="WordSection2">
<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="border-collapse:collapse;mso-table-layout-alt:fixed;mso-padding-alt:&#10; 0cm 5.4pt 0cm 5.4pt">
 <tr style="mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes">
  <td width="663" valign="top" style="width:497.25pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="RecNo"><span style="mso-bookmark:_Hlk526346232"><a name="irecnoe" id="irecnoe"></a><span lang="FR-CH" style="mso-ansi-language:FR-CH;font-size:14pt;font-weight:bold;" xml:lang="FR-CH">Recommendation ITU-T G.191<p class="MsoNormal"></p></span></span></p>
  <p class="Rectitle" align="center"><span style="mso-bookmark:_Hlk526346232"><span lang="FR-CH" style="mso-ansi-language:FR-CH;font-size:14pt;font-weight:bold;" xml:lang="FR-CH">Software tools for speech and audio coding standardization<p class="MsoNormal"></p></span></span></p>
  
  
  
  
  
  
  <span style="mso-bookmark:_Hlk526346232"></span>
  <p class="MsoNormal"><span style="mso-bookmark:_Hlk526346232"><span lang="FR-CH" style="mso-ansi-language:FR-CH" xml:lang="FR-CH"><p class="MsoNormal">&#xA0;</p></span></span></p>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
 </tr>
</table>

<p class="MsoNormal">
  <span style="mso-bookmark:_Hlk526346232">
    <span lang="FR-CH" style="mso-ansi-language:FR-CH" xml:lang="FR-CH">
      <p class="MsoNormal">&#xA0;</p>
    </span>
  </span>
</p>



<p class="MsoNormal"><wrapblock><shapetype id="_x0000_t202" coordsize="21600,21600" o:spt="202" path="m,l,21600r21600,l21600,xe">
  <stroke joinstyle="miter"></stroke>
  <path gradientshapeok="t" o:connecttype="rect"></path>
 </shapetype><shape id="Text_x0020_Box_x0020_1" o:spid="_x0000_s1026" type="#_x0000_t202" style="position:absolute;margin-left:-8pt;margin-top:141.75pt;&#10;  width:448.15pt;height:69.8pt;z-index:-251657216;visibility:visible;&#10;  mso-wrap-style:square;mso-width-percent:0;mso-height-percent:0;&#10;  mso-wrap-distance-left:9pt;mso-wrap-distance-top:0;mso-wrap-distance-right:9pt;&#10;  mso-wrap-distance-bottom:0;mso-position-horizontal:absolute;&#10;  mso-position-horizontal-relative:text;mso-position-vertical:absolute;&#10;  mso-position-vertical-relative:top-margin-area;mso-width-percent:0;&#10;  mso-height-percent:0;mso-width-relative:margin;mso-height-relative:margin;&#10;  v-text-anchor:top" o:gfxdata="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&#10;" o:allowoverlap="f" filled="f" stroked="f" strokeweight=".5pt">
  <fill o:detectmouseclick="t"></fill>
  <textbox style="mso-fit-shape-to-text:t">
      <div><a name="abstractbox" id="abstractbox"></a>
  	 <div class="Abstract"><a name="_summary" id="_summary"></a>
        <p class="h1Preface">Summary</p>
        <p class="MsoNormal"><a name="_d25aab84-9851-42cb-a4ce-6327ddd37040" id="_d25aab84-9851-42cb-a4ce-6327ddd37040"></a>Recommendation ITU-T G.191 provides source code for speech and audio processing modules for narrowband, wideband and super-wideband telephony applications. The set includes codecs, filters and noise generators.</p>
        <p class="MsoNormal"><a name="_c8ee33c1-de65-42af-85f0-6879d5dc15e6" id="_c8ee33c1-de65-42af-85f0-6879d5dc15e6"></a>This edition introduces changes to <a href="#annexA">Annex A</a>, which describes the ITU-T software tool library (STL) containing a high-quality, portable C code library for speech-processing applications. This release of the STL, also known as STL2019, incorporates new basic operators to accommodate state-of-the-art processor architectures that support wide accumulators, single instruction multiple data (SIMD) and very long instruction word (VLIW). Thus, the new operators provide support for 64-bit accumulator, complex numbers, enhanced 32-bit operations and additional control code operators.</p>
        <p class="MsoNormal"><a name="_a9d3834b-51ab-4e8b-89bc-ad357e03eaf4" id="_a9d3834b-51ab-4e8b-89bc-ad357e03eaf4"></a>The software package was reworked to make it available as a truly open-source project and is therefore hosted on an open-source collaboration platform. The build toolchain now uses CMake to generate platform-dependent and tool-dependent build scripts, as well as to execute regression tests for each module in the STL.</p>
        <p class="MsoNormal"><a name="_f447f6b3-bbc3-4d1b-a0e6-734f1d506c49" id="_f447f6b3-bbc3-4d1b-a0e6-734f1d506c49"></a>Recommendation ITU-T G.191 includes an electronic attachment containing STL2019 and manual.</p>
      </div></div>
     </textbox>
  <wrap type="topAndBottom" anchory="margin"></wrap>
  <anchorlock></anchorlock>
 </shape></wrapblock><br style="mso-ignore:vglayout" clear="ALL"/>
<span lang="EN-US" style="mso-ansi-language:EN-US" xml:lang="EN-US"><p class="MsoNormal"></p></span></p>



 

<p class="MsoNormal">
  <span style="mso-bookmark:_Hlk526346232">
    <span lang="EN-US" style="mso-ansi-language:EN-US" xml:lang="EN-US">
      <p class="MsoNormal">&#xA0;</p>
    </span>
  </span>
</p>

<p class="MsoNormal">
  <span style="mso-bookmark:_Hlk526346232">
    <span lang="EN-US" style="mso-ansi-language:EN-US" xml:lang="EN-US">
      <p class="MsoNormal">&#xA0;</p>
    </span>
  </span>
</p>

<!--
<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=663
 style='width:497.4pt;border-collapse:collapse;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td width=663 valign=top style='width:497.4pt;padding:0cm 5.4pt 0cm 5.4pt'>
-->
    <div><a name="historybox" id="historybox"></a>
    <div class="history"><a name="_history" id="_history"></a>
        <p class="h1Preface">History</p>
        <div align="center" class="table_container">
          <table class="MsoNormalTable" style="mso-table-anchor-horizontal:column;mso-table-overlap:never;border-spacing:0;border-width:1px;"><a name="_455d98dd-378a-481c-aeaa-6b65ad203db7" id="_455d98dd-378a-481c-aeaa-6b65ad203db7"></a>
            <colgroup>
              <col width="22.2222%"/>
              <col width="22.2222%"/>
              <col width="11.1111%"/>
              <col width="22.2222%"/>
              <col width="22.2223%"/>
            </colgroup>
            <tbody>
              <tr>
                <td valign="top" align="center" style="" width="22.2222%">Edition</td>
                <td valign="top" align="center" style="" width="22.2222%">Recommendation</td>
                <td valign="top" align="center" style="" width="11.1111%">Approval</td>
                <td valign="top" align="center" style="" width="22.2222%">Study Group</td>
                <td valign="top" align="center" style="" width="22.2223%">Unique ID<a href="#_455d98dd-378a-481c-aeaa-6b65ad203db7a" class="TableFootnoteRef">a)</a></td>
              </tr>
              <tr>
                <td valign="top" align="center" style="" width="22.2222%">1.0</td>
                <td valign="top" align="left" style="" width="22.2222%">ITU-T G.191</td>
                <td valign="top" align="center" style="" width="11.1111%">1993-03-12</td>
                <td valign="top" align="center" style="" width="22.2222%">XV</td>
                <td valign="top" align="left" style="" width="22.2223%">
<a href="http://handle.itu.int/11.1002/1000/798" class="url">11.1002/1000/798</a>
</td>
              </tr>
              <tr>
                <td valign="top" align="center" style="" width="22.2222%">2.0</td>
                <td valign="top" align="left" style="" width="22.2222%">ITU-T G.191</td>
                <td valign="top" align="center" style="" width="11.1111%">1996-11-11</td>
                <td valign="top" align="center" style="" width="22.2222%">15</td>
                <td valign="top" align="left" style="" width="22.2223%">
<a href="http://handle.itu.int/11.1002/1000/3812" class="url">11.1002/1000/3812</a>
</td>
              </tr>
              <tr>
                <td valign="top" align="center" style="" width="22.2222%">3.0</td>
                <td valign="top" align="left" style="" width="22.2222%">ITU-T G.191</td>
                <td valign="top" align="center" style="" width="11.1111%">2000-11-17</td>
                <td valign="top" align="center" style="" width="22.2222%">16</td>
                <td valign="top" align="left" style="" width="22.2223%">
<a href="http://handle.itu.int/11.1002/1000/5275" class="url">11.1002/1000/5275</a>
</td>
              </tr>
              <tr>
                <td valign="top" align="center" style="" width="22.2222%">4.0</td>
                <td valign="top" align="left" style="" width="22.2222%">ITU-T G.191</td>
                <td valign="top" align="center" style="" width="11.1111%">2005-09-13</td>
                <td valign="top" align="center" style="" width="22.2222%">16</td>
                <td valign="top" align="left" style="" width="22.2223%">
<a href="http://handle.itu.int/11.1002/1000/8581" class="url">11.1002/1000/8581</a>
</td>
              </tr>
              <tr>
                <td valign="top" align="center" style="" width="22.2222%">5.0</td>
                <td valign="top" align="left" style="" width="22.2222%">ITU-T G.191</td>
                <td valign="top" align="center" style="" width="11.1111%">2010-03-29</td>
                <td valign="top" align="center" style="" width="22.2222%">16</td>
                <td valign="top" align="left" style="" width="22.2223%">
<a href="http://handle.itu.int/11.1002/1000/10651" class="url">11.1002/1000/10651</a>
</td>
              </tr>
              <tr>
                <td valign="top" align="center" style="" width="22.2222%">6.0</td>
                <td valign="top" align="left" style="" width="22.2222%">ITU-T G.191</td>
                <td valign="top" align="center" style="" width="11.1111%">2019-01-13</td>
                <td valign="top" align="center" style="" width="22.2222%">12</td>
                <td valign="top" align="left" style="" width="22.2223%">
<a href="http://handle.itu.int/11.1002/1000/13830" class="url">11.1002/1000/13830</a>
</td>
              </tr>
            </tbody>
          <tfoot><tr><td colspan="5" style="" width="100.00000000000001%"><div class="TableFootnote"><div><a name="ftn_455d98dd-378a-481c-aeaa-6b65ad203db7a" id="ftn_455d98dd-378a-481c-aeaa-6b65ad203db7a"></a>
  
  <p class="TableFootnote"><a name="_94b9d4c9-e405-4ab8-910a-410cb6b707df" id="_94b9d4c9-e405-4ab8-910a-410cb6b707df"></a><span>
    <span class="TableFootnoteRef"><a name="_455d98dd-378a-481c-aeaa-6b65ad203db7a" id="_455d98dd-378a-481c-aeaa-6b65ad203db7a"></a>a)</span>
    <span style="mso-tab-count:1">&#xA0; </span>
  </span>To access the Recommendation, type the URL <a href="http://handle.itu.int/" class="url">http://handle.itu.int/</a> in the address field of your web browser, followed by the Recommendation's unique ID. For example, <a href="http://handle.itu.int/11.1002/1000/11830-en" class="url">http://handle.itu.int/11.1002/1000/11830-en</a>.</p>
</div></div></td></tr></tfoot></table>
        </div>
      </div></div>
<!--
  <span style='mso-bookmark:_Hlk526346232'></span>
  <p class=Headingb style='margin-bottom:6.0pt'><span style='mso-bookmark:_Hlk526346232'><span
  lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></span></p>
  </td>
  <span style='mso-bookmark:_Hlk526346232'></span>
 </tr>
</table>
-->

<p class="MsoNormal">
  <span style="mso-bookmark:_Hlk526346232">
    <span lang="EN-US" style="mso-ansi-language:EN-US" xml:lang="EN-US">
      <p class="MsoNormal">&#xA0;</p>
    </span>
  </span>
</p>

<div><a name="sourcebox" id="sourcebox"></a></div>

<p class="MsoNormal">
  <span style="mso-bookmark:_Hlk526346232">
    <span lang="EN-US" style="mso-ansi-language:EN-US" xml:lang="EN-US">
      <p class="MsoNormal">&#xA0;</p>
    </span>
  </span>
</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="border-collapse:collapse;mso-table-layout-alt:fixed;mso-padding-alt:&#10; 0cm 5.4pt 0cm 5.4pt">
 <tr style="mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes">
  <td width="663" valign="top" style="width:497.25pt;padding:0cm 5.4pt 0cm 5.4pt">
    <div><a name="keywordsbox" id="keywordsbox"></a>
    <div class="Keyword">
        <p class="h1Preface">Keywords</p>
        <p class="MsoNormal">Dsp operators, G.711, G.722, G.726, G.728, MNRU, STL2019, filters, open source, reverb, sv56.</p>
      </div></div>
  </td>
  <span style="mso-bookmark:_Hlk526346232"></span>
 </tr>
</table>

<div><a name="change_logbox" id="change_logbox"></a></div>

  

<p class="MsoNormal">
  <span style="mso-bookmark:_Hlk526346232">
    <span lang="EN-US" style="mso-ansi-language:EN-US" xml:lang="EN-US">
      <p class="MsoNormal">&#xA0;</p>
    </span>
  </span>
</p>


  
  
<p class="MsoNormal">
  <br clear="all" style="page-break-before:always"/>
</p>


<div class="boilerplate-legal">
    <div><p class="boilerplateHdr">FOREWORD</p>

<p class="boilerplate"><a name="_05ea0241-5103-4b7d-a56d-4d0349e85e77" id="_05ea0241-5103-4b7d-a56d-4d0349e85e77"></a>The International Telecommunication Union (ITU) is the United Nations specialized agency in the field of telecommunications , information and communication technologies (ICTs). The ITU Telecommunication Standardization Sector (ITU-T) is a permanent organ of ITU. ITU-T is responsible for studying technical, operating and tariff questions and issuing Recommendations on them with a view to standardizing telecommunications on a worldwide basis.</p>
<p class="boilerplate"><a name="_4f759937-94bb-4755-8826-31b9427a5601" id="_4f759937-94bb-4755-8826-31b9427a5601"></a>The World Telecommunication Standardization Assembly (WTSA), which meets every four years, establishes the topics for study by the ITU T study groups which, in turn, produce Recommendations on these topics.</p>
<p class="boilerplate"><a name="_495c595b-d14d-4e2d-82d6-41366100b7b5" id="_495c595b-d14d-4e2d-82d6-41366100b7b5"></a>The approval of ITU-T Recommendations is covered by the procedure laid down in WTSA Resolution 1 .</p>
<p class="boilerplate"><a name="_dfc837ab-8312-45d8-a096-6881b979797e" id="_dfc837ab-8312-45d8-a096-6881b979797e"></a>In some areas of information technology which fall within ITU-T's purview, the necessary standards are prepared on a collaborative basis with ISO and IEC.</p>


<div><p class="boilerplate">&#xA0;</p><p class="boilerplate">&#xA0;</p><p class="boilerplate">&#xA0;</p><p class="boilerplateHdr">NOTE</p>

<p class="boilerplate"><a name="_c0894030-2d57-4c99-b579-7102cd76c328" id="_c0894030-2d57-4c99-b579-7102cd76c328"></a>In this Recommendation, the expression "Administration" is used for conciseness to indicate both a telecommunication administration and a recognized operating agency .</p>
<p class="boilerplate"><a name="_cb9e3354-d6d1-453a-8a64-b463997665be" id="_cb9e3354-d6d1-453a-8a64-b463997665be"></a>Compliance with this Recommendation is voluntary. However, the Recommendation may contain certain mandatory provisions (to ensure, e.g., interoperability or applicability) and compliance with the Recommendation is achieved when all of these mandatory provisions are met. The words "shall" or some other obligatory language such as "must" and the negative equivalents are used to express requirements. The use of such words does not suggest that compliance with the Recommendation is required of any party .</p>
</div>

    </div>


  <p class="MsoNormal">&#xA0;</p><p class="MsoNormal">&#xA0;</p><p class="MsoNormal">&#xA0;</p></div>
<div class="boilerplate-license">
    <div><p class="boilerplateHdr">INTELLECTUAL PROPERTY RIGHTS</p>

      <p class="boilerplate"><a name="_15912404-b52c-4a77-ab4c-e061975c5796" id="_15912404-b52c-4a77-ab4c-e061975c5796"></a>ITU draws attention to the possibility that the practice or implementation of this Recommendation may involve the use of a claimed Intellectual Property Right. ITU takes no position concerning the evidence, validity or applicability of claimed Intellectual Property Rights, whether asserted by ITU members or others outside of the Recommendation development process.</p>
<p class="boilerplate"><a name="_a01ffceb-87cf-45d1-b8e6-f83c11bdcabf" id="_a01ffceb-87cf-45d1-b8e6-f83c11bdcabf"></a>As of the date of approval of this Recommendation, ITU had  received notice of intellectual property, protected by patents, which may be required to implement this Recommendation. However, implementers are cautioned that this may not represent the latest information and are therefore strongly urged to consult the TSB patent database at <a href="http://www.itu.int/ITU-T/ipr/" class="url">http://www.itu.int/ITU-T/ipr/</a>.
</p>
</div>
<p class="MsoNormal">&#xA0;</p><p class="MsoNormal">&#xA0;</p><p class="MsoNormal">&#xA0;</p></div>
<div class="boilerplate-copyright">
    <div>
      <p class="boilerplateHdr"><a name="_43231e5e-210b-4def-a59c-107d03a4cb0f" id="_43231e5e-210b-4def-a59c-107d03a4cb0f"></a>&#xA9; ITU 2019</p>
<p class="boilerplate"><a name="_581a30c8-3f07-49af-8b6a-b73ff6c22d04" id="_581a30c8-3f07-49af-8b6a-b73ff6c22d04"></a>All rights reserved. No part of this publication may be reproduced, by any means whatsoever, without the prior written permission of ITU.</p>
    </div>
  </div>

  
<b style="mso-bidi-font-weight:normal">
  <span lang="EN-US" style="font-size:12.0pt;&#10;mso-bidi-font-size:10.0pt;font-family:&quot;Times New Roman&quot;,serif;mso-fareast-font-family:&#10;&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:EN-US;&#10;mso-bidi-language:AR-SA" xml:lang="EN-US"><br clear="all" style="page-break-before:always"/>
</span>
</b>

<p class="MsoNormal" align="center" style="text-align:center">
<b>Table of Contents</b></p>
<p class="MsoNormal" style="tab-stops:right 17.0cm"><span style="mso-tab-count:1"></span>
  <b>Page</b></p>

<p class="MsoToc1"><span lang="EN-GB" xml:lang="EN-GB"><span style="mso-element:field-begin"></span><span style="mso-spacerun:yes">&#xA0;</span>TOC
  \o "1-2" \h \z \u <span style="mso-element:field-separator"></span></span>
<span class="MsoHyperlink"><span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc304059521">1. Scope<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc304059521 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span></span></p>

<p class="MsoToc1">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc140467777">2. References<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc140467777 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc1">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc505358351">3. Definitions<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc505358351 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc1">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc642649264">4. Abbreviations and acronyms<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc642649264 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc1">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc326220338">5. Conventions<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc326220338 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc1">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc405160389">6. Software tools<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc405160389 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc1">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc473830169">7. License and copyright<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc473830169 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc1">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc037229312">
          Annex A
           
           
          List of software tools available
        <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc037229312 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc825517785">A.1. Example programs available<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc825517785 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc977445119">A.2. Rate change module with finite impulse response routines<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc977445119 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc456913068">A.3. Rate change module with infinite impulse response routines<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc456913068 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc692309886">A.4. Error insertion module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc692309886 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc583977053">A.5. ITU-T G.711 module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc583977053 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc198554342">A.6. Packet loss concealment module of Appendix I of [ITU-T G.711]<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc198554342 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc339154358">A.7. ITU-T G.726 module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc339154358 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc501190047">A.8. Modulated noise reference unit module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc501190047 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc091509976">A.9. Speech voltmeter module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc091509976 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc307117689">A.10. Module with Users' Group on Software Tools utilities<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc307117689 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc462456609">A.11. ITU-T G.722 module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc462456609 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc547475183">A.12. RPE-LTP module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc547475183 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc048351602">A.13. ITU-T G.727 module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc048351602 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc702797970">A.14. Basic operators<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc702797970 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc323483920">A.15. Reverberation module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc323483920 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc273076813">A.16. Bit stream truncation module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc273076813 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc779501571">A.17. Frequency response calculation module<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc779501571 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc1">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc261340821">
          Annex B
           
           
          ITU-T software tools General Public Licence
        <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc261340821 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc776649170">B.1.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc776649170 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc748648237">B.2.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc748648237 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc149398890">B.3.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc149398890 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc374471827">B.4.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc374471827 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc895976958">B.5.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc895976958 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc846250164">B.6.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc846250164 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc011914921">B.7.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc011914921 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc367539782">B.8.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc367539782 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc434784453">B.9.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc434784453 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc492487514">B.10.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc492487514 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc2">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc804825153">B.11.<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc804825153 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc1">
  <span class="MsoHyperlink">
    <span lang="EN-GB" style="mso-no-proof:yes" xml:lang="EN-GB">
<a href="#_Toc589215152">Bibliography<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-tab-count:1 dotted">. </span>
</span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">
<span style="mso-element:field-begin"></span></span>
<span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"> PAGEREF _Toc589215152 \h </span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-separator"></span></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB">1</span>
  <span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"></span><span lang="EN-GB" class="MsoTocTextSpan" xml:lang="EN-GB"><span style="mso-element:field-end"></span></span></a></span>
  </span>
</p>

<p class="MsoToc1">
  <span lang="EN-GB" xml:lang="EN-GB">
    <span style="mso-element:field-end"></span>
  </span>
  <span lang="EN-GB" xml:lang="EN-GB">
    <p class="MsoNormal">&#xA0;</p>
  </span>
</p>





      <div class="authority">

  

  

  

</div>
      
      
      
      <p class="MsoNormal">&#xA0;</p>
    </div>
    <p class="MsoNormal">
      <br clear="all" class="section"/>
    </p>
    <div class="WordSection3">
      <p class="zzSTDTitle1">Recommendation ITU-T G.191</p>
      <p class="zzSTDTitle2">Software tools for speech and audio coding standardization</p>
      <div><a name="_scope" id="_scope"></a>
        <h1>1.<span style="mso-tab-count:1">&#xA0; </span>Scope</h1>
        <p class="MsoNormal"><a name="_f28344a1-a5ba-45df-9916-563df9eb03c9" id="_f28344a1-a5ba-45df-9916-563df9eb03c9"></a>This Recommendation<span style="mso-bookmark:_Ref425353082"><a class="FootnoteRef" href="#_ftn1" epub:type="footnote" style="mso-footnote-id:ftn1" name="_ftnref1" title="" id="_ftnref1"><span class="MsoFootnoteReference"><span style="mso-special-character:footnote"></span></span></a></span> provides a set of common, coherent and portable signal processing tools to facilitate the development of speech and audio coding algorithms, in particular within the standardization environment, where the following situations often happen:</p>
        
<p style="mso-list:l3 level1 lfo1;" class="MsoListParagraphCxSpFirst">
experimental results generated with different software tools may not be directly compared;
</p>
<p style="mso-list:l3 level1 lfo1;" class="MsoListParagraphCxSpMiddle">
software tools used by different organizations may not perfectly conform to related ITU T Recommendations, which may delay ITU-T standardization processes;
</p>
<p style="mso-list:l3 level1 lfo1;" class="MsoListParagraphCxSpMiddle">
ITU-T Recommendations may leave scope for different implementations;
</p>
<p style="mso-list:l3 level1 lfo1;" class="MsoListParagraphCxSpLast">
new speech and audio coding standards are increasing in complexity, leading to non bitexact specifications; furthermore, appropriate testing procedures to assure interoperability of different implementations are needed.
</p>

      </div>
      <div>
        <h1>2.<span style="mso-tab-count:1">&#xA0; </span>References</h1>
        <table class="biblio" border="0">
          <tbody>
            <tr><td colspan="2">
              <p class="MsoNormal"><a name="_4dac5893-df68-4270-bf6b-234dd3374d96" id="_4dac5893-df68-4270-bf6b-234dd3374d96"></a>The following ITU-T Recommendations and other references contain provisions which, through reference in this text, constitute provisions of this Recommendation. At the time of publication, the editions indicated were valid. All Recommendations and other references are subject to revision; users of this Recommendation are therefore encouraged to investigate the possibility of applying the most recent edition of the Recommendations and other references listed below. A list of the currently valid ITU-T Recommendations is regularly published. The reference to a document within this Recommendation does not give it, as a stand-alone document, the status of a Recommendation.</p>
            </td></tr>
            <tr class="NormRef"><a name="ITU-T_G.192" id="ITU-T_G.192"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;G.192]</td>
              <td>Recommendation ITU-T G.192, <i>A common digital parallel interface for speech standardization activities</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_G.711" id="ITU-T_G.711"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;G.711]</td>
              <td>Recommendation ITU-T G.711, <i>Pulse code modulation (PCM) of voice frequencies</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_G.712" id="ITU-T_G.712"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;G.712]</td>
              <td>Recommendation ITU-T G.712, <i>Transmission performance characteristics of pulse code modulation channels</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_G.718" id="ITU-T_G.718"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;G.718]</td>
              <td>Recommendation ITU-T G.718, <i>Frame error robust narrow-band and wideband embedded variable bit-rate coding of speech and audio from 8-32 kbit/s</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_G.722" id="ITU-T_G.722"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;G.722]</td>
              <td>Recommendation ITU-T G.722, <i>7 kHz audio-coding within 64 kbit/s</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_G.726" id="ITU-T_G.726"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;G.726]</td>
              <td>Recommendation ITU-T G.726, <i>40, 32, 24, 16 kbit/s Adaptive Differential Pulse Code Modulation (ADPCM)</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_G.727" id="ITU-T_G.727"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;G.727]</td>
              <td>Recommendation ITU-T G.727, <i>5-, 4-, 3- and 2-bit/sample embedded adaptive differential pulse code modulation (ADPCM)</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_G.728" id="ITU-T_G.728"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;G.728]</td>
              <td>Recommendation ITU-T G.728, <i>Coding of speech at 16 kbit/s using low-delay code excited linear prediction</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_G.729.1" id="ITU-T_G.729.1"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;G.729.1]</td>
              <td>Recommendation ITU-T G.729.1, <i>G.729-based embedded variable bit-rate coder: An 8-32 kbit/s scalable wideband coder bitstream interoperable with G.729</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_O.41" id="ITU-T_O.41"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;O.41]</td>
              <td>Recommendation ITU-T O.41, <i>Psophometer for use on telephone-type circuits</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_P.341" id="ITU-T_P.341"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;P.341]</td>
              <td>Recommendation ITU-T P.341, <i>Transmission characteristics for wideband digital loudspeaking and hands-free telephony terminals</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_P.48" id="ITU-T_P.48"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;P.48]</td>
              <td>Recommendation ITU-T P.48, <i>Specification for an intermediate reference system</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_P.56" id="ITU-T_P.56"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;P.56]</td>
              <td>Recommendation ITU-T P.56, <i>Objective measurement of active speech level</i>.</td>
            </tr>
            <tr class="NormRef"><a name="ITU-T_P.810" id="ITU-T_P.810"></a>
              <td style="vertical-align:top">[ITU&#x2011;T&#xA0;P.810]</td>
              <td>Recommendation ITU-T P.810, <i>Modulated noise reference unit (MNRU)</i>.</td>
            </tr>
          </tbody>
        </table>
      </div>
      <div><a name="_definitions" id="_definitions"></a>
        <h1>3.<span style="mso-tab-count:1">&#xA0; </span>Definitions</h1>
        <p class="MsoNormal"><a name="_3e19f64b-8e8d-4980-a4c2-de73851193fd" id="_3e19f64b-8e8d-4980-a4c2-de73851193fd"></a>None.</p>
      </div>
      <div class="Symbols"><a name="_abbreviations_and_acronyms" id="_abbreviations_and_acronyms"></a>
        <h1>4.<span style="mso-tab-count:1">&#xA0; </span>Abbreviations and acronyms</h1>
        <p class="MsoNormal"><a name="_95bb9c2c-f152-4105-ad05-f67ab83ffafc" id="_95bb9c2c-f152-4105-ad05-f67ab83ffafc"></a>This Recommendation uses the following abbreviations and acronyms:</p>
        <table class="dl">
          <tr>
            <td valign="top" align="left">
              <p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">FFT</p>
            </td>
            <td valign="top">
<p class="MsoNormal"><a name="_4d4731b3-4607-4fb8-9cae-a6c89c54f72b" id="_4d4731b3-4607-4fb8-9cae-a6c89c54f72b"></a>Fast Fourier Transform</p>
</td>
          </tr>
          <tr>
            <td valign="top" align="left">
              <p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">FIR</p>
            </td>
            <td valign="top">
<p class="MsoNormal"><a name="_f46dc208-2766-43df-9458-1f3e63a2b09d" id="_f46dc208-2766-43df-9458-1f3e63a2b09d"></a>Finite Impulse Response</p>
</td>
          </tr>
          <tr>
            <td valign="top" align="left">
              <p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">FIR-IRS</p>
            </td>
            <td valign="top">
<p class="MsoNormal"><a name="_680d72f8-bd07-4bd9-9ef9-bbf005469abb" id="_680d72f8-bd07-4bd9-9ef9-bbf005469abb"></a>Finite Impulse Response-Intermediate Reference System</p>
</td>
          </tr>
          <tr>
            <td valign="top" align="left">
              <p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">IIR</p>
            </td>
            <td valign="top">
<p class="MsoNormal"><a name="_4ec4fa3a-ec61-459b-8e8b-173f82e7539f" id="_4ec4fa3a-ec61-459b-8e8b-173f82e7539f"></a>Infinite Impulse Response</p>
</td>
          </tr>
          <tr>
            <td valign="top" align="left">
              <p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">PCM</p>
            </td>
            <td valign="top">
<p class="MsoNormal"><a name="_988d6e52-510b-4d58-bf7f-6fbed368d8ea" id="_988d6e52-510b-4d58-bf7f-6fbed368d8ea"></a>Pulse Code Modulation</p>
</td>
          </tr>
          <tr>
            <td valign="top" align="left">
              <p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">ROM</p>
            </td>
            <td valign="top">
<p class="MsoNormal"><a name="_35d98655-7c44-4106-9995-64f434a05edb" id="_35d98655-7c44-4106-9995-64f434a05edb"></a>Read Only Memory</p>
</td>
          </tr>
          <tr>
            <td valign="top" align="left">
              <p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">RPE-LTP</p>
            </td>
            <td valign="top">
<p class="MsoNormal"><a name="_527593f5-f0b7-4b9c-baa7-3485256fe8a5" id="_527593f5-f0b7-4b9c-baa7-3485256fe8a5"></a>Regular Pulse Excitation-Long Term Prediction</p>
</td>
          </tr>
          <tr>
            <td valign="top" align="left">
              <p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">STL</p>
            </td>
            <td valign="top">
<p class="MsoNormal"><a name="_8c0a499c-c737-402a-a353-1fdc33eb4f3e" id="_8c0a499c-c737-402a-a353-1fdc33eb4f3e"></a>Software Tool Library</p>
</td>
          </tr>
          <tr>
            <td valign="top" align="left">
              <p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">SIMD</p>
            </td>
            <td valign="top">
<p class="MsoNormal"><a name="_716dedc5-90d4-49ef-9b94-8f071a4790c0" id="_716dedc5-90d4-49ef-9b94-8f071a4790c0"></a>Single Instruction Multiple Data</p>
</td>
          </tr>
          <tr>
            <td valign="top" align="left">
              <p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">VLIW</p>
            </td>
            <td valign="top">
<p class="MsoNormal"><a name="_bf873091-7b12-4e1c-9c48-cb5628173df7" id="_bf873091-7b12-4e1c-9c48-cb5628173df7"></a>Very Long Instruction Word</p>
</td>
          </tr>
        </table>
      </div>
      <div><a name="_conventions" id="_conventions"></a>
        <h1>5.<span style="mso-tab-count:1">&#xA0; </span>Conventions</h1>
        <p class="MsoNormal"><a name="_91dade33-3a84-4088-a88d-abeef5e2342d" id="_91dade33-3a84-4088-a88d-abeef5e2342d"></a>None.</p>
      </div>
      <div><a name="_software_tools" id="_software_tools"></a>
        <h1>6.<span style="mso-tab-count:1">&#xA0; </span>Software tools</h1>
        <p class="MsoNormal"><a name="_c0441d76-671d-4409-be68-a5f6d669e433" id="_c0441d76-671d-4409-be68-a5f6d669e433"></a>To clarify the use of the set of software tools arranged as a software tool library (STL), ITU-T makes the following recommendations:</p>
        
<p style="mso-list:l2 level1 lfo13;" class="MsoListParagraphCxSpFirst">
The software tools specified in <a href="#annexA">Annex A</a> should be used as building modules of signal processing blocks to be used in the process of generation of ITU-T Recommendations, particularly those concerned with speech and audio coding algorithms.
</p>
<p style="mso-list:l2 level1 lfo13;" class="MsoListParagraphCxSpMiddle">
Some of the tools shall be used in procedures for the verification of interoperability of ITU T standards, mainly of speech and audio coding algorithms whose description is in terms of non-bitexact specifications.
</p>
<p style="mso-list:l2 level1 lfo13;" class="MsoListParagraphCxSpLast">
The use of these modules should be made strictly in accordance with the technical instructions of their attached documentation, and should respect the following terms.
</p>

        <p class="MsoNormal"><a name="_4ad0d9ac-808c-4783-a21b-f6e8709a6dc2" id="_4ad0d9ac-808c-4783-a21b-f6e8709a6dc2"></a>The software tools are maintained on an open-source collaboration platform <a href="#b-STLgit">[b-STLgit]</a>. The build toolchain is implemented using the CMake framework <a href="#b-CMake">[b-CMake]</a> to generate build scripts crafted for the target platform and to execute regression tests for each module in the STL.</p>
      </div>
      <div><a name="_license_and_copyright" id="_license_and_copyright"></a>
        <h1>7.<span style="mso-tab-count:1">&#xA0; </span>License and copyright</h1>
        <p class="MsoNormal"><a name="_37ad7483-8146-4dd1-a476-e95055cb276a" id="_37ad7483-8146-4dd1-a476-e95055cb276a"></a>The modules in the ITU-T STL are free software; they can be redistributed or modified under the terms of <a href="#annexB">Annex B</a>; this applies to any of the versions of the modules in the STL.</p>
        <p class="MsoNormal"><a name="_df9dd61c-f916-442f-81a2-9069da447ce3" id="_df9dd61c-f916-442f-81a2-9069da447ce3"></a>The STL has been carefully tested and it is believed that both the modules and the example programs on their usage conform to their description documents. Nevertheless, the ITU-T STL is provided "as is", in the hope that it will be useful, but without any warranty.</p>
        <p class="MsoNormal"><a name="_cb0994b6-23ee-4599-87da-b4d1c007b2ab" id="_cb0994b6-23ee-4599-87da-b4d1c007b2ab"></a>The STL is intended to help the scientific community to achieve new standards in telecommunications more efficiently, and for such must not be sold, entirely or in parts. The original developers, except where otherwise noted, retain ownership of their copyright, and allow their use under the terms and conditions of <a href="#annexB">Annex B</a>.</p>
      </div>
      <p class="MsoNormal">
        <br clear="all" style="mso-special-character:line-break;page-break-before:always"/>
      </p>
      <div class="Section3"><a name="annexA" id="annexA"></a>
        <h1 class="Annex">
          <b>Annex A</b>
          <br/>
          <br/>
          <b>List of software tools available</b>
        </h1>
        <p class="annex_obligation">(This annex forms an integral part of this Recommendation.)</p>
        <p class="Normalaftertitle"><a name="_1a608989-82a8-4cbb-aa20-3b9cb79cbc12" id="_1a608989-82a8-4cbb-aa20-3b9cb79cbc12"></a>This annex contains a list with a short description of the software tools available in the ITU-T Software Tool Library (STL). The 2019 release is referred to in the associated documentation as STL2019. All the routines in the modules are written in C.</p>
        <div><a name="_example_programs_available" id="_example_programs_available"></a><h2>A.1.<span style="mso-tab-count:1">&#xA0; </span>Example programs available</h2><p class="MsoNormal"><a name="_016258ed-8294-4eae-8101-5b19c86d79e7" id="_016258ed-8294-4eae-8101-5b19c86d79e7"></a>Associated header file: <tt>ugstdemo.h</tt></p>
<p class="MsoNormal"><a name="_a45e927c-1775-4eee-be87-a742ceb9f79a" id="_a45e927c-1775-4eee-be87-a742ceb9f79a"></a>The following programs are examples of the use of the modules.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g711demo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_971aab77-d401-4d9e-9df9-da9708e81c3d" id="_971aab77-d401-4d9e-9df9-da9708e81c3d"></a>on the use of the ITU T G.711 module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g726demo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_039ee0ce-851e-4556-b9ac-b5f51a6c60a6" id="_039ee0ce-851e-4556-b9ac-b5f51a6c60a6"></a>on the use of the ITU T G.726 module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g727demo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_7892ce94-910b-4dd6-8a46-1d749cf517c8" id="_7892ce94-910b-4dd6-8a46-1d749cf517c8"></a>on the use of the ITU T G.727 module</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g722demo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_88667fc0-e9d2-4172-aa97-bccd54ab017d" id="_88667fc0-e9d2-4172-aa97-bccd54ab017d"></a>on the use of the ITU T G.722 module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g728enc.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_609cc2f8-62a6-4139-af6f-303b6ba7f420" id="_609cc2f8-62a6-4139-af6f-303b6ba7f420"></a>on the use of the ITU T G.728 floating-point encoder.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g728dec.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_8bb1e044-4546-48be-b971-843554289c01" id="_8bb1e044-4546-48be-b971-843554289c01"></a>on the use of the ITU T G.728 floating-point decoder.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g728fpenc.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_bdf5b5c6-060d-4c64-a79e-ee9699628489" id="_bdf5b5c6-060d-4c64-a79e-ee9699628489"></a>on the use of the ITU T G.728 fixed-point encoder.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g728fpdec.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_5912f4fc-22de-4ffa-aae9-adc5254b71b8" id="_5912f4fc-22de-4ffa-aae9-adc5254b71b8"></a>on the use of the ITU T G.728 fixed-point decoder.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>rpedemo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_662b234b-0bab-4719-8f7a-a82ee5fa06fd" id="_662b234b-0bab-4719-8f7a-a82ee5fa06fd"></a>on the use of the full-rate GSM 06.10 speech codec module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>sv56demo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e42406a5-706d-455d-8b2b-b96e917f4518" id="_e42406a5-706d-455d-8b2b-b96e917f4518"></a>on the use of the speech voltmeter module, and also the gain/loss routine.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>eiddemo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ea10ef7a-4034-4dbd-a25f-d9741cfae7a5" id="_ea10ef7a-4034-4dbd-a25f-d9741cfae7a5"></a>on the use of the error insertion device for bit error insertion and frame erasure.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>eid-ev.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_7f3094fe-3252-4f89-826b-8bc7383b70c3" id="_7f3094fe-3252-4f89-826b-8bc7383b70c3"></a>on the use of the error insertion device for bit error insertion for layered bitstreams, which can be used to apply errors to individual layers in layered bitstreams, such as those specified in <a href="#ITU-T_G.718">[ITU-T G.718]</a> or <a href="#ITU-T_G.729.1">[ITU-T G.729.1]</a>.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>gen-patt.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f6bf3e5f-f118-40da-be26-1f452005fff1" id="_f6bf3e5f-f118-40da-be26-1f452005fff1"></a>on the use of generating bit error pattern files for error insertion in serial bitstream encoded files that comply with <a href="#ITU-T_G.192">[ITU-T G.192]</a>.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>gen_rate_profile.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_3bcdaf90-f3b8-4655-ae7f-58a91d0f07da" id="_3bcdaf90-f3b8-4655-ae7f-58a91d0f07da"></a>on the use of the fast switching rate profile generation tool.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>firdemo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f89078f8-c147-4202-bfe0-4a9ca053060f" id="_f89078f8-c147-4202-bfe0-4a9ca053060f"></a>on the use of the finite impulse response (FIR) high-quality low-pass and band-pass filters and of the finite impulse response-intermediate reference system (FIR-IRS) filters, associated with the rate change module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>pcmdemo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f7bb47df-9a1b-4e62-bc41-9c09f03d67f8" id="_f7bb47df-9a1b-4e62-bc41-9c09f03d67f8"></a>on the use of the ITU T G.712 [standard pulse code modulation (PCM)] infinite impulse response (IIR) filters, associated with the rate change module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>filter.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_fa12dedd-1cae-4925-b8c0-c57f5f4438a5" id="_fa12dedd-1cae-4925-b8c0-c57f5f4438a5"></a>on the use of both the IIR and the FIR filters available in the rate change module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>mnrudemo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1d341bed-a23d-4dd9-8523-66ddfa339806" id="_1d341bed-a23d-4dd9-8523-66ddfa339806"></a>on the use of the narrow-band and wideband modulated noise reference unity (ITU T P.810) module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>spdemo.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_3c800b5b-f796-4f91-bce0-27e21173fd58" id="_3c800b5b-f796-4f91-bce0-27e21173fd58"></a>on the use of the serialization and parallelization routines of the utility module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g711iplc.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e1df9b71-f64d-4066-bf6b-4589a1d3546a" id="_e1df9b71-f64d-4066-bf6b-4589a1d3546a"></a>on the use of the packet loss concealment module of Appendix I of <a href="#ITU-T_G.711">[ITU-T G.711]</a>.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>reverb.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_6d3c1f65-2d57-48f0-9e6b-1658e9601ee5" id="_6d3c1f65-2d57-48f0-9e6b-1658e9601ee5"></a>on the use of the reverberation module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>truncate.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_484479a9-e3cd-4888-b2da-c4220a2955b6" id="_484479a9-e3cd-4888-b2da-c4220a2955b6"></a>on the use of the bitstream truncation module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>freqresp.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ca4645df-2fb3-408e-8d18-78db2f601abf" id="_ca4645df-2fb3-408e-8d18-78db2f601abf"></a>on the use of the frequency response computation tool.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>stereoop.c</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2da7f871-8132-4e53-a8f9-b15bbae5354e" id="_2da7f871-8132-4e53-a8f9-b15bbae5354e"></a>on the use of stereo file operations.</p>
</td></tr></table>
<div class="Note"><a name="_225e7111-fbbd-4c4b-8321-821064fd1847" id="_225e7111-fbbd-4c4b-8321-821064fd1847"></a><p class="Note"><span class="note_label">NOTE &#x2013; </span>The module for the basic operators does not have a demo program, but it is supplemented by two tools: one to evaluate program read only memory (ROM) complexity for fixed-point code (<tt>basop_cnt.c</tt>), and another to evaluate complexity (including program ROM) of floating-point implementations (<tt>flc_example.c</tt>). Both reside in the basic operator module.</p></div></div>
        <div><a name="_rate_change_module_with_finite_impulse_response_routines" id="_rate_change_module_with_finite_impulse_response_routines"></a><h2>A.2.<span style="mso-tab-count:1">&#xA0; </span>Rate change module with finite impulse response routines</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_59d47f7a-3f7f-4f98-996d-d151c0aeda3f" id="_59d47f7a-3f7f-4f98-996d-d151c0aeda3f"></a>Name: <tt>firflt.c</tt><br/>
Associated header file: <tt>firflt.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>delta_sm_16khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_977ccfbb-0195-45b8-b0e8-84067d44a78c" id="_977ccfbb-0195-45b8-b0e8-84067d44a78c"></a>initialize 16 kHz 1:1 &#x394;<sub>SM</sub> weighting filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>hq_down_2_to_1_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_bda4ed06-ae7f-4744-b57f-2132356d312a" id="_bda4ed06-ae7f-4744-b57f-2132356d312a"></a>initialize 2:1 low-pass down-sampling filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>hq_down_3_to_1_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b09ea7de-3dfa-4158-816b-0d4ffc7b2979" id="_b09ea7de-3dfa-4158-816b-0d4ffc7b2979"></a>initialize 3:1 low-pass down-sampling filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>hq_up_1_to_2_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1a4e071b-b2f3-4a8e-bc23-36c60f448fa0" id="_1a4e071b-b2f3-4a8e-bc23-36c60f448fa0"></a>initialize 1:2 low-pass up-sampling filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>hq_up_1_to_3_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_12a711dc-edbe-432b-a6bb-eab6f107fdf3" id="_12a711dc-edbe-432b-a6bb-eab6f107fdf3"></a>initialize 1:3 low-pass up-sampling filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>irs_8khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_903357fe-f528-49ed-8384-3f89784fb41e" id="_903357fe-f528-49ed-8384-3f89784fb41e"></a>initialize 8-kHz ITU-T P.48 IRS weighting filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>irs_16khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_a70526fc-a60d-4395-a004-20fc870ed1b7" id="_a70526fc-a60d-4395-a004-20fc870ed1b7"></a>initialize 16-kHz ITU-T P.48 IRS weighting filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>linear_phase_pb_2_to_1_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_26474058-afbf-4528-8588-0b0ca4696d9d" id="_26474058-afbf-4528-8588-0b0ca4696d9d"></a>initialize 2:1 bandpass down-sampling filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>linear_phase_pb_1_to_2_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_24c190a8-c7a9-47ad-ba54-e2e981e2d04a" id="_24c190a8-c7a9-47ad-ba54-e2e981e2d04a"></a>initialize 1:2 bandpass up-sampling filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>linear_phase_pb_1_to_1_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_a052c92a-4a0d-4c84-b040-29c46611274a" id="_a052c92a-4a0d-4c84-b040-29c46611274a"></a>initialize 1:1 bandpass filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>mod_irs_16khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c93863ee-a198-4e27-af95-2ad4a34940ff" id="_c93863ee-a198-4e27-af95-2ad4a34940ff"></a>initialize 16-kHz send-side modified IRS weighting filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>mod_irs_48khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_98cde7c3-8e1f-4126-9a2f-e7b2f59f152a" id="_98cde7c3-8e1f-4126-9a2f-e7b2f59f152a"></a>initialize 48-kHz send-side modified IRS weighting filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>psophometric_8khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_4efe4389-f6d2-4d75-8e83-c936ad0ee289" id="_4efe4389-f6d2-4d75-8e83-c936ad0ee289"></a>initialize 1:1 ITU T O.41 psophometric weighting filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>p341_16khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_3ca991dc-2c08-42ee-aefe-34016f30aa5f" id="_3ca991dc-2c08-42ee-aefe-34016f30aa5f"></a>initialize 1:1 ITU T P.341 send-part weighting filter for data sampled at 16 kHz.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>rx_mod_irs_16khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_132bd59c-3569-458d-88dd-ad0ae1a6640a" id="_132bd59c-3569-458d-88dd-ad0ae1a6640a"></a>initialize 16-kHz modified IRS receive-side weighting filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>rx_mod_irs_8khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1b38a054-0fcb-4476-9c77-96ccb13cb626" id="_1b38a054-0fcb-4476-9c77-96ccb13cb626"></a>initialize 8-kHz modified IRS receive-side weighting filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>tia_irs_8khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_6fb9dc17-f178-49da-ba89-e4aa367a538d" id="_6fb9dc17-f178-49da-ba89-e4aa367a538d"></a>initialize 8-kHz IRS weighting filter using the TIA coefficients.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>ht_irs_16khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_00894757-4dbd-4055-a922-4ec10487e3ab" id="_00894757-4dbd-4055-a922-4ec10487e3ab"></a>initialize 16-kHz IRS weighting filter with a half-tilt inclination within the ITU T P.48 mask.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>msin_16khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c28b1c75-0bef-41a0-904e-259ef8c082e1" id="_c28b1c75-0bef-41a0-904e-259ef8c082e1"></a>initialize mobile station weighting filter.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>bp5k_16khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_cfbfe4af-564d-4b26-bb78-771fe0dcb9ee" id="_cfbfe4af-564d-4b26-bb78-771fe0dcb9ee"></a>initialize 50-Hz to 5-kHz-bandpass filter (16 kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>bp100_5k_16khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_17124fd9-26de-4bb3-b2da-7f0c15250d35" id="_17124fd9-26de-4bb3-b2da-7f0c15250d35"></a>initialize a 100-Hz to 5-kHz-bandpass filter (16-kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>bp14k_32khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_be800a68-c638-4669-b23c-42556a73add9" id="_be800a68-c638-4669-b23c-42556a73add9"></a>initialize a 50-Hz to 14-kHz-bandpass filter (32-kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>bp20k_48khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f35ad21b-dda4-4229-abde-a6863e401e05" id="_f35ad21b-dda4-4229-abde-a6863e401e05"></a>initialize a 20-Hz to 20-kHz-bandpass filter (48-kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LP1p5_48kHz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_a9c5a4aa-60f3-41d0-90c4-3d8d46826b55" id="_a9c5a4aa-60f3-41d0-90c4-3d8d46826b55"></a>initialize a low-pass filter with a cut-off frequency of 1.5 kHz (48-kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LP35_48kHz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_6151959d-c916-4354-b98e-210c6ce32823" id="_6151959d-c916-4354-b98e-210c6ce32823"></a>initialize a low-pass filter with a cut-off frequency of 3.5 kHz (48-kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LP7_48kHz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c2e081ab-d794-4bf2-ae05-ec48c65119c2" id="_c2e081ab-d794-4bf2-ae05-ec48c65119c2"></a>initialize a low-pass filter with a cut-off frequency of 7 kHz (48-kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LP10_48kHz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_19258bde-67bd-4eee-afbb-4e1b0dedabbb" id="_19258bde-67bd-4eee-afbb-4e1b0dedabbb"></a>initialize a low-pass filter with a cut-off frequency of 10 kHz (48-kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LP12_48kHz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_bf85fba7-a87f-4629-9f1a-6649a5a93498" id="_bf85fba7-a87f-4629-9f1a-6649a5a93498"></a>initialize a low-pass filter with a cut-off frequency of 12 kHz at (48-kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LP14_48kHz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_af273081-5d5f-4ca2-a5f0-777ce0ba3b89" id="_af273081-5d5f-4ca2-a5f0-777ce0ba3b89"></a>initialize a low-pass filter with a cut-off frequency of 14 kHz at 48-kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LP20_48kHz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_42ac03d5-3639-49b2-a994-bbd64c7fce2f" id="_42ac03d5-3639-49b2-a994-bbd64c7fce2f"></a>initialize a low-pass filter with a cut-off frequency of 20 kHz (48-kHz sampling).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>hq_kernel</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_a388e67a-a40a-410e-b046-1403dc44a016" id="_a388e67a-a40a-410e-b046-1403dc44a016"></a>FIR filtering function.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>hq_reset</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_6d68440a-88b8-4bb6-b3a9-5c21471a71f8" id="_6d68440a-88b8-4bb6-b3a9-5c21471a71f8"></a>clear state variables.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>hq_free</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b80bf960-5f57-420a-aab9-eebcf6958949" id="_b80bf960-5f57-420a-aab9-eebcf6958949"></a>deallocate FIR-filter memory.</p>
</td></tr></table></div>
        <div><a name="_rate_change_module_with_infinite_impulse_response_routines" id="_rate_change_module_with_infinite_impulse_response_routines"></a><h2>A.3.<span style="mso-tab-count:1">&#xA0; </span>Rate change module with infinite impulse response routines</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_fbb6a121-1c80-4301-9b2f-9bd8412fbb49" id="_fbb6a121-1c80-4301-9b2f-9bd8412fbb49"></a>Name: <tt>iirflt.c</tt><br/>
Associated header file: <tt>iirflt.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>stdpcm_kernel</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_086a6083-0cf8-49fa-8246-17d179138a2d" id="_086a6083-0cf8-49fa-8246-17d179138a2d"></a>parallel-form IIR kernel filtering routine.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>stdpcm_16khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_592f3472-d2d0-4fca-aa5e-03b368250e1c" id="_592f3472-d2d0-4fca-aa5e-03b368250e1c"></a>initialization of a parallel-form IIR standard PCM filter for input and output data at 16 kHz.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>stdpcm_1_to_2_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_375a93af-707b-4d2e-845e-b3e1b1b86ca3" id="_375a93af-707b-4d2e-845e-b3e1b1b86ca3"></a>as "stdpcm_16khz_init( )", but needs input with sampling frequency of 8 kHz and returns data at 16 kHz.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>stdpcm_2_to_1_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_01cac31c-4bf7-4cbf-a9cb-5ee6caeb1b8a" id="_01cac31c-4bf7-4cbf-a9cb-5ee6caeb1b8a"></a>as "stdpcm_16khz_init( )", but needs input with sampling frequency of 16 kHz and returns data at 8 kHz.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>stdpcm_reset</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c8979b61-f281-43dc-a1da-827141191ba9" id="_c8979b61-f281-43dc-a1da-827141191ba9"></a>clear state variables (needed only if another signal should be processed with the same filter) for a parallel-form structure.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>stdpcm_free</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_535b7d5e-27bc-4155-902a-556b98942fe9" id="_535b7d5e-27bc-4155-902a-556b98942fe9"></a>deallocate filter memory for a parallel-form state variable structure.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>cascade_iir_kernel</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b2bd583d-38b2-40d0-bc09-170bac329324" id="_b2bd583d-38b2-40d0-bc09-170bac329324"></a>cascade-form IIR filtering routine.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>iir_G712_8khz</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_a9b2efab-6180-474a-bf47-1b5978cfeb55" id="_a9b2efab-6180-474a-bf47-1b5978cfeb55"></a>initialization of a cascade-form IIR standard PCM filter for data sampled at 8 kHz.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>iir_irs_8khz_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_643a27ea-1be8-4e33-a79e-f26640301e90" id="_643a27ea-1be8-4e33-a79e-f26640301e90"></a>initialization of a cascade-form IIR ITU-T P.48 IRS filter for data sampled at 8 kHz.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>iir_casc_1p_3_to_1_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2405680e-12e8-4cac-8981-991696fd83c0" id="_2405680e-12e8-4cac-8981-991696fd83c0"></a>initialization of a cascade-form IIR low-pass filter for asynchronization filtering of data and downsampling by a factor of 3:1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>iir_casc_1p_1_to_3_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_dd606b67-5875-4319-882e-0c6b8a1d3d21" id="_dd606b67-5875-4319-882e-0c6b8a1d3d21"></a>initialization of a cascade-form IIR low-pass filter for asynchronization filtering of data and upsampling by a factor of 3:1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>cascade_iir_reset</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e3712e9d-73ed-4ac0-ab9d-f870ee0c3a0a" id="_e3712e9d-73ed-4ac0-ab9d-f870ee0c3a0a"></a>clear state variables (needed only if another signal should be processed with the same filter) for a cascade-form structure.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>cascade_iir_free</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_10698907-34af-460f-b0ec-8e55501e0d61" id="_10698907-34af-460f-b0ec-8e55501e0d61"></a>deallocate filter memory for a cascade-form state variable structure.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>direct_iir_kernel</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9981d9b1-e4e1-49bc-9f6c-a7021fc77d58" id="_9981d9b1-e4e1-49bc-9f6c-a7021fc77d58"></a>direct-form IIR filtering routine.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>iir_dir_dc_removal_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9ddcba43-9cf7-4e30-a784-319bc92d8749" id="_9ddcba43-9cf7-4e30-a784-319bc92d8749"></a>Initialize a direct-form IIR filter structure for a 1:1 DC removal filtering.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>direct_reset</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_098e1c97-2b58-4f32-be39-90b38c4b9d1c" id="_098e1c97-2b58-4f32-be39-90b38c4b9d1c"></a>clear state variables (needed only if another signal should be processed with the same filter) for a direct-form structure.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>direct_iir_free</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9fe57bae-1ce5-4362-ae27-46833bb6a449" id="_9fe57bae-1ce5-4362-ae27-46833bb6a449"></a>deallocate filter memory for a direct-form state variable structure.</p>
</td></tr></table></div>
        <div><a name="_error_insertion_module" id="_error_insertion_module"></a><h2>A.4.<span style="mso-tab-count:1">&#xA0; </span>Error insertion module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_d492502c-57d1-4c33-a9ea-5780f3c0be21" id="_d492502c-57d1-4c33-a9ea-5780f3c0be21"></a>Name: <tt>eid.c</tt><br/>
Associated header file: <tt>eid.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>1_eid</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_48d7973a-e698-42a6-844f-c83e9c8b30bc" id="_48d7973a-e698-42a6-844f-c83e9c8b30bc"></a>initializes the error pattern generator (for single-bit errors, burst bit-errors or single frame erasures).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>open_burst_eid</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c0acc728-095f-4ed5-8e88-77285f96054f" id="_c0acc728-095f-4ed5-8e88-77285f96054f"></a>initializes the burst frame erasure pattern generator.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>reset_burst_eid</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2ffaf7c8-ac3b-4cba-a611-db30d96b8e2d" id="_2ffaf7c8-ac3b-4cba-a611-db30d96b8e2d"></a>reinitializes the burst frame erasure pattern generator.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>BER_generator</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_8f759634-57ed-4b8e-8fa3-d1c28ef4fcd1" id="_8f759634-57ed-4b8e-8fa3-d1c28ef4fcd1"></a>generates a bit error sequence with properties defined by "open_eid".</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>FER_generator_random</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_32931535-d0f6-4b87-aa37-93fdd53db3ea" id="_32931535-d0f6-4b87-aa37-93fdd53db3ea"></a>generates a random frame erasure sequence with properties, defined by "open_eid".</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>FER_generator_burst</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ded9d6fd-3a69-4897-93c6-4817c8795289" id="_ded9d6fd-3a69-4897-93c6-4817c8795289"></a>generates a burst frame erasure sequence with properties, defined by "open_burst_eid".</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>BER_insertion</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_522eafa9-7666-420c-b3d7-a36780fd60a5" id="_522eafa9-7666-420c-b3d7-a36780fd60a5"></a>modifies the input data bits according to the error pattern, stored in a buffer.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>FER_module</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b0eed109-7de3-4420-b63a-e86f42f479fc" id="_b0eed109-7de3-4420-b63a-e86f42f479fc"></a>frame erasure module.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>close_eid</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_644e1a5c-8d66-4e24-87ba-e89cca554501" id="_644e1a5c-8d66-4e24-87ba-e89cca554501"></a>frees memory allocated to the EID state variable buffer.</p>
</td></tr></table></div>
        <div><a name="_itu_t_g_711_module" id="_itu_t_g_711_module"></a><h2>A.5.<span style="mso-tab-count:1">&#xA0; </span>ITU-T G.711 module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_cc2f9fb7-9fe5-4f46-bb3e-43fe5da8e378" id="_cc2f9fb7-9fe5-4f46-bb3e-43fe5da8e378"></a>Name: <tt>g711.c</tt><br/>
Associated header file: <tt>g711.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>alaw_compress</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f66a9061-a0aa-455e-9a62-62c250565c4a" id="_f66a9061-a0aa-455e-9a62-62c250565c4a"></a>compands one vector of linear PCM samples to A-law; uses 13 most significant bits (MSBs) from input and 8 least significant bits (LSBs) on output.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>alaw_expand</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e03eaf5e-4c1d-4f1e-9b4c-f7d6cb0d0b03" id="_e03eaf5e-4c1d-4f1e-9b4c-f7d6cb0d0b03"></a>expands one vector of A-law samples to linear PCM; uses 8 LSBs from input and 13 MSBs on output.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>ulaw_compress</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1714648d-594e-42f6-9193-3d474e083b41" id="_1714648d-594e-42f6-9193-3d474e083b41"></a>compands one vector of linear PCM samples to &#xB5;-law; uses 14 MSBs from input and 8 LSBs on output.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>ulaw_expand</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_27feb8b8-7bdc-46fd-b494-727de6711e0e" id="_27feb8b8-7bdc-46fd-b494-727de6711e0e"></a>expands one vector of &#xB5;-law samples to linear PCM; uses 8 LSBs from input and 14 MSBs on output.</p>
</td></tr></table></div>
        <div><a name="_packet_loss_concealment_module_of_appendix_i_of_itu_t_g_711" id="_packet_loss_concealment_module_of_appendix_i_of_itu_t_g_711"></a><h2>A.6.<span style="mso-tab-count:1">&#xA0; </span>Packet loss concealment module of Appendix I of [ITU-T G.711]</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_d1dcb7a6-51cc-4e90-b6d7-04d204576349" id="_d1dcb7a6-51cc-4e90-b6d7-04d204576349"></a>Name: <tt>lowcfe.c</tt><br/>
Associated header file: <tt>lowcfe.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g711plc_construct</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9ccc5edc-2fca-4873-ac3f-aad35187e36a" id="_9ccc5edc-2fca-4873-ac3f-aad35187e36a"></a>LowcFE Constructor.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g711plc_dofe</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_5d1407bb-9d7e-428b-bba7-ce9fa54b81c2" id="_5d1407bb-9d7e-428b-bba7-ce9fa54b81c2"></a>generate the synthetic signal.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g711plc_addtohistory</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_01eaedd8-691e-4bcd-a48c-18f7035cc9e2" id="_01eaedd8-691e-4bcd-a48c-18f7035cc9e2"></a>a good frame was received and decoded, add the frame to history buffer.</p>
</td></tr></table></div>
        <div><a name="_itu_t_g_726_module" id="_itu_t_g_726_module"></a><h2>A.7.<span style="mso-tab-count:1">&#xA0; </span>ITU-T G.726 module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_e6344ec7-3224-4a23-b385-c551491545fe" id="_e6344ec7-3224-4a23-b385-c551491545fe"></a>Name: <tt>g726.c</tt><br/>
Associated header file: <tt>g726.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>G726_encode</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_db1741c1-6d80-455f-8cb4-03f89157424b" id="_db1741c1-6d80-455f-8cb4-03f89157424b"></a>ITU T G.726 encoder at 40, 32, 24 and 16 kbit/s.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>G726_decode</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_8cae6ad4-6ae3-4c86-998a-9df2c0177b95" id="_8cae6ad4-6ae3-4c86-998a-9df2c0177b95"></a>ITU T G.726 decoder at 40, 32, 24 and 16 kbit/s.</p>
</td></tr></table></div>
        <div><a name="_modulated_noise_reference_unit_module" id="_modulated_noise_reference_unit_module"></a><h2>A.8.<span style="mso-tab-count:1">&#xA0; </span>Modulated noise reference unit module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_e67daa4c-be34-4be4-baa7-48603f8c5b35" id="_e67daa4c-be34-4be4-baa7-48603f8c5b35"></a>Name: <tt>mnru.c</tt><br/>
Associated header file: <tt>mnru.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>MNRU_process</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_0730a729-d466-44cc-a1d6-7fa3447f49c7" id="_0730a729-d466-44cc-a1d6-7fa3447f49c7"></a>module for addition of modulated noise to a vector of samples, according to <a href="#ITU-T_P.810">[ITU-T P.810]</a>, for both the narrow- and wideband models.</p>
</td></tr></table></div>
        <div><a name="_speech_voltmeter_module" id="_speech_voltmeter_module"></a><h2>A.9.<span style="mso-tab-count:1">&#xA0; </span>Speech voltmeter module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_434cbacb-7ca3-4464-ac80-d5a7f3f85761" id="_434cbacb-7ca3-4464-ac80-d5a7f3f85761"></a>Name: <tt>sv-p56.c</tt><br/>
Associated header file: <tt>sv-p56.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>init_speech_voltmeter</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_691b3f1b-a1d3-4a74-b301-a5ab715435dd" id="_691b3f1b-a1d3-4a74-b301-a5ab715435dd"></a>initializes a speech voltmeter state variable.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>speech_voltmeter</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_5fe50753-92f2-4ec8-a395-18feaa0058b5" id="_5fe50753-92f2-4ec8-a395-18feaa0058b5"></a>measurement of the active speech level of data in a buffer according to <a href="#ITU-T_P.56">[ITU-T P.56]</a>.</p>
</td></tr></table></div>
        <div><a name="_module_with_users_group_on_software_tools_utilities" id="_module_with_users_group_on_software_tools_utilities"></a><h2>A.10.<span style="mso-tab-count:1">&#xA0; </span>Module with Users' Group on Software Tools utilities</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_2d43c5e9-1049-4656-b2b3-c09cf060af00" id="_2d43c5e9-1049-4656-b2b3-c09cf060af00"></a>Name: <tt>ugst-utl.c</tt><br/>
Associated header file: <tt>ugst-utl.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>scale</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_034bd2e7-6f6e-46cf-99ba-44dea5f2428f" id="_034bd2e7-6f6e-46cf-99ba-44dea5f2428f"></a>gain/loss insertion algorithm.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>sh2fl_16bit</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_0795b3ff-a605-46fd-8551-e58bb780eee1" id="_0795b3ff-a605-46fd-8551-e58bb780eee1"></a>conversion of two's complement, 16-bit integer to floating point.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>sh2fl_15bit</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2c2a65f6-2b8e-4806-9519-791f86050e8a" id="_2c2a65f6-2b8e-4806-9519-791f86050e8a"></a>conversion of two's complement, 15-bit integer to floating point.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>sh2fl_14bit</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_cfd17098-abf9-4252-bcad-ae3826d5bff9" id="_cfd17098-abf9-4252-bcad-ae3826d5bff9"></a>conversion of two's complement, 14-bit integer to floating point.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>sh2fl_13bit</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_53b88917-8d3e-4791-9776-b07879ca0842" id="_53b88917-8d3e-4791-9776-b07879ca0842"></a>conversion of two's complement, 13-bit integer to floating point.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>sh2fl_12bit</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c6dfaf57-bc12-46ee-9182-a7bb8c28d4b3" id="_c6dfaf57-bc12-46ee-9182-a7bb8c28d4b3"></a>conversion of two's complement, 12-bit integer to floating point.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>sh2fl</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9f37a39f-1f00-44fc-8e10-06590f20ae80" id="_9f37a39f-1f00-44fc-8e10-06590f20ae80"></a>generic function for conversion from integer to floating point.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>sh2fl_alt</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9f281ee7-575c-40c3-96c2-5b2235c1764e" id="_9f281ee7-575c-40c3-96c2-5b2235c1764e"></a>alternate (faster) implementation of sh2fl, with compulsory range conversion.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>fl2sh_16bit</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_578e2a8c-997d-4fc6-b072-2dfe4e408a7f" id="_578e2a8c-997d-4fc6-b072-2dfe4e408a7f"></a>conversion of floating point data to two's complement, 16-bit integer.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>fl2sh_15bit</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2e9e062d-1aed-4353-b25f-3a0cb46a2a12" id="_2e9e062d-1aed-4353-b25f-3a0cb46a2a12"></a>conversion of floating point data to two's complement, 15-bit integer.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>fl2sh_14bit</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9d234417-7a7f-40b4-8973-372f52274a88" id="_9d234417-7a7f-40b4-8973-372f52274a88"></a>conversion of floating point data to two's complement, 14-bit integer.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>fl2sh_13bit</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d9799407-2147-44d2-aa6d-f9b4f8bb482f" id="_d9799407-2147-44d2-aa6d-f9b4f8bb482f"></a>conversion of floating point data to two's complement, 13-bit integer.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>fl2sh_12bit</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d80d609c-84df-4f40-a0f9-52ac1a9ebac6" id="_d80d609c-84df-4f40-a0f9-52ac1a9ebac6"></a>conversion of floating point data to two's complement, 12-bit integer.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>fl2sh</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ca69f857-3873-4238-97ec-017977cc0fa7" id="_ca69f857-3873-4238-97ec-017977cc0fa7"></a>generic function for conversion from floating point to integer.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>serialize_left_justified</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e584c7f5-40b3-4c48-9e3f-61340053e505" id="_e584c7f5-40b3-4c48-9e3f-61340053e505"></a>serialization for left-justified data.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>serialize_right_justified</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_6e8ac0e3-2aec-4e99-bc72-202c5b97a0b7" id="_6e8ac0e3-2aec-4e99-bc72-202c5b97a0b7"></a>serialization for right-justified data.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>parallelize_left_justified</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f30a1c26-a653-4a2b-ad92-5cbb8e0cb568" id="_f30a1c26-a653-4a2b-ad92-5cbb8e0cb568"></a>parallelization for left-justified data.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>parallelize_right_justified</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9c8f7776-7227-4f9f-be27-18a05876c38b" id="_9c8f7776-7227-4f9f-be27-18a05876c38b"></a>parallelization for right-justified data.</p>
</td></tr></table></div>
        <div><a name="_itu_t_g_722_module" id="_itu_t_g_722_module"></a><h2>A.11.<span style="mso-tab-count:1">&#xA0; </span>ITU-T G.722 module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_2f1935d3-4b11-4474-b357-98e9725825b9" id="_2f1935d3-4b11-4474-b357-98e9725825b9"></a>Name: <tt>g722.c</tt><br/>
Associated header file: <tt>g722.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>G722_encode</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_29298ba9-820c-467e-9079-242abde747c4" id="_29298ba9-820c-467e-9079-242abde747c4"></a>ITU T G.722 wideband speech encoder at 64 kbit/s.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>G722_decode</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_670b0b34-ba44-4a96-815e-87c6088e4e3d" id="_670b0b34-ba44-4a96-815e-87c6088e4e3d"></a>ITU T G.722 wideband speech decoder at 64, 56 and 48 kbit/s.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g722_reset_encoder</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b4476191-1986-48a3-a1bd-ac01802a2414" id="_b4476191-1986-48a3-a1bd-ac01802a2414"></a>initialization of the ITU T G.722 encoder state variable.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>g722_reset_decoder</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_30952c3c-bb22-4b18-a8c4-db3fbc0dce62" id="_30952c3c-bb22-4b18-a8c4-db3fbc0dce62"></a>initialization of the ITU T G.722 decoder state variable.</p>
</td></tr></table></div>
        <div><a name="_rpe_ltp_module" id="_rpe_ltp_module"></a><h2>A.12.<span style="mso-tab-count:1">&#xA0; </span>RPE-LTP module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_be2e6ba1-e51d-4369-aded-035045875110" id="_be2e6ba1-e51d-4369-aded-035045875110"></a>Name: <tt>rpeltp.c</tt><br/>
Associated header file: <tt>rpeltp.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>rpeltp_encode</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_95600b45-88d8-4d21-943b-96fd74fa3de6" id="_95600b45-88d8-4d21-943b-96fd74fa3de6"></a>GSM 06.10 full-rate regular pulse excitation-long term prediction (RPE-LTP) speech encoder at 13 kbit/s.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>rpeltp_decode</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d608e68f-4c2b-4192-b45e-0ec35602896a" id="_d608e68f-4c2b-4192-b45e-0ec35602896a"></a>GSM 06.10 full-rate RPE-LTP speech decoder at 13 kbit/s.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>rpeltp_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_5382f96b-0e87-4114-afc6-bb4962753aab" id="_5382f96b-0e87-4114-afc6-bb4962753aab"></a>initialize memory for the RPE-LTP state variables.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>rpeltp_delete</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_bbf439b9-26ec-4d38-b025-bf62798cd08b" id="_bbf439b9-26ec-4d38-b025-bf62798cd08b"></a>release memory previously allocated for the RPE-LTP state variables.</p>
</td></tr></table></div>
        <div><a name="_itu_t_g_727_module" id="_itu_t_g_727_module"></a><h2>A.13.<span style="mso-tab-count:1">&#xA0; </span>ITU-T G.727 module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_e8054c98-8bd4-4d10-9fef-7374baeaf69d" id="_e8054c98-8bd4-4d10-9fef-7374baeaf69d"></a>Name: <tt>g727.c</tt><br/>
Associated header file: <tt>g727.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>G727_encode</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e14217e2-4b2a-45ca-917d-ff7bf41d9fa3" id="_e14217e2-4b2a-45ca-917d-ff7bf41d9fa3"></a>ITU T G.727 encoder at 40, 32, 24 and 16 kbit/s.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>G727_decode</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9340dbfb-feb5-4e94-be14-65d2e51241c4" id="_9340dbfb-feb5-4e94-be14-65d2e51241c4"></a>ITU T G.727 decoder at 40, 32, 24 and 16 kbit/s.</p>
</td></tr></table></div>
        <div><a name="_basic_operators" id="_basic_operators"></a><h2>A.14.<span style="mso-tab-count:1">&#xA0; </span>Basic operators</h2><div><a name="_basic_operators_that_use_16_bit_registersaccumulators" id="_basic_operators_that_use_16_bit_registersaccumulators"></a><h3>A.14.1.<span style="mso-tab-count:1">&#xA0; </span>Basic operators that use 16-bit registers/accumulators</h3><p style="text-align:left;" align="left" class="MsoNormal"><a name="_8c142c97-038a-47b9-9109-dd2481222c27" id="_8c142c97-038a-47b9-9109-dd2481222c27"></a>Name: <tt>basop32.c</tt>, <tt>enh1632.c</tt><br/>
Associated header file: <tt>stl.h</tt>, <tt>basop32.h</tt>, <tt>enh1632.h</tt></p>
<p class="MsoNormal"><a name="_a5ddecd4-081d-4b51-8d4d-84ee4bdc8c0c" id="_a5ddecd4-081d-4b51-8d4d-84ee4bdc8c0c"></a>Variable definitions:</p>

<p style="mso-list:l3 level1 lfo2;" class="MsoListParagraphCxSpFirst">
v1, v2: 16-bit variables
</p>

<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>add(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_bcaf5e0f-18a8-4083-b70e-65a894e07aeb" id="_bcaf5e0f-18a8-4083-b70e-65a894e07aeb"></a>Performs the addition (v1+v2) with overflow control and saturation; the 16-bit result is set at +32767 when overflow occurs or at -32768 when underflow occurs.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>sub(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c034af69-8676-4e6b-8481-e164593c7115" id="_c034af69-8676-4e6b-8481-e164593c7115"></a>Performs the subtraction (v1-v2) with overflow control and saturation; the 16-bit result is set at +32767 when overflow occurs or at -32768 when underflow occurs.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>abs_s(v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_a6d078a4-3813-4476-8f16-5034956c538f" id="_a6d078a4-3813-4476-8f16-5034956c538f"></a>Absolute value of v1. If v1 is -32768, returns 32767.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>shl(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_13917411-d5b4-4304-86a7-c7c9e5e5b368" id="_13917411-d5b4-4304-86a7-c7c9e5e5b368"></a>Arithmetically shifts the 16-bit input v1 left by v2 positions. Zero fills the v2 LSB of the result. If v2 is negative, arithmetically shifts v1 right by -v2 with sign extension. Saturates the result in case of underflows or overflows.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>shr(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_69382902-d0d0-4b8c-8a84-d369f64368f3" id="_69382902-d0d0-4b8c-8a84-d369f64368f3"></a>Arithmetically shifts the 16-bit input v1 right v2 positions with sign extension. If v2 is negative, arithmetically shifts v1 left by -v2 and zero fills the -v2 LSB of the result:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_13851b18-e3ac-4da2-a3e6-4317aeb3a985" id="_13851b18-e3ac-4da2-a3e6-4317aeb3a985"></a><tt>shr(v1, v2) = shl(v1, -v2)</tt><br/>
Saturates the result in case of underflows or overflows.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>negate(v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_18bd24d4-9949-4aa6-86ce-3724464d974e" id="_18bd24d4-9949-4aa6-86ce-3724464d974e"></a>Negates v1 with saturation, saturate in the case when input is -32768:</p>
<p class="MsoNormal"><a name="_ae09926f-a8c1-4861-b638-9c3830cefff3" id="_ae09926f-a8c1-4861-b638-9c3830cefff3"></a>
<tt>negate(v1) = sub(0, v1)</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>s_max(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1397c787-d6ca-44b6-a706-bb7b7002c4ff" id="_1397c787-d6ca-44b6-a706-bb7b7002c4ff"></a>Compares two 16-bit variables v1 and v2 and returns the maximum value.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>s_min(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_885eeefd-0199-411e-8a6a-eacb2dc078c7" id="_885eeefd-0199-411e-8a6a-eacb2dc078c7"></a>Compares two 16-bit variables v1 and v2 and returns the minimum value.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>norm_s(v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c3653cef-205e-47df-9e3d-394ae70d00fd" id="_c3653cef-205e-47df-9e3d-394ae70d00fd"></a>Produces the number of left shifts needed to normalize the 16-bit variable v1 for positive values on the interval with minimum of 16384 and maximum 32767, and for negative values on the interval with minimum of -32768 and maximum of -16384; in order to normalize the result, the following operation must be done:</p>
<p class="MsoNormal"><a name="_7f85931e-b105-463d-8af4-5ee0b17b9c0b" id="_7f85931e-b105-463d-8af4-5ee0b17b9c0b"></a>
<tt>norm_v1 = shl(v1, norm_s(v1))</tt>
</p>
</td></tr></table></div>
<div><a name="_basic_operators_that_use_32_bit_registersaccumulators" id="_basic_operators_that_use_32_bit_registersaccumulators"></a><h3>A.14.2.<span style="mso-tab-count:1">&#xA0; </span>Basic operators that use 32-bit registers/accumulators</h3><p style="text-align:left;" align="left" class="MsoNormal"><a name="_d4a228cd-7631-43aa-8b74-fb7d435f57ba" id="_d4a228cd-7631-43aa-8b74-fb7d435f57ba"></a>Name: <tt>basop32.c</tt>, <tt>enh1632.c</tt><br/>
Associated header file: <tt>stl.h</tt>, <tt>basop32.h</tt>, <tt>enh1632.h</tt></p>
<p class="MsoNormal"><a name="_fe0ae49a-6398-4e81-8570-a0305d72a6ba" id="_fe0ae49a-6398-4e81-8570-a0305d72a6ba"></a>Variable definitions:</p>

<p style="mso-list:l3 level1 lfo3;" class="MsoListParagraphCxSpFirst">
v1, v2, v3_l: 16-bit variables
</p>
<p style="mso-list:l3 level1 lfo3;" class="MsoListParagraphCxSpLast">
L_v1, L_v2, L_v3, L_v3_l, L_v3_h: 32-bit variables
</p>

<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_add(L_v1, L_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2bd77b0b-255c-45d5-9e9a-84c01c7fef0c" id="_2bd77b0b-255c-45d5-9e9a-84c01c7fef0c"></a>32-bit addition of the two 32-bit variables (L_v1+L_v2) with overflow control and saturation; the result is set at +2147483647 when overflow occurs or at -2147483648 when underflow occurs.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_sub(L_v1, L_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_8200c34f-4f99-411a-ba34-04fbcf3961b8" id="_8200c34f-4f99-411a-ba34-04fbcf3961b8"></a>32-bit subtraction of the two 32-bit variables (L_v1-L_v2) with overflow control and saturation; the result is set at +2147483647 when overflow occurs or at
-2147483648 when underflow occurs.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_abs(L_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_75ff2d4b-e958-4492-ad8c-d0a1c5415694" id="_75ff2d4b-e958-4492-ad8c-d0a1c5415694"></a>Absolute value of L_v1, with L_abs(-2147483648) = 2147483647.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_shl(L_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_0e383d6d-abb5-404f-8e16-062031964f31" id="_0e383d6d-abb5-404f-8e16-062031964f31"></a>Arithmetically shifts the 32-bit input L_v1 left v2 positions. Zero fills the v2 LSB of the result. If v2 is negative, arithmetically shifts L_v1 right by -v2 with sign extension. Saturates the result in case of underflows or overflows.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_shr(L_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_abb4bafe-08c2-4025-b450-782b36fd212b" id="_abb4bafe-08c2-4025-b450-782b36fd212b"></a>Arithmetically shifts the 32-bit input L_v1 right v2 positions with sign extension. If v2 is negative, arithmetically shifts L_v1 left by -v2 and zero fills the
-v2 LSB of the result. Saturates the result in case of underflows or overflows.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_negate(L_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_08503bd3-07fe-4059-859f-a32664b3e309" id="_08503bd3-07fe-4059-859f-a32664b3e309"></a>Negates the 32-bit L_v1 with saturation, saturate in the case where input is -2147483648.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_max(L_v1, L_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_73d9c220-2e8f-4112-a7cc-e5817890f9f1" id="_73d9c220-2e8f-4112-a7cc-e5817890f9f1"></a>Compares two 32-bit variables L_v1 and L_v2 and returns the maximum value.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_min(L_v1, L_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_124e9733-4fe3-4812-a48c-c49842bf391e" id="_124e9733-4fe3-4812-a48c-c49842bf391e"></a>Compares two 32-bit variables L_v1 and L_v2 and returns the minimum value.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>norm_l(L_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_11c1ff69-7315-40b5-bf8a-892abfb0bfd5" id="_11c1ff69-7315-40b5-bf8a-892abfb0bfd5"></a>Produces the number of left shifts needed to normalize the 32-bit variable L_v1 for positive values on the interval with minimum of 1073741824 and maximum 2147483647, and for negative values on the interval with minimum of -2147483648 and maximum of -1073741824; in order to normalize the result, the following operation must be done:</p>
<p class="MsoNormal"><a name="_1442695e-ae95-44d2-9eff-b9b66393cdb2" id="_1442695e-ae95-44d2-9eff-b9b66393cdb2"></a>
<tt>L_norm_v1 = L_shl(L_v1, norm_l(L_v1))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_mult(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ab2de86a-e0b9-4c66-ab13-83a48ab167a5" id="_ab2de86a-e0b9-4c66-ab13-83a48ab167a5"></a>L_mult implements the 32-bit result of the multiplication of v1 times v2 with one shift left, i.e.,</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_1738bc04-b466-4ed7-bb22-f042e95c5917" id="_1738bc04-b466-4ed7-bb22-f042e95c5917"></a><tt>L_mult(v1, v2) = L_shl((v1 * v2), 1)</tt><br/>
Note that L_mult(-32768,-32768) = 2147483647.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_mult0(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_40a10139-b7a4-4582-9d2e-530b5f85c8da" id="_40a10139-b7a4-4582-9d2e-530b5f85c8da"></a>L_mult0 implements the 32-bit result of the multiplication of v1 times v2 without left shift, i.e.,</p>
<p class="MsoNormal"><a name="_c878bec3-b153-464d-9dcb-836276f10a66" id="_c878bec3-b153-464d-9dcb-836276f10a66"></a>
<tt>L_mult(v1, v2) = (v1 * v2)</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>mult(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_531e5702-8bbd-4a98-aade-3c3ac06a15bc" id="_531e5702-8bbd-4a98-aade-3c3ac06a15bc"></a>Performs the multiplication of v1 by v2 and gives a 16-bit result which is scaled, i.e.,</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_cfa42d59-4f13-4dfc-a521-2e18d45c7cc3" id="_cfa42d59-4f13-4dfc-a521-2e18d45c7cc3"></a><tt>mult(v1, v2) = extract_l(L_shr((v1 times v2), 15) )</tt><br/>
Note that mult(-32768,-32768) = 32767.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>mult_r(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_062668da-e8a0-4574-8362-877061d46b6c" id="_062668da-e8a0-4574-8362-877061d46b6c"></a>Same as mult() but with rounding, i.e.,</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_f3908331-7f8a-4971-bdce-7dedf5defdff" id="_f3908331-7f8a-4971-bdce-7dedf5defdff"></a><tt>mult_r(v1, v2) = extract_l(L_shr(((v1 * v2) + 16384), 15) )</tt><br/>
and<br/>
<tt>mult_r(-32768, -32768) = 32767.</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_mac(L_v3, v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_13465aae-371f-40d1-9a9a-7d471f738e9b" id="_13465aae-371f-40d1-9a9a-7d471f738e9b"></a>Multiplies v1 by v2 and shifts the result left by 1. Adds the 32-bit result to L_v3 with saturation, returns a 32-bit result:</p>
<p class="MsoNormal"><a name="_f30098a9-7420-4e6f-bb2d-be59163c16ff" id="_f30098a9-7420-4e6f-bb2d-be59163c16ff"></a>
<tt>L_mac(L_v3, v1, v2) = L_add(L_v3, L_mult(v1, v2))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_mac0(L_v3, v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_af033df5-4337-435f-a2eb-e4df78a8432f" id="_af033df5-4337-435f-a2eb-e4df78a8432f"></a>Multiplies v1 by v2 without left shift. Adds the 32-bit result to L_v3 with saturation, returning a 32-bit result:</p>
<p class="MsoNormal"><a name="_ad09ba33-b683-4cf8-9028-c3d3cf036ad3" id="_ad09ba33-b683-4cf8-9028-c3d3cf036ad3"></a>
<tt>L_mac(L_v3, v1, v2) = L_add(vL_v3, L_mult0(vv1, v2))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_macNs(L_v3, v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e9cc6612-f9e7-4ba4-8871-a39a62e91fe8" id="_e9cc6612-f9e7-4ba4-8871-a39a62e91fe8"></a>Multiplies v1 by v2 and shifts the result left by 1. Adds the 32-bit result to L_v3 without saturation, returns a 32-bit result. Generates carry and overflow values:</p>
<p class="MsoNormal"><a name="_0126a8b4-71b3-4b89-93c1-04d3771aad4f" id="_0126a8b4-71b3-4b89-93c1-04d3771aad4f"></a>
<tt>L_macNs(L_v3, v1, v2) = L_add_c(L_v3, L_mult(v1, v2))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>mac_r(L_v3, v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_33e1a934-1d95-470e-af8e-b90bdd8d05bb" id="_33e1a934-1d95-470e-af8e-b90bdd8d05bb"></a>Multiplies v1 by v2 and shifts the result left by 1. Adds the 32-bit result to L_v3 with saturation. Rounds the 16 least significant bits of the result into the 16 most significant bits with saturation and shifts the result right by 16. Returns a 16 bit result.</p>
<p class="MsoNormal"><a name="_18523f47-890e-44b7-bd6f-cf9d37c2f605" id="_18523f47-890e-44b7-bd6f-cf9d37c2f605"></a>
<tt>mac_r(L_v3, v1, v2) = round(L_mac(L_v3, v1, v2)) = extract_h(L_add(L_add(L_v3, L_mult(v1, v2)), 32768))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_msu(L_v3, v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2d30678a-3f2c-439d-9f00-d0cc9fb19de3" id="_2d30678a-3f2c-439d-9f00-d0cc9fb19de3"></a>Multiplies v1 by v2 and shifts the result left by 1. Subtracts the 32-bit result from L_v3 with saturation, returns a 32-bit result:</p>
<p class="MsoNormal"><a name="_4d5437eb-3138-4ab2-8c3b-4112b024404f" id="_4d5437eb-3138-4ab2-8c3b-4112b024404f"></a>
<tt>L_msu(L_v3, v1, v2) = L_sub(L_v3, L_mult(v1, v2))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_msu0(L_v3, v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_63abac2d-6d58-4bf3-a2e2-266d5083e1dd" id="_63abac2d-6d58-4bf3-a2e2-266d5083e1dd"></a>Multiplies v1 by v2 without left shift. Subtracts the 32-bit result from L_v3 with saturation, returning a 32-bit result:</p>
<p class="MsoNormal"><a name="_4f94ada5-d5b7-4f4f-aa61-cd7b06c451f1" id="_4f94ada5-d5b7-4f4f-aa61-cd7b06c451f1"></a>
<tt>L_msu(L_v3, v1, v2) = L_sub(L_v3, L_mult0(v1, v2))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_msuNs(L_v3, v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d5a385eb-e61e-4af5-833a-f9c06fb1b12b" id="_d5a385eb-e61e-4af5-833a-f9c06fb1b12b"></a>Multiplies v1 by v2 and shifts the result left by 1. Subtracts the 32-bit result from L_v3 without saturation, returns a 32 bit result. Generates carry and overflow values:</p>
<p class="MsoNormal"><a name="_00f09f20-770f-4aad-9308-0cd361fdbd46" id="_00f09f20-770f-4aad-9308-0cd361fdbd46"></a>
<tt>L_msuNs(L_v3, v1, v2) = L_sub_c(L_v3, L_mult(v1, v2))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>msu_r(L_v3, v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_80436c64-b415-49cb-90fa-2a819019e5d5" id="_80436c64-b415-49cb-90fa-2a819019e5d5"></a>Multiplies v1 by v2 and shifts the result left by 1. Subtracts the 32-bit result from L_v3 with saturation. Rounds the 16 least significant bits of the result into the 16 bits with saturation and shifts the result right by 16. Returns a 16-bit result.</p>
<p class="MsoNormal"><a name="_cc15d6b1-d595-40e8-ae3d-c6a3b75eaf4a" id="_cc15d6b1-d595-40e8-ae3d-c6a3b75eaf4a"></a>
<tt>msu_r(L_v3, v1, v2) = round(L_msu(L_v3, v1, v2)) = extract_h(L_add(L_sub(L_v3, L_mult(v1, v2)), 32768))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>s_and(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_be140b7e-2122-4a83-a2d5-565b51d1ddaf" id="_be140b7e-2122-4a83-a2d5-565b51d1ddaf"></a>Performs a bit wise AND between the two 16-bit variables v1 and v2.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>s_or(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_40b16131-a0ca-487c-8bf5-03e34cd2c042" id="_40b16131-a0ca-487c-8bf5-03e34cd2c042"></a>Performs a bit wise OR between the two 16-bit variables v1 and v2.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>s_xor(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2b9bda31-8126-4304-8922-7b05bcf707fa" id="_2b9bda31-8126-4304-8922-7b05bcf707fa"></a>Performs a bit wise XOR between the two 16-bit variables v1 and v2.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>lshl(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_18247119-5c99-4f6e-8dcc-7daa25ff4a3c" id="_18247119-5c99-4f6e-8dcc-7daa25ff4a3c"></a>Logically shifts left the 16-bit variable v1 by v2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_ae281945-5f5a-4cbc-8327-b6495e99f2a1" id="_ae281945-5f5a-4cbc-8327-b6495e99f2a1"></a>if v2 is negative, v1 is shifted to the least significant bits by (-v2) positions with insertion of 0 at the most significant bit.<br/>
if v2 is positive, v1 is shifted to the most significant bits by (v2) positions without saturation control.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>lshr(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e9c5ec9a-36ba-4f95-a395-2e279b35ec54" id="_e9c5ec9a-36ba-4f95-a395-2e279b35ec54"></a>Logically shifts right the 16-bit variable v1 by v2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_3ce16a09-00ca-4ce3-b545-304d91241487" id="_3ce16a09-00ca-4ce3-b545-304d91241487"></a>if v2 is positive, v1 is shifted to the least significant bits by (v2) positions with insertion of 0 at the most significant bit.<br/>
if v2 is negative, v1 is shifted to the most significant bits by (-v2) positions without saturation control.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_and(L_v1, L_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d8bc8630-07cd-49bf-8188-c9c8d3b47e5a" id="_d8bc8630-07cd-49bf-8188-c9c8d3b47e5a"></a>Performs a bit wise AND between the two 32-bit variables L_v1 and L_v2.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_or(L_v1, L_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_57399a5e-0d54-4d01-a683-4ed7c26ab729" id="_57399a5e-0d54-4d01-a683-4ed7c26ab729"></a>Performs a bit wise OR between the two 32-bit variables L_v1 and L_v2.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_xor(L_v1, L_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2c1d7f8f-5a73-4bf8-8589-bf491bb97b99" id="_2c1d7f8f-5a73-4bf8-8589-bf491bb97b99"></a>Performs a bit wise XOR between the two 32-bit variables L_v1 and L_v2.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_lshl(L_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_5fd20d37-445a-496b-97f5-19f2c0f63667" id="_5fd20d37-445a-496b-97f5-19f2c0f63667"></a>Logically shifts left the 32-bit variable L_v1 by v2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_bf64d0a8-8315-45b1-8208-672387f39401" id="_bf64d0a8-8315-45b1-8208-672387f39401"></a>if v2 is negative, L_v1 is shifted to the least significant bits by (-v2) positions with insertion of 0 at the most significant bit.<br/>
if v2 is positive, L_v1 is shifted to the most significant bits by (v2) positions without saturation control.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_lshr(L_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_6ba655ca-a1df-4cc9-bd77-940bfee52621" id="_6ba655ca-a1df-4cc9-bd77-940bfee52621"></a>Logically shifts right the 32-bit variable L_v1 by v2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_9d04b674-0032-4c54-bf65-486373c46e30" id="_9d04b674-0032-4c54-bf65-486373c46e30"></a>if v2 is positive, L_v1 is shifted to the least significant bits by (v2) positions with insertion of 0 at the most significant bit.<br/>
if v2 is negative, L_v1 is shifted to the most significant bits by (-v2) positions without saturation control.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>extract_h(L_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_cca74535-b80d-46ed-a2c8-e50a02b949fa" id="_cca74535-b80d-46ed-a2c8-e50a02b949fa"></a>Returns the 16 most significant bits of L_v1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>extract_l(L_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_34e40e80-d8a1-4169-ba05-b57d53a3a72a" id="_34e40e80-d8a1-4169-ba05-b57d53a3a72a"></a>Returns the 16 least significant bits of L_v1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>round(L_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ec5976fc-dc50-435d-8b15-9b7aa4047da8" id="_ec5976fc-dc50-435d-8b15-9b7aa4047da8"></a>Rounds the lower 16 bits of the 32-bit input number into the most significant 16 bits with saturation. Shifts the resulting bits right by 16 and returns the 16-bit number:</p>
<p class="MsoNormal"><a name="_71407516-6cb0-46f0-9949-ad66b3aab609" id="_71407516-6cb0-46f0-9949-ad66b3aab609"></a>
<tt>round(L_v1) = extract_h(L_add(L_v1, 32768))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_deposit_h(v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9fb27e64-2f7e-4669-a331-d2e51dbd66d1" id="_9fb27e64-2f7e-4669-a331-d2e51dbd66d1"></a>Deposits the 16-bit v1 into the 16-bit most significant bits of the 32 bit output. The 16 least significant bits of the output are zeroed.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_deposit_l(v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e1b4cc24-fb01-4422-89e6-e4e122b5887d" id="_e1b4cc24-fb01-4422-89e6-e4e122b5887d"></a>Deposits the 16-bit v1 into the 16-bit least significant bits of the 32 bit output. The 16 most significant bits of the output are sign extended.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_add_c(L_v1, L_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_7b4023ab-c447-4a65-817a-a20ba9566e25" id="_7b4023ab-c447-4a65-817a-a20ba9566e25"></a>Performs the 32-bit addition with carry. No saturation. Generates carry and overflow values. The carry and overflow values are binary variables which can be tested and assigned values.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_sub_c(L_v1, L_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_5b16d501-b902-473e-af94-c5e2717b6460" id="_5b16d501-b902-473e-af94-c5e2717b6460"></a>Performs the 32-bit subtraction with carry (borrow). Generates carry (borrow) and overflow values. No saturation. The carry and overflow values are binary variables which can be tested and assigned values.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>shr_r(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_62b7ba46-1fde-4d3c-af41-023589118ca7" id="_62b7ba46-1fde-4d3c-af41-023589118ca7"></a>Same as shr(v1, v2) but with rounding. Saturates the result in case of underflows or overflows.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_ed70d136-72a4-4cac-a2a1-7b2c2ee7933f" id="_ed70d136-72a4-4cac-a2a1-7b2c2ee7933f"></a><tt>if v2 is strictly greater than zero, then</tt><br/>
<tt>if (sub(shl(shr(v1,v2), 1), shr(v1, sub(v2, 1))) == 0)</tt><br/>
<tt>then shr_r(v1, v2) = shr(v1, v2)</tt><br/>
<tt>else shr_r(v1, v2) = add(shr(v1, v2), 1)</tt><br/>
On the other hand, if v2 is lower than or equal to zero, then<br/>
<tt>shr_r(v1, v2) = shr(v1, v2)</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>shl_r(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c64089b6-24d3-422d-9cec-a846def79974" id="_c64089b6-24d3-422d-9cec-a846def79974"></a>Same as shl(v1, v2) but with rounding. Saturates the result in case of underflows or overflows:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_0f07fe8f-ce3e-4f66-a93f-3796dacaa5a5" id="_0f07fe8f-ce3e-4f66-a93f-3796dacaa5a5"></a><tt>shl_r(v1, v2) = shr_r(v1, -v2)</tt><br/>
In the previous version of the STL-basic operators, this operator is called shift_r(v1, v2); both names can be used.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_shr_r(L_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2b0baef1-2038-41ac-bb30-ed024ec9ade3" id="_2b0baef1-2038-41ac-bb30-ed024ec9ade3"></a>Same as L_shr(v1, v2) but with rounding. Saturates the result in case of underflows or overflows:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_fc261aa2-3299-4bbc-9f33-b3fd4f6a0d90" id="_fc261aa2-3299-4bbc-9f33-b3fd4f6a0d90"></a><tt>if v2 is strictly greater than zero, then</tt><br/>
<tt>if(L_sub(L_shl(L_shr(L_v1, v2), 1), L_shr(L_v1, sub(v2, 1)))) == 0</tt><br/>
<tt>then L_shr_r(L_v1, v2) = L_shr(L_v1, v2)</tt><br/>
<tt>else L_shr_r(L_v1, v2) = L_add(L_shr(L_v1, v2), 1)</tt><br/>
On the other hand,<br/>
<tt>if v2 is less than or equal to zero, then</tt><br/>
<tt>L_shr_r( L_v1, v2) = L_shr( L_v1, v2)</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_shl_r(L_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_855dd2fc-ec9b-4cb3-ab70-278b48c0a513" id="_855dd2fc-ec9b-4cb3-ab70-278b48c0a513"></a>Same as L_shl(L_v1, v2) but with rounding. Saturates the result in case of underflows or overflows.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_f128a6c2-4e65-462f-80a2-2515bccc3c26" id="_f128a6c2-4e65-462f-80a2-2515bccc3c26"></a><tt>L_shift_r(L_v1, v2) = L_shr_r(L_v1, -v2)</tt><br/>
In the previous version of the STL-basic operators, this operator is called L_shift_r(L_v1, v2); both names can be used.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>i_mult(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_122bbb2a-26f9-47c2-ab8b-1b9adee5936d" id="_122bbb2a-26f9-47c2-ab8b-1b9adee5936d"></a>Multiplies two 16-bit variables v1 and v2 returning a 16 bit value with overflow control.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>rotl(v1, v2, *v3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_a3a2c21d-835f-49f9-87f7-b8f2f525048c" id="_a3a2c21d-835f-49f9-87f7-b8f2f525048c"></a>Rotates the 16-bit variable v1 by 1 bit to the most significant bits. Bit 0 of v2 is copied to the least significant bit of the result before it is returned. The most significant bit of v1 is copied to the bit 0 of v3 variable.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>rotr(v1, v2, *v3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_dc3853fe-e8f3-4877-b972-839fd4074a11" id="_dc3853fe-e8f3-4877-b972-839fd4074a11"></a>Rotates the 16-bit variable v1 by 1 bit to the least significant bits. Bit 0 of v2 is copied to the most significant bit of the result before it is returned. The least significant bit of v1 is copied to the bit 0 of v3 variable.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_rotl(L_v1, v2, *v3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_86e8c7e2-aa56-439f-9be4-73ac7edc94dd" id="_86e8c7e2-aa56-439f-9be4-73ac7edc94dd"></a>Rotates the 32-bit variable L_v1 by 1 bit to the most significant bits. Bit 0 of v2 is copied to the least significant bit of the result before it is returned. The most significant bit of L_v1 is copied to the bit 0 of v3 variable.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_rotr(L_v1, v2, *v3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_0e0e403d-cf5c-42e6-bc70-8c3f2d642c49" id="_0e0e403d-cf5c-42e6-bc70-8c3f2d642c49"></a>Rotates the 32-bit variable L_v1 by 1 bit to the least significant bits. Bit 0 of v2 is copied to the most significant bit of the result before it is returned. The least significant bit of L_v1 is copied to the bit 0 of v3 variable.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_sat(L_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d3bf08a9-f61d-4565-b982-c85f4d541a0f" id="_d3bf08a9-f61d-4565-b982-c85f4d541a0f"></a>Long (32-bit) L_v1 is set to 2147483647 if an overflow occurred, or -2147483648 if an underflow occurred, on the most recent L_add_c(), L_sub_c(), L_macNs() or L_msuNs() operations. The carry and overflow values are binary variables which can be tested and assigned values.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_mls(L_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2654eaa0-21c7-47fd-8a04-13674a7c0b35" id="_2654eaa0-21c7-47fd-8a04-13674a7c0b35"></a>Performs a multiplication of a 32-bit variable L_v1 by a 16 bit variable v2, returning a 32-bit value.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>div_s(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_09aba5e0-7096-4bc7-8aa3-9eee4b9d3596" id="_09aba5e0-7096-4bc7-8aa3-9eee4b9d3596"></a>Produces a result which is the fractional integer division of v1 by v2. Values in v1 and v2 must be positive and v2 must be greater than or equal to v1. The result is positive (leading bit equal to 0) and truncated to 16 bits. If v1 equals v2, then div(v1, v2) = 32767.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>div_l(L_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_4d26c59f-fdd1-4b71-9f56-2b7ef7165498" id="_4d26c59f-fdd1-4b71-9f56-2b7ef7165498"></a>Produces a result which is the fractional integer division of a positive 32-bit variable L_v1 by a positive 16-bit variable v2. The result is positive (leading bit equal to 0) and truncated to 16 bits.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Mpy_32_16_ss(L_v1, v2, *L_v3_h, *v3_l)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_777c5e05-e26f-4b38-b42c-7453ea094297" id="_777c5e05-e26f-4b38-b42c-7453ea094297"></a>Multiplies the 2 signed values L_v1 (32-bit) and v2 (16-bit) with saturation control on 48 bits.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_388a4699-87de-4a52-a205-41647c05b7fb" id="_388a4699-87de-4a52-a205-41647c05b7fb"></a>The operation is performed in fractional mode:<br/>
When L_v1 is in 1Q31 format, and v2 is in 1Q15 format, the result is produced in 1Q47 format: L_v3_h bears the 32 most significant bits while v3_l bears the 16 least significant bits.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Mpy_32_32_ss(L_v1, L_v2, *L_v3_h, *L_v3_l)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d6a04466-b751-4c0d-9d57-212b8c6e196f" id="_d6a04466-b751-4c0d-9d57-212b8c6e196f"></a>Multiplies the 2 signed 32-bit values L_v1 and L_v2 with saturation control on 64 bits.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_75d6fcc1-10bd-41b7-8695-c8e7c81871a6" id="_75d6fcc1-10bd-41b7-8695-c8e7c81871a6"></a>The operation is performed in fractional mode:<br/>
When L_v1 and L_v2 are in 1Q31 format, the result is produced in 1Q63 format: L_v3_h bears the 32 most significant bits while L_v3_l bears the 32 least significant bits.</p>
</td></tr></table></div>
<div><a name="_basic_operators_for_unsigned_data_types" id="_basic_operators_for_unsigned_data_types"></a><h3>A.14.3.<span style="mso-tab-count:1">&#xA0; </span>Basic operators for unsigned data types</h3><p style="text-align:left;" align="left" class="MsoNormal"><a name="_8046ecdf-01cb-4af6-8a81-04c59781e5be" id="_8046ecdf-01cb-4af6-8a81-04c59781e5be"></a>Name: <tt>enhUL32.c</tt><br/>
Associated header file: <tt>stl.h</tt>, <tt>enhUL32.h</tt></p>
<p class="MsoNormal"><a name="_21db23c2-2fa2-4358-b3cb-ef76cf07918a" id="_21db23c2-2fa2-4358-b3cb-ef76cf07918a"></a>Variable definitions:</p>

<p style="mso-list:l3 level1 lfo4;" class="MsoListParagraphCxSpFirst">
U_var1, U_varout_l: 16-bit unsigned variables
</p>
<p style="mso-list:l3 level1 lfo4;" class="MsoListParagraphCxSpLast">
UL_var1, UL_var2, var1, UL_varout_h, UL_varout_l: 32-bit unsigned variables
</p>

<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>UL_addNs(UL_var1, UL_var2, *var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f7cdf6fe-b6b9-4539-9dc9-46492926baa3" id="_f7cdf6fe-b6b9-4539-9dc9-46492926baa3"></a>Adds the two unsigned 32-bit variables UL_var1 and UL_var2 with overflow control, but without saturation. Returns 32-bit unsigned result. var1 Is set to 1 if wrap around occurred, otherwise 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>UL_subNs(UL_var1, UL_var2, *var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e7877823-e4b3-4dc7-9abb-42fa7b5cfcfa" id="_e7877823-e4b3-4dc7-9abb-42fa7b5cfcfa"></a>Subtracts the 32-bit unsigned variable UL_var2 from the 32-bit unsigned variable UL_var1 with overflow control, but without saturation. Returns 32-bit unsigned result. var1 Is set to 1 if wrap around (to "negative") occurred, otherwise 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>norm_ul (UL_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_8423622e-feb2-446a-89c0-fddb23069022" id="_8423622e-feb2-446a-89c0-fddb23069022"></a>Produces the number of left shifts needed to normalize the 32-bit unsigned variable UL_var1 for positive values on the interval with minimum of 0 and maximum of 0xffffffff. If UL_var1 contains 0, return 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>UL_Mpy_32_32(UL_var1, UL_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e5e5b6e2-90f0-4e90-b296-e467826780a8" id="_e5e5b6e2-90f0-4e90-b296-e467826780a8"></a>Multiplies the two unsigned values UL_var1 and UL_var2 and returns the lower 32 bits, without saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_809338be-3eaa-484b-8a2a-2d93b3023859" id="_809338be-3eaa-484b-8a2a-2d93b3023859"></a>UL_var1 and UL_var2 are supposed to be in Q32 format.
The result is produced in Q64 format, the 32 LS bits.
Operates like a regular 32x32-bit unsigned int multiplication in ANSI-C.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Mpy_32_32_uu(UL_var1, UL_var2, *UL_varout_h, *UL_varout_l)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_4f070f90-a7c3-4086-85de-4407368fe9f0" id="_4f070f90-a7c3-4086-85de-4407368fe9f0"></a>Multiplies the two unsigned 32-bit variables UL_var1 and UL_var2.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_27a0e3d8-8af0-419c-9a04-d2dd326c6bd6" id="_27a0e3d8-8af0-419c-9a04-d2dd326c6bd6"></a>The operation is performed in fractional mode.<br/>
UL_var1 and UL_var2 are supposed to be in Q32 format.<br/>
The result is produced in Q64 format: UL_varout_h points to the 32 MS bits while UL_varout_l points to the 32 LS bits.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Mpy_32_16_uu(UL_var1, U_var1, *UL_varout_h, *U_varout_l)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_75d5e606-e472-4e4e-b9fc-474634911cc7" id="_75d5e606-e472-4e4e-b9fc-474634911cc7"></a>Multiplies the unsigned 32-bit variable UL_var1 with the unsigned 16-bit variable U_var1.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_478d77fc-8934-49c9-b60d-7c45a16e07c4" id="_478d77fc-8934-49c9-b60d-7c45a16e07c4"></a>The operation is performed in fractional mode:<br/>
UL_var1 is supposed to be in Q32 format.<br/>
U_var1 is supposed to be in Q16 format.<br/>
The result is produced in Q48 format: UL_varout_h points to the 32 MS bits while U_varout_l points to the 16 LS bits.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>UL_deposit_l(U_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_6899bc8c-ac24-4ac1-9c48-04f281c457bb" id="_6899bc8c-ac24-4ac1-9c48-04f281c457bb"></a>Deposit the 16-bit U_var1 into the 16 LS bits of the 32-bit output. The 16 MS bits of the output are not sign extended.</p>
</td></tr></table></div>
<div><a name="_basic_operators_that_use_40_bit_registersaccumulators" id="_basic_operators_that_use_40_bit_registersaccumulators"></a><h3>A.14.4.<span style="mso-tab-count:1">&#xA0; </span>Basic operators that use 40-bit registers/accumulators</h3><p style="text-align:left;" align="left" class="MsoNormal"><a name="_ea4e5b34-ba1a-4dd8-8a82-77ca1b046ad9" id="_ea4e5b34-ba1a-4dd8-8a82-77ca1b046ad9"></a>Name: <tt>enh40.c</tt><br/>
Associated header file: <tt>stl.h</tt>, <tt>enh40.h</tt></p>
<p class="MsoNormal"><a name="_733904c6-1344-4748-b2cf-089435acc30f" id="_733904c6-1344-4748-b2cf-089435acc30f"></a>Variable definitions:</p>

<p style="mso-list:l3 level1 lfo5;" class="MsoListParagraphCxSpFirst">
v1, v2, v3: 16-bit variables
</p>
<p style="mso-list:l3 level1 lfo5;" class="MsoListParagraphCxSpMiddle">
L_v1: 32-bit variables
</p>
<p style="mso-list:l3 level1 lfo5;" class="MsoListParagraphCxSpLast">
L40_v1, L40_v2: 40-bit variables
</p>

<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_add(L40_v1, L40_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c78fd5dd-73a2-4b5a-aa0b-c32eb1d35f57" id="_c78fd5dd-73a2-4b5a-aa0b-c32eb1d35f57"></a>Adds the two 40-bit variables L40_v1 and L40_v2 without saturation control on 40 bits. Any detected overflow on 40 bits will exit execution.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_sub(L40_v1, L40_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_af1a06c3-b82d-4fb6-94cf-9950033af67d" id="_af1a06c3-b82d-4fb6-94cf-9950033af67d"></a>Subtracts the two 40-bit variables L40_v2 from L40_v1 without saturation control on 40 bits. Any detected overflow on 40 bits will exit execution.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_abs(L40_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2c4ba3a9-599e-459e-80a6-827e84a50f60" id="_2c4ba3a9-599e-459e-80a6-827e84a50f60"></a>Returns the absolute value of the 40-bit variable L40_v1 without saturation control on 40 bits. Any detected overflow on 40 bits will exit execution.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_shl(L40_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_655e4a2e-cecf-4509-b18d-739945b3ab13" id="_655e4a2e-cecf-4509-b18d-739945b3ab13"></a>Arithmetically shifts left the 40-bit variable L40_v1 by v2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_0ef58d45-cac0-4a0f-b5a0-f0de7b9ee98d" id="_0ef58d45-cac0-4a0f-b5a0-f0de7b9ee98d"></a>if v2 is negative, L40_v1 is shifted to the least significant bits by (-v2) positions with extension of the sign bit.<br/>
if v2 is positive, L40_v1 is shifted to the most significant bits by (v2) positions without saturation control on 40 bits. Any detected overflow on 40 bits will exit execution.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_shr(L40_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d9f4ef10-1a03-499a-b877-e0540cbfb303" id="_d9f4ef10-1a03-499a-b877-e0540cbfb303"></a>Arithmetically shifts right the 40-bit variable L40_v1 by v2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_6867bf44-8e14-438b-9ea3-e387969c7079" id="_6867bf44-8e14-438b-9ea3-e387969c7079"></a>if v2 is positive, L40_v1 is shifted to the least significant bits by (v2) positions with extension of the sign bit.
if v2 is negative, L40_v1 is shifted to the most significant bits by (-v2) positions without saturation control on 40 bits. Any detected overflow on 40 bits will exit execution.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_negate(L40_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f96325b1-3651-4dd4-9fdd-53c86a04cd62" id="_f96325b1-3651-4dd4-9fdd-53c86a04cd62"></a>Negates the 40-bit variable L40_v1 without saturation control on 40 bits. Any detected overflow on 40 bits will exit execution.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_max(L40_v1, L40_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_411df955-a3b9-46ca-a407-8623db14cda9" id="_411df955-a3b9-46ca-a407-8623db14cda9"></a>Compares two 40-bit variables L40_v1 and L40_v2 and returns the maximum value.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_min(L40_v1, L40_v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f7ee1404-f11a-4997-bd84-d0d1765bfa4c" id="_f7ee1404-f11a-4997-bd84-d0d1765bfa4c"></a>Compares two 40-bit variables L40_v1 and L40_v2 and returns the minimum value.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>norm_L40(L40_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_57794030-b3b1-4bd8-9f30-5537170648d8" id="_57794030-b3b1-4bd8-9f30-5537170648d8"></a>Produces the number of left shifts needed to normalize the 40-bit variable L40_v1 for positive values on the interval with minimum of 1073741824 and maximum 2147483647, and for negative values on the interval with minimum of -2147483648 and maximum of -1073741824; in order to normalize the result, the following operation must be done:</p>
<p class="MsoNormal"><a name="_2d027b6a-51f1-49aa-b44b-7ed675172262" id="_2d027b6a-51f1-49aa-b44b-7ed675172262"></a>
<tt>L40_norm_v1 = L40_shl(L40_v1, norm_L40(L40_v1))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_mult(v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c94242e9-afab-48de-9fca-57f290ccfc24" id="_c94242e9-afab-48de-9fca-57f290ccfc24"></a>Multiplies the 2 signed 16-bit variables v1 and v2 without saturation control on 40 bits. Any detected overflow on 40 bits will exit execution.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_4e92f2ed-e6bd-4cac-8084-1319773309de" id="_4e92f2ed-e6bd-4cac-8084-1319773309de"></a>The operation is performed in fractional mode:<br/>
v1 and v2 are supposed to be in 1Q15 format.<br/>
The result is produced in 9Q31 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_mac(L40_v1, v2, v3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_881b9bb7-c4a2-487a-8ca0-82cef528302c" id="_881b9bb7-c4a2-487a-8ca0-82cef528302c"></a>Equivalent to:</p>
<p class="MsoNormal"><a name="_f71ef98a-9a2c-4a16-bff1-30f36d47ee15" id="_f71ef98a-9a2c-4a16-bff1-30f36d47ee15"></a>
<tt>L40_add(L40_v1, L40_mult(v2, v3))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_msu(L40_v1, v2, v3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_79f08795-87b1-400c-b717-2e6801a8325e" id="_79f08795-87b1-400c-b717-2e6801a8325e"></a>Equivalent to:</p>
<p class="MsoNormal"><a name="_86c04810-9bf1-43c9-a7c8-f7b5f2e285b2" id="_86c04810-9bf1-43c9-a7c8-f7b5f2e285b2"></a>
<tt>L40_sub(L40_v1, L40_mult(v2, v3))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_lshl(L40_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ac1f0493-0ff2-467b-b5ef-f5d7c28f5d63" id="_ac1f0493-0ff2-467b-b5ef-f5d7c28f5d63"></a>Logically shifts left the 40-bit variable L40_v1 by v2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_cc6c3bec-5b0e-46dc-a79f-854b7784256f" id="_cc6c3bec-5b0e-46dc-a79f-854b7784256f"></a>if v2 is negative, L40_v1 is shifted to the least significant bits by (-v2) positions with insertion of 0 at the most significant bit.<br/>
if v2 is positive, L40_v1 is shifted to the most significant bits by (v2) positions without saturation control.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_lshr(L40_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_6c0e490c-b323-4a18-a868-3db6da481498" id="_6c0e490c-b323-4a18-a868-3db6da481498"></a>Logically shifts right the 40-bit variable L40_v1 by v2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_a8e77a71-69a5-47f1-8859-64d621b38eb9" id="_a8e77a71-69a5-47f1-8859-64d621b38eb9"></a>if v2 is positive, L40_v1 is shifted to the least significant bits by (v2) positions with insertion of 0 at the most significant bit.<br/>
if v2 is negative, L40_v1 is shifted to the most significant bits by (-v2) positions without saturation control.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Extract40_H(L40_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b7267bba-854a-4539-a1af-b12cd710f764" id="_b7267bba-854a-4539-a1af-b12cd710f764"></a>Returns the bits [31..16] of L40_v1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Extract40_L(L40_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d8781399-cd08-4e9f-a02e-bff052405284" id="_d8781399-cd08-4e9f-a02e-bff052405284"></a>Returns the bits [15..00] of L40_v1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>round40(L40_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c94fc3c2-b356-40ed-8ad4-56258c6b93ce" id="_c94fc3c2-b356-40ed-8ad4-56258c6b93ce"></a>Equivalent to:</p>
<p class="MsoNormal"><a name="_42310f9b-16fa-481d-adb7-65409e7424bc" id="_42310f9b-16fa-481d-adb7-65409e7424bc"></a>
<tt>extract_h(L_saturate40(L40_round(L40_v1)))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_Extract40(L40_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_aae86e99-7a56-4d3f-b272-ee039e105504" id="_aae86e99-7a56-4d3f-b272-ee039e105504"></a>Returns the bits [31..00] of L40_v1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L_saturate40(L40_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_38b0b944-1f5e-43d9-8b94-7fbbe0f11212" id="_38b0b944-1f5e-43d9-8b94-7fbbe0f11212"></a>If L40_v1 is greater than 2147483647,returns 2147483647.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_97deba71-065f-4bb3-9777-91a18816afda" id="_97deba71-065f-4bb3-9777-91a18816afda"></a>If L40_v1 is lower than -2147483648,returns -2147483648.<br/>
If not, equivalent to: <tt>L_Extract40(L40_v1)</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_deposit_h(v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_21c8433c-efe4-42ed-8d78-bcb538a38d71" id="_21c8433c-efe4-42ed-8d78-bcb538a38d71"></a>Deposits the 16-bit variable v1 in the bits [31..16] of the return value: the return value bits [15..0] are set to 0 and the bits [39..32] sign extend v1 sign bit.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_deposit_l(v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9fa5f4b2-cbd0-48dc-a24c-9e5ddc388e04" id="_9fa5f4b2-cbd0-48dc-a24c-9e5ddc388e04"></a>Deposits the 16-bit variable v1 in the bits [15..0] of the return value: the return value bits [39..16] sign extend v1 sign bit.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_deposit32(L_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_520eca50-46cc-40c1-abaf-bc7b982c9691" id="_520eca50-46cc-40c1-abaf-bc7b982c9691"></a>Deposits the 32-bit variable L_v1 in the bits [31..0] of the return value: the return value bits [39..32] sign extend L_v1 sign bit.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_round(L40_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_46f07b29-6918-4a43-ba81-eef4f1d0c65e" id="_46f07b29-6918-4a43-ba81-eef4f1d0c65e"></a>Performs a rounding to the infinite on the 40-bit variable L40_v1. 32768 is added to L40_v1 without saturation control on 40 bits. Any detected overflow on 40 bits will exit execution. The end-result 16 LSB are cleared to 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>mac_r40(L40_v1, v2, v3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_58b6a8a7-d09e-4923-89bb-b46de5a1ea62" id="_58b6a8a7-d09e-4923-89bb-b46de5a1ea62"></a>Equivalent to:</p>
<p class="MsoNormal"><a name="_12bd7b1c-89c3-4aa5-ad77-640803909f04" id="_12bd7b1c-89c3-4aa5-ad77-640803909f04"></a>
<tt>round40(L40_mac(L40_v1, v2, v3))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>msu_r40(L40_v1, v2, v3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e06ff8de-1f27-4d89-b171-fef84f36a4a0" id="_e06ff8de-1f27-4d89-b171-fef84f36a4a0"></a>Equivalent to:</p>
<p class="MsoNormal"><a name="_8ddadbb2-3b98-45a9-babf-b6b19b1b271d" id="_8ddadbb2-3b98-45a9-babf-b6b19b1b271d"></a>
<tt>round40(L40_msu(L40_v1, v2, v3))</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_shr_r(L40_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_30b683d5-5584-4315-884d-2d9a806169f6" id="_30b683d5-5584-4315-884d-2d9a806169f6"></a>Arithmetically shifts the 40-bit variable L40_v1 by v2 positions to the least significant bits and rounds the result.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_a462d924-5596-4fe3-a849-5241aa6d31af" id="_a462d924-5596-4fe3-a849-5241aa6d31af"></a>It is equivalent to L40_shr(L40_v1, v2) except that if v2 is positive and the last shifted out bit is 1, then the shifted result is incremented by 1 without saturation control on 40 bits.<br/>
Any detected overflow on 40 bits will exit execution.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_shl_r(L40_v1, v2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_08a2edd4-7cb6-4e61-b252-fa533076913b" id="_08a2edd4-7cb6-4e61-b252-fa533076913b"></a>Arithmetically shifts the 40-bit variable L40_v1 by v2 positions to the most significant bits and rounds the result.</p>
<p class="MsoNormal"><a name="_8fb50df5-6817-47b8-b72b-e9c77aebd917" id="_8fb50df5-6817-47b8-b72b-e9c77aebd917"></a>It is equivalent to L40_shl(L40_v1, v2) except if v2 is negative. In this case, it does the same as L40_shr_r(L40_v1, (-v2)).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>L40_set(L40_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_82d50817-c64b-4a9e-961f-8b9ebf668f1b" id="_82d50817-c64b-4a9e-961f-8b9ebf668f1b"></a>Assigns a 40-bit constant to the returned 40-bit variable.</p>
</td></tr></table></div>
<div><a name="_basic_operators_that_use_64_bit_registersaccumulators" id="_basic_operators_that_use_64_bit_registersaccumulators"></a><h3>A.14.5.<span style="mso-tab-count:1">&#xA0; </span>Basic operators that use 64-bit registers/accumulators</h3><p style="text-align:left;" align="left" class="MsoNormal"><a name="_a712151a-2b7d-44c8-9560-a67f47ce0bee" id="_a712151a-2b7d-44c8-9560-a67f47ce0bee"></a>Name: <tt>enh64.c</tt><br/>
Associated header file: <tt>enh64.h</tt>, <tt>stl.h</tt></p>
<p class="MsoNormal"><a name="_0ac39c66-4881-40b4-bc91-7b0ba256ef9f" id="_0ac39c66-4881-40b4-bc91-7b0ba256ef9f"></a>Variable definitions:</p>

<p style="mso-list:l3 level1 lfo6;" class="MsoListParagraphCxSpFirst">
var1, var2: 16-bit variables
</p>
<p style="mso-list:l3 level1 lfo6;" class="MsoListParagraphCxSpMiddle">
L_var1, L_var2: 32-bit variables
</p>
<p style="mso-list:l3 level1 lfo6;" class="MsoListParagraphCxSpLast">
W_var, W_var1, W_var2, W_acc: 64-bit variables
</p>

<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_add_nosat(W_var1, W_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_976d770d-a2ad-426e-badf-8e3e7267f9a4" id="_976d770d-a2ad-426e-badf-8e3e7267f9a4"></a>Adds the two 64-bit variables W_var1 and W_var2 without saturation control on 64 bits.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_sub_nosat(W_var1, W_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_275d3ac0-558b-4b8c-9496-789894bb53a0" id="_275d3ac0-558b-4b8c-9496-789894bb53a0"></a>Subtracts the two 64-bit variables W_var1 and W_var2 without saturation control on 64 bits.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_shl(W_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_754553fe-a798-40cd-b29a-f90b387918e4" id="_754553fe-a798-40cd-b29a-f90b387918e4"></a>Arithmetically shifts left the 64-bit variable W_var1 by var2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_d8ec548f-55ab-448d-90ab-824253b224cc" id="_d8ec548f-55ab-448d-90ab-824253b224cc"></a>if var2 is negative, W_var1 is shifted to the least significant bits by (-var2) positions with extension of the sign bit;<br/>
if var2 is positive, W_var1 is shifted to the most significant bits by (var2) positions with saturation control on 64 bits.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_shl_nosat(W_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_377e2b9e-9dd9-4e7e-901c-b7d6588ccaa4" id="_377e2b9e-9dd9-4e7e-901c-b7d6588ccaa4"></a>Arithmetically shifts left the 64-bit variable W_var1 by var2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_a876fec9-5ac9-4c02-947d-408417325f69" id="_a876fec9-5ac9-4c02-947d-408417325f69"></a>if var2 is negative, W_var1 is shifted to the least significant bits by (-var2) positions with extension of the sign bit;<br/>
if var2 is positive, W_var1 is shifted to the most significant bits by (var2) positions without saturation control on 64 bits.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_shr(W_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_716be866-e06b-4049-958d-10029e6a9543" id="_716be866-e06b-4049-958d-10029e6a9543"></a>Arithmetically shifts right the 64-bit variable W_var1 by var2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_462bf4d0-67be-486f-8ce7-3e4e5f30fad9" id="_462bf4d0-67be-486f-8ce7-3e4e5f30fad9"></a>if var2 is negative, W_var1 is shifted to the most significant bits by (-var2) positions with saturation control on 64 bits;<br/>
if var2 is positive, W_var1 is shifted to the least significant bits by (var2) positions with extension of the sign bit.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_shr_nosat(W_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1a001e05-a1f1-469b-b7bf-a6a3d8e87e18" id="_1a001e05-a1f1-469b-b7bf-a6a3d8e87e18"></a>Arithmetically shifts right the 64-bit variable W_var1 by var2 positions:</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_c8ae3c87-582f-49fa-b790-e0d7debc8cc1" id="_c8ae3c87-582f-49fa-b790-e0d7debc8cc1"></a>if var2 is negative, W_var1 is shifted to the most significant bits by (-var2) positions without saturation control on 64 bits;<br/>
if var2 is positive, W_var1 is shifted to the least significant bits by (var2) positions with extension of the sign bit.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_mult_32_16(L_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f25f0dbd-0dbf-42a6-bd29-e048b745a7df" id="_f25f0dbd-0dbf-42a6-bd29-e048b745a7df"></a>Multiplies the signed 32-bit variable L_var1 with signed 16-bit variable var2. Shifts the product left by 1 and sign extends to 64-bits without saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_4c6e1abd-8064-45df-b898-b29bc199dafd" id="_4c6e1abd-8064-45df-b898-b29bc199dafd"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and var2 is in 1Q15 format, then the result is produced in 17Q47 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_mac_32_16(W_acc, L_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_60e96a90-db0c-4401-ab1f-d7171c42f492" id="_60e96a90-db0c-4401-ab1f-d7171c42f492"></a>Multiplies the signed 32-bit variable L_var1 with signed 16-bit variable var2. Shifts the product left by 1 and sign extends to 64-bits without saturation control;</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_2b5e7d93-fee5-4c16-b6af-ea7cf6d45f44" id="_2b5e7d93-fee5-4c16-b6af-ea7cf6d45f44"></a>adds this 64 bit value to the 64 bit W_acc without saturation control, and returns a 64 bit result.<br/>
The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and var2 is in 1Q15 format, then the product is produced in 17Q47 format which is then added to W_acc (in 17Q47) format. The final result is in 17Q47 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_msu_32_16(W_acc, L_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_0963f236-bb73-43d0-b731-aa9521ebcb56" id="_0963f236-bb73-43d0-b731-aa9521ebcb56"></a>Multiplies the signed 32-bit variable L_var1 with signed 16-bit variable var2. Left-shifts the product by 1 and sign extends to 64-bit without saturation control; subtracts this 64 bit value from the 64 bit W_acc without saturation control, and returns a 64 bit result.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_db37c3bf-03bc-479c-8a7a-9d4129116948" id="_db37c3bf-03bc-479c-8a7a-9d4129116948"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and var2 is in 1Q15 format, then the product is produced in 17Q47 format which is then subtracted from W_acc (in 17Q47) format. The final result is in 17Q47 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_mult0_16_16(var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1ec9c7b6-f6b2-40ad-9057-9d90d28b7b26" id="_1ec9c7b6-f6b2-40ad-9057-9d90d28b7b26"></a>Multiplies 16-bit var1 by 16-bit var2, sign extends to 64 bits and returns the 64 bit result.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_mac0_16_16(W_acc, var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_213c93be-5902-421d-b275-30ca2570cc89" id="_213c93be-5902-421d-b275-30ca2570cc89"></a>Multiplies 16-bit var1 by 16-bit var2, sign extends to 64 bits; adds this 64 bit value to the 64 bit W_acc without saturation control, and returns a 64 bit result.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_msu0_16_16(W_acc, var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f7a317b7-0812-4025-9133-ecda7604b80f" id="_f7a317b7-0812-4025-9133-ecda7604b80f"></a>Multiplies 16-bit var1 by 16-bit var2, sign extends to 64 bits; subtracts this 64 bit value from the 64 bit W_acc without saturation control, and returns a 64 bit result.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_mult_16_16(W_acc, var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_58475ac7-97aa-4b79-85f3-1ac01f350047" id="_58475ac7-97aa-4b79-85f3-1ac01f350047"></a>Multiplies a signed 16-bit var1 by signed 16-bit var2, shifts the product left by 1 and sign extends to 64-bits without saturation control and returns a 64 bit result.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_e6d54bf1-685e-4e43-84d4-14b268799dd6" id="_e6d54bf1-685e-4e43-84d4-14b268799dd6"></a>The operation is performed in fractional mode.<br/>
For example, if var1 is in 1Q15 format and var2 is in 1Q15 format, then the result is produced in 33Q31 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_mac_16_16(W_acc, var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_54477d3b-83f1-4ab2-81e5-c680377ca14a" id="_54477d3b-83f1-4ab2-81e5-c680377ca14a"></a>Multiplies a signed 16-bit var1 by signed 16-bit var2, shifts the result left by 1 and sign extends to 64-bits;</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_766efb1c-a78f-41c1-ad91-33573523fe19" id="_766efb1c-a78f-41c1-ad91-33573523fe19"></a>add this 64 bit value to the 64 bit W_acc without saturation control, and returns a 64 bit result.<br/>
The operation is performed in fractional mode.<br/>
For example, if var1 is in 1Q15 format and var2 is in 1Q15 format, then the product is in 33Q31 format which is then added to W_acc (in 33Q31 format) to provide a final result in 33Q31 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_msu_16_16(W_acc, var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9f889c6b-3dcd-4c45-98cb-4f3ef1ec09f3" id="_9f889c6b-3dcd-4c45-98cb-4f3ef1ec09f3"></a>Multiplies a signed 16-bit var1 by signed 16-bit var2, shifts the result left by 1 and sign extends to 64-bit;</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_19a5de9e-6f14-4235-99db-620f13c20fa9" id="_19a5de9e-6f14-4235-99db-620f13c20fa9"></a>subtracts this 64 bit value from the 64 bit W_acc without saturation control, and returns a 64 bit result.<br/>
The operation is performed in fractional mode.<br/>
For example, if var1 is in 1Q15 format and var2 is in 1Q15 format, then the product is in 33Q31 format which is then subtracted from W_acc (in 33Q31 format) to provide a final result in 33Q31 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_deposit32_l(L_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_eb322abf-69ed-435a-997d-44bbabb2e708" id="_eb322abf-69ed-435a-997d-44bbabb2e708"></a>Deposits the 32 bit L_var1 into the 32 LS bits of the 64-bit output. The 32 MS bits of the output are sign extended.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_deposit32_h(L_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_8243cb89-9cf6-48d3-ad35-40d39e6e06e2" id="_8243cb89-9cf6-48d3-ad35-40d39e6e06e2"></a>Deposits the 32-bit L_var1 into the 32 MS bits of the 64-bit output. The 32 LS bits of the output are zeroed.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_sat_l(W_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_6cda1341-f893-4179-85dd-089d0f96793f" id="_6cda1341-f893-4179-85dd-089d0f96793f"></a>Saturates the 64-bit variable W_v1 to 32-bit value and returns the lower 32 bits.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_5820e7cb-e9d9-42a9-ac71-d8126aca0ed3" id="_5820e7cb-e9d9-42a9-ac71-d8126aca0ed3"></a>For example, a 64-bit wide accumulator is helpful in accumulating 16*16 multiplies without checking for saturation. However, at the end of the multiply-and-accumulate loop, we need to return only the 32-bit value after checking for saturation.<br/>
If W_v1 is in 33Q31 format, then the result returned will be saturated to 1Q31 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_sat_m(W_v1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f123224c-0b6e-46db-9a63-388df45f16a3" id="_f123224c-0b6e-46db-9a63-388df45f16a3"></a>Arithmetically shifts right the 64-bit variable W_v1 by 16 bits; saturates the 64-bit value to 32-bit value and returns the lower 32 bits.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_c0aec5c6-bcfc-4c21-95f5-334285dd308f" id="_c0aec5c6-bcfc-4c21-95f5-334285dd308f"></a>For example, a 64-bit wide accumulator is helpful in accumulating 32*16 multiplies without checking for saturation. A 32*16 multiply gives a 48-bit product; at the end of the multiply-and-accumulate loop, the result is in the lower 48 bits of the 64-bit accumulator. Now an arithmetic right shift by 16 bits will drop the LSB 16 bits. Now we should check for saturation and return the lower 32 bits.<br/>
If W_var is in 17Q47 format, then the result returned will be saturated to 1Q31 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_shl_sat_l(W_1, var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_4d4c3dc8-1005-49d8-a860-fb12985a087b" id="_4d4c3dc8-1005-49d8-a860-fb12985a087b"></a>Arithmetically shifts left the 64-bit W_v1 by v1 positions with lower 32-bit saturation and returns the 32 LSB of 64-bit result.</p>
<p class="MsoNormal"><a name="_943bbaa9-16a2-42a2-9a8b-fb7355b317fa" id="_943bbaa9-16a2-42a2-9a8b-fb7355b317fa"></a>If v1 is negative, the result is shifted to right by (-var1) positions and sign extended. After shift operation, returns the 32 MSB of 64-bit result.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_extract_l(W_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_185e1375-4cd9-414c-bacd-de6717f62cbb" id="_185e1375-4cd9-414c-bacd-de6717f62cbb"></a>Returns the 32 LSB of a 64-bit variable W_var1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_extract_h(W_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c282eddc-fd40-47f4-9f7d-479f6ea29382" id="_c282eddc-fd40-47f4-9f7d-479f6ea29382"></a>Returns the 32 MSB of a 64-bit variable W_var1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_round48_L(W_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_5623425e-89e8-491f-a958-bb58b6c94cc9" id="_5623425e-89e8-491f-a958-bb58b6c94cc9"></a>Rounds the lower 16 bits of the 64-bit input number W_var1 into the most significant 32 bits with saturation. Shifts the resulting bits right by 16 and returns the 32-bit number:</p>
<p class="MsoNormal"><a name="_304c0631-de71-4799-807a-26e52e1ffd64" id="_304c0631-de71-4799-807a-26e52e1ffd64"></a>if W_var1 is in 17Q47 format, then the result returned will be rounded and saturated to 1Q31 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_round32_s(W_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c933780a-28b4-4102-b35e-e54cafd0107f" id="_c933780a-28b4-4102-b35e-e54cafd0107f"></a>Rounds the lower 32 bits of the 64-bit input number W_var1 into the most significant 16 bits with saturation. Shifts the resulting bits right by 32 and returns the 16-bit number:</p>
<p class="MsoNormal"><a name="_0e75ff92-17f3-4564-8811-1ce63d59b0b2" id="_0e75ff92-17f3-4564-8811-1ce63d59b0b2"></a>if W_var1 is in 17Q47 format, then the result returned will be rounded and saturated to 1Q15 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_norm(W_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b4f413ae-a7eb-4639-b848-bd42f4b07b28" id="_b4f413ae-a7eb-4639-b848-bd42f4b07b28"></a>Produces the number of left shifts needed to normalize the 64-bit variable W_var1. If W_var1 contains 0, return 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_add(W_var1, W_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f1492b04-1c59-4e3f-a315-b563c6dd4ad7" id="_f1492b04-1c59-4e3f-a315-b563c6dd4ad7"></a>Adds the two 64-bit variables W_var1 and W_var2 with 64-bit saturation control. Sets overflow flag. Returns 64-bit result.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_sub(W_var1, W_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b60fe745-f19f-4b0b-8b76-4978e3a64456" id="_b60fe745-f19f-4b0b-8b76-4978e3a64456"></a>Subtracts 64-bit variable W_var2 from W_var1 with 64-bit saturation control. Sets overflow flag. Returns 64-bit result.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_neg(W_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_9e741bbd-6039-48b4-b239-215267392a4e" id="_9e741bbd-6039-48b4-b239-215267392a4e"></a>Negates a 64-bit variables W_var1 with 64-bit saturation control. Sets overflow flag. Returns 64-bit result.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_abs(W_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_baaeb788-ef02-4329-8ddd-6e47e9689d44" id="_baaeb788-ef02-4329-8ddd-6e47e9689d44"></a>Returns a 64-bit absolute value of a 64-bit variable W_var1 with saturation control.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_mult_32_32(L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_fb485838-dac5-4154-98fd-c3714ff14a2c" id="_fb485838-dac5-4154-98fd-c3714ff14a2c"></a>Multiplies the signed 32-bit variable L_var1 with signed 32-bit variable L_var2. Shifts the product left by 1 with saturation control. Returns the 64-bit result.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_40d62b3e-6d05-4c4c-8e17-3e2142a50817" id="_40d62b3e-6d05-4c4c-8e17-3e2142a50817"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 and L_var2 are in 1Q31 format then the result is produced in 1Q63 format.<br/>
Note that <tt>W_mult_32_32(-2147483648, -2147483648) = 9223372036854775807</tt>.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_mult0_32_32(L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_0fe24d46-0bd7-4bf2-9e81-b0fa159d6f04" id="_0fe24d46-0bd7-4bf2-9e81-b0fa159d6f04"></a>Multiplies the signed 32-bit variable L_var1 with signed 32-bit variable L_var2. Returns the 64-bit result.</p>
<p class="MsoNormal"><a name="_eed8f5f4-4e53-4459-a40d-f6a06d1ea36a" id="_eed8f5f4-4e53-4459-a40d-f6a06d1ea36a"></a>For example, if L_var1 and L_var2 are in 1Q31 format, then the result is produced in 2Q62 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_lshl(W_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_97efc288-6bed-44b6-931c-afc98675e41b" id="_97efc288-6bed-44b6-931c-afc98675e41b"></a>Logically shifts the 64-bit input W_var1 left by var2 positions. If var2 is negative, logically shift right W_var1 by (-var2).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_lshr(W_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_0528044a-dbcd-4fa1-8407-2c13f4fd732c" id="_0528044a-dbcd-4fa1-8407-2c13f4fd732c"></a>Logically shifts the 64-bit input W_var1 right by var2 positions. If var2 is negative, logically shifts left W_var1 by (-var2).</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>W_round64_L(W_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_320c19e2-0ce2-4a1a-b9d2-483479aac53b" id="_320c19e2-0ce2-4a1a-b9d2-483479aac53b"></a>Rounds the lower 32 bits of the 64-bit input number W_var1 into the most significant 32 bits with saturation. Shifts the resulting bits right by 32 and returns the 32-bit number.</p>
<p class="MsoNormal"><a name="_339fef59-bc6c-4e78-8457-45efdf7dab45" id="_339fef59-bc6c-4e78-8457-45efdf7dab45"></a>If W_var1 is in 1Q63 format, then the result returned will be rounded and saturated to 1Q31 format.</p>
</td></tr></table></div>
<div><a name="_basic_operators_which_use_32_bit_precision_multiply" id="_basic_operators_which_use_32_bit_precision_multiply"></a><h3>A.14.6.<span style="mso-tab-count:1">&#xA0; </span>Basic operators which use 32-bit precision multiply</h3><p style="text-align:left;" align="left" class="MsoNormal"><a name="_8477cfd2-7a7c-4b59-a6b0-d0ba1820c6fa" id="_8477cfd2-7a7c-4b59-a6b0-d0ba1820c6fa"></a>Name: <tt>enh32.c</tt><br/>
Associated header file: <tt>enh32.h</tt>, <tt>stl.h</tt></p>
<p class="MsoNormal"><a name="_be7583a5-3f89-45c4-a5c3-34c0025624c3" id="_be7583a5-3f89-45c4-a5c3-34c0025624c3"></a>Basic operators in this clause are useful for fast Fourier transform (FFT) and scaling functions where the result of a 32*16 or 32*32 arithmetic operation is rounded, and saturated to a 32-bit value. There is no accumulation of products in these functions. In functions that accumulate products, you should use basic operators in Section n.5.</p>
<p class="MsoNormal"><a name="_91f9382b-2f72-4586-a11c-33441e5979b1" id="_91f9382b-2f72-4586-a11c-33441e5979b1"></a>Variable definitions:</p>

<p style="mso-list:l3 level1 lfo7;" class="MsoListParagraphCxSpFirst">
var2: 16-bit variables
</p>
<p style="mso-list:l3 level1 lfo7;" class="MsoListParagraphCxSpLast">
L_var1, L_var2, L_var3: 32-bit variables
</p>

<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Mpy_32_16_1(L_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ac43e02a-c185-4cc5-b22f-ee5223b36da6" id="_ac43e02a-c185-4cc5-b22f-ee5223b36da6"></a>Multiplies the signed 32-bit variable L_var1 with signed 16-bit variable var2. Shifts the product left by 1 with 48-bit saturation control; returns the 32 MSB of the 48-bit result after truncation of lower 16 bits.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_3b357c08-0b45-438a-80fd-dc459a29db24" id="_3b357c08-0b45-438a-80fd-dc459a29db24"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and var2 is in 1Q15 format, then the product is produced in 17Q47 format which is then saturated, truncated and returned in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>W_var1 = W_mult_32_16 (L_var1, var2);</tt><br/>
<tt>L_var_out = W_sat_m(W_var1);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Mpy_32_16_r(L_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_20053167-d689-4519-8c56-acc9e62b914a" id="_20053167-d689-4519-8c56-acc9e62b914a"></a>Multiplies the signed 32-bit variable L_var1 with signed 16-bit variable var2. Shifts the product left by 1 with 48-bit saturation control; returns the 32 MSB of the 48-bit result after rounding of the lower 16 bits</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_6123d207-8ba2-4017-8685-d1bbcdff706e" id="_6123d207-8ba2-4017-8685-d1bbcdff706e"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and var2 is in 1Q15 format, then the product is produced in 17Q47 format which is then rounded, saturated, and returned in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>W_var1 = W_mult_32_16(L_var1, var2);</tt><br/>
<tt>L_var_out = W_round48_L (W_var1);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Mpy_32_32(L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_43632475-4ce8-4361-8f09-3d4c9063bd36" id="_43632475-4ce8-4361-8f09-3d4c9063bd36"></a>Multiplies the signed 32-bit variable L_var1 with signed 32-bit variable L_var2. Shifts the product left by 1 with 64-bit saturation control; Returns the 32 MSB of the 64-bit result after truncating of the lower 32 bits.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_28a51153-5d85-4583-8bb9-6df178f9791a" id="_28a51153-5d85-4583-8bb9-6df178f9791a"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and var2 is in 1Q31 format, then the product is produced in 1Q63 format which is then truncated, saturated, and returned in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>W_var1 = ((Word64)L_var1 * L_var2);</tt><br/>
<tt>L_var_out = W_extract_h(W_shl(W_var1, 1) );</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Mpy_32_32_r(L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d0208075-6233-4ae4-914e-bc423e4eccd1" id="_d0208075-6233-4ae4-914e-bc423e4eccd1"></a>Multiplies the signed 32-bit variable L_var1 with signed 32-bit variable L_var2. Adds rounding offset to lower 31 bits of the product. Shifts the result left by 1 with 64-bit saturation control; returns the 32 MSB of the 64-bit result with saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_2333c6fb-25b0-4669-beb0-fb9f3d52b5c0" id="_2333c6fb-25b0-4669-beb0-fb9f3d52b5c0"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and L_var2 is in 1Q31 format, then the result is produced in 1Q63 format which is then rounded, saturated, and returned in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>W_var1 = ((Word64)L_var1 * L_var2);</tt><br/>
<tt>W_var1 = W_var1 + 0x40000000LL;</tt><br/>
<tt>W_var1 = W_shl (W_var1, 1);</tt><br/>
<tt>L_var_out = W_extract_h(W_var1);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Madd_32_16(L_var3, L_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c6bb8572-6fba-4ecb-9988-4531103fc93f" id="_c6bb8572-6fba-4ecb-9988-4531103fc93f"></a>Multiplies the signed 32-bit variable L_var1 with signed 16-bit variable var2. Shifts the product left by 1 with 48-bit saturation control; Adds the 32-bit MSB of the 48-bit result with 32-bit L_var3 with 32-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_c602ed1c-5da8-4634-9a29-d2b06557efa0" id="_c602ed1c-5da8-4634-9a29-d2b06557efa0"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and var2 is in 1Q15 format, then the product is produced in 17Q47 format which is then saturated, truncated to 1Q31 format and added to L_var3 in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>L_var_out = Mpy_32_16_1(L_var1, var2);</tt><br/>
<tt>L_var_out = L_add(L_var3, L_var_out);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Madd_32_16_r(L_var3, L_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_087ad4f0-9096-4704-a9af-4f30d3cb5f02" id="_087ad4f0-9096-4704-a9af-4f30d3cb5f02"></a>Multiplies the signed 32-bit variable L_var1 with signed 16-bit variable var2. Shifts the product left by 1 with 48-bit saturation control; gets the 32-bit MSB from 48-bit result after rounding of the lower 16 bits and adds this with 32-bit L_var3 with 32-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_074996b2-7cfa-4edb-a735-8ebeece0c0bf" id="_074996b2-7cfa-4edb-a735-8ebeece0c0bf"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and var2 is in 1Q15 format, then the product is produced in 17Q47 format which is then saturated, rounded to 1Q31 format and added to L_var3 in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>L_var_out = Mpy_32_16_r(L_var1, var2);</tt><br/>
<tt>L_var_out = L_add(L_var3, L_var_out);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Msub_32_16(L_var3, L_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_5cd058ac-bd6d-4e10-90df-8442fc81870b" id="_5cd058ac-bd6d-4e10-90df-8442fc81870b"></a>Multiplies the signed 32-bit variable L_var1 with signed 16-bit variable var2. Shifts the product left by 1 with 48-bit saturation control; Subtracts the 32-bit MSB of the 48-bit result from 32-bit L_var3 with 32-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_66380604-fdbe-4c08-8261-bca177925362" id="_66380604-fdbe-4c08-8261-bca177925362"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and var2 is in 1Q15 format, then the product is produced in 17Q47 format which is then saturated, truncated to 1Q31 format and subtracted from L_var3 in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>L_var_out = Mpy_32_16_1(L_var1, var2);</tt><br/>
<tt>L_var_out = L_sub(L_var3, L_var_out);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Msub_32_16_r(L_var3, L_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_cb107b93-a5a9-4776-afd8-b8c3afa195c6" id="_cb107b93-a5a9-4776-afd8-b8c3afa195c6"></a>Multiplies the signed 32-bit variable L_var1 with signed 16-bit variable var2. Shifts the product left by 1 with 48-bit saturation control; gets the 32-bit MSB from 48-bit result after rounding of the lower 16 bits and subtracts this from 32-bit L_var3 with 32-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_8282e829-e392-4afa-a773-bbb37b7ee260" id="_8282e829-e392-4afa-a773-bbb37b7ee260"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and var2 is in 1Q15 format, then the product is produced in 17Q47 format which is then saturated, rounded to 1Q31 format and subtracted from L_var3 in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>L_var_out = Mpy_32_16_r(L_var1, var2);</tt><br/>
<tt>L_var_out = L_sub(L_var3, L_var_out);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Madd_32_32(L_var3, L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_7e45ca91-6e0f-4319-8f6e-2cea1b083add" id="_7e45ca91-6e0f-4319-8f6e-2cea1b083add"></a>Multiplies the signed 32-bit variable L_var1 with signed 32-bit variable L_var2. Shifts the product left by 1 with 64-bit saturation control; adds the 32 MSB of the 64-bit result to 32-bit signed variable L_var3 with 32-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_ee5088e3-1d9b-412a-b630-5e905daeb97e" id="_ee5088e3-1d9b-412a-b630-5e905daeb97e"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and L_var2 is in 1Q31 format, then the product is saturated and truncated in 1Q31 format which is then added to L_var3 (in 1Q31 format), to provide a result in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>L_var_out = Mpy_32_32(L_var1, L_var2);</tt><br/>
<tt>L_var_out = L_add(L_var3, L_var_out);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Madd_32_32_r(L_var3, L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_68c6398c-7b9e-4a2e-9989-e16669941fac" id="_68c6398c-7b9e-4a2e-9989-e16669941fac"></a>Multiplies the signed 32-bit variable L_var1 with signed 32-bit variable L_var2. Adds rounding offset to lower 31 bits of the product. Shifts the result left by 1 with 64-bit saturation control; gets the 32 MSB of the 64-bit result with saturation and adds this with 32-bit signed variable L_var3 with 32-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_0d324913-4eaf-4c87-89aa-f9260114e611" id="_0d324913-4eaf-4c87-89aa-f9260114e611"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and L_var2 is in 1Q31 format, then the product is saturated and rounded in 1Q31 format which is then added to L_var3 (in 1Q31 format), to provide a result in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>L_var_out = Mpy_32_32_r(L_var1, L_var2);</tt><br/>
<tt>L_var_out = L_add(L_var3, L_var_out);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Msub_32_32(L_var3, L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_405d070e-f31d-48e6-85e9-650ad3ac2ea7" id="_405d070e-f31d-48e6-85e9-650ad3ac2ea7"></a>Multiplies the signed 32-bit variable L_var1 with signed 32-bit variable L_var2. Shifts the product left by 1 with 64-bit saturation control; Subtracts the 32 MSB of the 64-bit result from 32-bit signed variable L_var3 with 32-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_e16e2ec9-fb92-47f8-9eb3-856c19f56d1d" id="_e16e2ec9-fb92-47f8-9eb3-856c19f56d1d"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and L_var2 is in 1Q31 format, then the product is saturated and truncated in 1Q31 format which is then subtracted from L_var3 (in 1Q31 format), to provide a result in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>L_var_out = Mpy_32_32(L_var1, L_var2);</tt><br/>
<tt>L_var_out = L_sub(L_var3, L_var_out);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>Msub_32_32_r(L_var3, L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_8de90f81-db53-4b8b-b695-fbd58dbc3c21" id="_8de90f81-db53-4b8b-b695-fbd58dbc3c21"></a>Multiplies the signed 32-bit variable L_var1 with signed 32-bit variable L_var2. Adds rounding offset to lower 31 bits of the product. Shifts the result left by 1 with 64-bit saturation control; gets the 32 MSB of the 64-bit result with saturation and subtracts this from 32-bit signed variable L_var3 with 32-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_14551f22-a4fe-4a71-a6e2-441cb206d5cc" id="_14551f22-a4fe-4a71-a6e2-441cb206d5cc"></a>The operation is performed in fractional mode.<br/>
For example, if L_var1 is in 1Q31 format and L_var2 is in 1Q31 format, then the product is saturated and rounded in 1Q31 format which is then subtracted from L_var3 (in 1Q31 format), to provide a result in 1Q31 format.<br/>
The following code snippet describes the operations performed:<br/>
<tt>L_var_out = Mpy_32_32_r(L_var1, L_var2);</tt><br/>
<tt>L_var_out = L_sub(L_var3, L_var_out);</tt></p>
</td></tr></table></div>
<div><a name="_basic_operators_that_use_complex_data_types" id="_basic_operators_that_use_complex_data_types"></a><h3>A.14.7.<span style="mso-tab-count:1">&#xA0; </span>Basic operators that use complex data types</h3><p style="text-align:left;" align="left" class="MsoNormal"><a name="_c1093c5e-c6e6-4eb1-a22a-45c2e2655656" id="_c1093c5e-c6e6-4eb1-a22a-45c2e2655656"></a>Name: <tt>complex_basop.c</tt><br/>
Associated header file: <tt>complex_basop.h</tt>, <tt>stl.h</tt></p>
<p class="MsoNormal"><a name="_9edabaed-e49a-4516-94a9-c47e3d44a205" id="_9edabaed-e49a-4516-94a9-c47e3d44a205"></a>Variable definitions:</p>

<p style="mso-list:l3 level1 lfo8;" class="MsoListParagraphCxSpFirst">
var1, var2, var3, re, im: 16-bit variables
</p>
<p style="mso-list:l3 level1 lfo8;" class="MsoListParagraphCxSpMiddle">
C_var, C_var1, C_var2, C_coeff: 16-bit complex variables
</p>
<p style="mso-list:l3 level1 lfo8;" class="MsoListParagraphCxSpMiddle">
L_var2, L_var3, L_re, L_im: 32-bit variables
</p>
<p style="mso-list:l3 level1 lfo8;" class="MsoListParagraphCxSpLast">
CL_var, CL_var1, CL_var2: 32-bit complex variables
</p>

<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_shr(CL_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_db56fdcd-d96b-421c-9191-d5a0f7714920" id="_db56fdcd-d96b-421c-9191-d5a0f7714920"></a>Arithmetically shifts right the real and imaginary parts of the 32 bit complex number CL_var1 by var2 positions.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_736edc0a-9007-46e7-bf87-c8c9bb2b7476" id="_736edc0a-9007-46e7-bf87-c8c9bb2b7476"></a>If var2 is negative, real and imaginary parts of CL_var1 are shifted to the most significant bits by (-var2) positions with 32-bit saturation control.<br/>
If var2 is positive, real and imaginary parts of CL_var1 are shifted to the least significant bits by (var2) positions with sign extension.<br/>
The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = L_shr(CL_var1.re, L_shift_val);</tt><br/>
<tt>CL_result.im = L_shr(CL_var1.im, L_shift_val);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_shl(CL_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_fba19826-b50e-4e9e-9100-edee8a03c98c" id="_fba19826-b50e-4e9e-9100-edee8a03c98c"></a>Arithmetically shifts left the real and imaginary parts of the 32-bit complex number CL_var1 by L_shift_val positions.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_e3eb25a6-3cda-4570-ab24-9357aad66a85" id="_e3eb25a6-3cda-4570-ab24-9357aad66a85"></a>If var2 is negative, real and imaginary parts of CL_var1 are shifted to the least significant bits by (-var2) positions with sign extension.<br/>
If var2 is positive, real and imaginary parts of CL_var1 are shifted to the most significant bits by (var2) positions with 32-bit saturation control.<br/>
The following code snippet describes the operations performed on real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = L_shl(CL_var1.re, L_shift_val);</tt><br/>
<tt>CL_result.im = L_shl(CL_var1.im, L_shift_val);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_add(CL_var1, CL_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_de183cdf-4a67-4e18-8f49-dfffc1001b41" id="_de183cdf-4a67-4e18-8f49-dfffc1001b41"></a>Adds the two 32-bit complex numbers CL_var1 and CL_var2 with 32-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_57276a88-1679-462c-9c6a-548b9820b8f0" id="_57276a88-1679-462c-9c6a-548b9820b8f0"></a>Real part of the 32-bit complex number CL_var1 is added to real part of the 32-bit complex number CL_var2 with 32-bit saturation control. The result forms the real part of the result variable.<br/>
Imaginary part of the 32-bit complex number CL_var1 is added to imaginary part of the 32-bit complex number CL_var2 with 32-bit saturation control. The result forms the imaginary part of the result variable.<br/>
Following code snippet describe the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = L_add(CL_var1.re, CL_var2.re);</tt><br/>
<tt>CL_result.im = L_add(CL_var1.im, CL_var2.im);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_sub(CL_var1, CL_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_53e05093-56c2-4bd2-ae0f-a98ff3cf9d80" id="_53e05093-56c2-4bd2-ae0f-a98ff3cf9d80"></a>Subtracts the two 32-bit complex numbers CL_var1 and CL_var2 with 32-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_ed65b483-557f-406d-ab56-ab6ff0308607" id="_ed65b483-557f-406d-ab56-ab6ff0308607"></a>Real part of the 32-bit complex number CL_var2 is subtracted from real part of the 32-bit complex number CL_var1 with 32-bit saturation control. The result forms the real part of the result variable.<br/>
Imaginary part of the 32-bit complex number CL_var2 is subtracted from imaginary part of the 32-bit complex number CL_var1 with 32-bit saturation control. The result forms the imaginary part of the result variable.<br/>
The following code snippet describes the operations performed on real and imaginary part of a complex number:<br/>
<tt>CL_result.re = L_sub(CL_var1.re, CL_var2.re);</tt><br/>
<tt>CL_result.im = L_sub(CL_var1.im, CL_var2.im);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_scale(CL_var, var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ce39c2cb-941e-42d9-8d0b-49fcb242530f" id="_ce39c2cb-941e-42d9-8d0b-49fcb242530f"></a>Multiplies the real and imaginary parts of a 32-bit complex number CL_var by a 16-bit var1. The resulting 48-bit product for each part is rounded, saturated and 32-bit MSB of 48-bit result are returned.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_f7787d72-c3c0-479f-a120-f55eb569e85e" id="_f7787d72-c3c0-479f-a120-f55eb569e85e"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = Mpy_32_16_r(CL_var.re, var1);</tt><br/>
<tt>CL_result.im = Mpy_32_16_r(CL_var.im, var1);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_dscale(CL_var3, var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b8a52b46-832f-47d9-891a-5a0606e63efc" id="_b8a52b46-832f-47d9-891a-5a0606e63efc"></a>Multiplies the real parts of a 32-bit complex number CL_var3 by a 16-bit var1 and imaginary parts of a 32-bit complex number CL_var3 by a 16-bit var2. The resulting 48-bit product for each part is rounded, saturated and 32-bit MSB of 48-bit result are returned.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_92fb7cdc-ac98-4994-8534-235529aa0e34" id="_92fb7cdc-ac98-4994-8534-235529aa0e34"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = Mpy_32_16_r(CL_var.re, var1);</tt><br/>
<tt>CL_result.im = Mpy_32_16_r(CL_var.im, var2);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_msu_j(CL_var1, CL_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1c4d54de-9fce-4d4b-8ea7-14fad8a7299f" id="_1c4d54de-9fce-4d4b-8ea7-14fad8a7299f"></a>Multiplies the 32-bit complex number CL_var2 with j and subtracts the result from the 32-bit complex number CL_var1 with saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_efe4f65d-4c68-4e88-b606-a8c66f6410b0" id="_efe4f65d-4c68-4e88-b606-a8c66f6410b0"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = L_add(CL_var1.re, CL_var2.im);</tt><br/>
<tt>CL_result.im = L_sub(CL_var1.im, CL_var2.re);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_mac_j(CL_var1, CL_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ae8c4565-072c-4e60-9ec5-5ee4b5e228db" id="_ae8c4565-072c-4e60-9ec5-5ee4b5e228db"></a>Multiplies the 32-bit complex number CL_var2 with j and adds the result to the 32-bit complex number CL_var1 with saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_0646a434-2936-4171-84a8-68656b9756f9" id="_0646a434-2936-4171-84a8-68656b9756f9"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = L_sub(CL_var1.re, CL_var2.im);</tt><br/>
<tt>CL_result.im = L_add(CL_var1.im, CL_var2.re);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_move(CL_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d67d9aeb-25d4-4635-9f6c-bc45f391f63a" id="_d67d9aeb-25d4-4635-9f6c-bc45f391f63a"></a>Copies the 32-bit complex number CL_var1 to destination 32-bit complex number.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_Extract_real(CL_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b8b8cb13-005d-4cdd-9d99-fa4a4123e2e8" id="_b8b8cb13-005d-4cdd-9d99-fa4a4123e2e8"></a>Returns the real part of a 32-bit complex number CL_var1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_scale (CL_var, var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_dfc1ec0b-c844-4183-b506-11eb5cf4ad4d" id="_dfc1ec0b-c844-4183-b506-11eb5cf4ad4d"></a>Multiplies the real and imaginary parts of a 32-bit complex number CL_var by a 16-bit var1. The resulting 48-bit product for each part is rounded, saturated and 32-bit MSB of 48-bit result are returned.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_da9505eb-0817-4b4a-b9e2-508d98bdc7ef" id="_da9505eb-0817-4b4a-b9e2-508d98bdc7ef"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = Mpy_32_16_r(CL_var.re, var1);</tt><br/>
<tt>CL_result.im = Mpy_32_16_r(CL_var.im, var1);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_dscale(CL_var, var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_99ff4425-a006-4ec9-9abd-bac371ea2e80" id="_99ff4425-a006-4ec9-9abd-bac371ea2e80"></a>Multiplies the real parts of a 32-bit complex number CL_var by a 16-bit var1 and imaginary parts of a 32-bit complex number CL_var by a 16-bit var2. The resulting 48-bit product for each part is rounded, saturated and 32-bit MSB of 48-bit result are returned.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_676f5344-7b7e-416e-bf6c-8b08a56e1fff" id="_676f5344-7b7e-416e-bf6c-8b08a56e1fff"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = Mpy_32_16_r(CL_var.re, var1);</tt><br/>
<tt>CL_result.im = Mpy_32_16_r(CL_var.im, var2);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_msu_j(CL_var1, CL_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ed564f4a-aecd-4413-91a7-afddd28bf88c" id="_ed564f4a-aecd-4413-91a7-afddd28bf88c"></a>Multiplies the 32-bit complex number CL_var2 with j and subtracts the result from the 32-bit complex number CL_var1 with saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_66d4b689-e1f1-43bd-9487-26088333ca52" id="_66d4b689-e1f1-43bd-9487-26088333ca52"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = L_add(CL_var1.re, CL_var2.im);</tt><br/>
<tt>CL_result.im = L_sub(CL_var1.im, CL_var2.re);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_mac_j(CL_var1, CL_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_0f874e69-d4c1-4541-ae33-7c9bfed89dcd" id="_0f874e69-d4c1-4541-ae33-7c9bfed89dcd"></a>Multiplies the 32-bit complex number CL_var2 with j and adds the result to the 32-bit complex number CL_var1 with saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_9e004f6c-909f-4481-90bc-b6b73a35d2e3" id="_9e004f6c-909f-4481-90bc-b6b73a35d2e3"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = L_sub(CL_var1.re, CL_var2.im);</tt><br/>
<tt>CL_result.im = L_add(CL_var1.im, CL_var2.re);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_move(CL_var)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b88e9931-9a95-479c-9b98-145d52fc0dbd" id="_b88e9931-9a95-479c-9b98-145d52fc0dbd"></a>Copies the 32-bit complex number CL_var to destination 32-bit complex number.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_Extract_real(CL_var)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_c39c06e6-446e-4fb2-b029-2b816bc8c9a1" id="_c39c06e6-446e-4fb2-b029-2b816bc8c9a1"></a>Returns the real part of a 32-bit complex number CL_var</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_Extract_imag(CL_var)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_637fb804-cc98-451f-aa8f-32057ca0461d" id="_637fb804-cc98-451f-aa8f-32057ca0461d"></a>Returns the imaginary part of a 32-bit complex number CL_var</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_form(L_re, L_im)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_8eb0a244-f905-4995-8401-2edb33c86f39" id="_8eb0a244-f905-4995-8401-2edb33c86f39"></a>Combines the two 32-bit variables L_re and L_im and returns a 32-bit complex number.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_93b1368c-46be-47fc-8464-bee7311f973e" id="_93b1368c-46be-47fc-8464-bee7311f973e"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = L_re;</tt><br/>
<tt>CL_result.im = L_im;</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_multr_32x16(CL_var, C_coeff)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f9c07d55-aef8-4a47-a56b-81a3afe40550" id="_f9c07d55-aef8-4a47-a56b-81a3afe40550"></a>Multiplication of 32-bit complex number CL_var with a 16-bit complex number C_coeff.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_410582cd-4bc7-42d3-91a7-b7cfaef47e58" id="_410582cd-4bc7-42d3-91a7-b7cfaef47e58"></a>The formula for multiplying two complex numbers, (x+iy) and (u+iv) is:<br/>
<tt>(x+iy)*(u+iv) = (xu - yv) + i(xv + yu);</tt><br/>
The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>W_tmp1 = W_mult_32_16(CL_var.re, C_coeff.re);</tt><br/>
<tt>W_tmp2 = W_mult_32_16(CL_var.im, C_coeff.im);</tt><br/>
<tt>W_tmp3 = W_mult_32_16(CL_var.re, C_coeff.im);</tt><br/>
<tt>W_tmp4 = W_mult_32_16(CL_var.im, C_coeff.re);</tt><br/>
<tt>CL_res.re = W_round48_L(W_sub_nosat (W_tmp1, W_tmp2));</tt><br/>
<tt>CL_res.im = W_round48_L(W_add_nosat (W_tmp3, W_tmp4));</tt><br/>
For example, if the real and imaginary parts of a complex variable CL_var are in 1Q31 format, and C_coeff is in 1Q15 format, then the intermediate products would be in the 17Q47 format. The round operation will convert the result of addition/subtraction from 17Q47 format to 1Q31 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_negate(CL_var)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_67125a01-c3c1-406a-8a26-4a0f729560ae" id="_67125a01-c3c1-406a-8a26-4a0f729560ae"></a>Negates the 32-bit complex number, saturates and returns.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_165f4d74-1eae-4513-89d3-fbbfa9b0268a" id="_165f4d74-1eae-4513-89d3-fbbfa9b0268a"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = L_negate(CL_var.re);</tt><br/>
<tt>CL_result.im = L_negate(CL_var.im);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_conjugate(CL_var)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_6debbf44-e5b7-40e5-b81f-ec511d644f7d" id="_6debbf44-e5b7-40e5-b81f-ec511d644f7d"></a>Negates only the imaginary part of complex number CL_var with saturation. No change in the real part.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_a5244eaf-2dd9-4e6f-814f-2eee1996fad0" id="_a5244eaf-2dd9-4e6f-814f-2eee1996fad0"></a>The following code snippet describes the operations:<br/>
<tt>CL_result.re = CL_var.re;</tt><br/>
<tt>CL_result.im = L_negate(CL_var.im);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_mul_j(CL_var)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b7e6d922-edc5-4446-ae70-946ac8830e7d" id="_b7e6d922-edc5-4446-ae70-946ac8830e7d"></a>Multiplication of a 32-bit complex number CL_var with j and return a 32-bit complex number.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_swap_real_imag(CL_var)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_181d0312-7f4a-4b71-a0ea-bd2e2e90f146" id="_181d0312-7f4a-4b71-a0ea-bd2e2e90f146"></a>Swaps real and imaginary parts of a 32-bit complex number CL_var and returns a 32-bit complex number.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_add(C_var1, C_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2aa4f0df-782f-4857-a9c7-c7affa46b1b7" id="_2aa4f0df-782f-4857-a9c7-c7affa46b1b7"></a>Adds the two 16-bit complex numbers C_var1 and C_var2 with 16-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_5b000de6-8dbc-47fa-b8e3-df5f5d1dc53a" id="_5b000de6-8dbc-47fa-b8e3-df5f5d1dc53a"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number.<br/>
<tt>C_result.re = add(C_var1.re, C_var2.re);</tt><br/>
<tt>C_result.im = add(C_var1.im, C_var2.im);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_sub(C_var1, C_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_f5c20b85-0126-414f-8a69-8284e0376d76" id="_f5c20b85-0126-414f-8a69-8284e0376d76"></a>Subtracts the two 16-bit complex numbers C_var1 and C_var2 with 16-bit saturation control.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_e1d1d81f-2287-4139-8b6c-5940f56de0df" id="_e1d1d81f-2287-4139-8b6c-5940f56de0df"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>C_result.re = sub(C_var1.re, C_var2.re);</tt><br/>
<tt>C_result.im = sub(C_var1.im, C_var2.im);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_mul_j(C_var)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e7ece5b0-d41d-4c4f-9e47-ca20e5c312b2" id="_e7ece5b0-d41d-4c4f-9e47-ca20e5c312b2"></a>Multiplies a 16-bit complex number with j and returns a 16-bit complex number</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_multr(C_var1, C_var2)</tt>
</p></td><td valign="top"><p class="MsoNormal"><a name="_fc80d6cb-0be7-4e8f-a98d-8be6dcd28d69" id="_fc80d6cb-0be7-4e8f-a98d-8be6dcd28d69"></a>Multiplies the 16-bit complex number C_var1 with the 16-bit complex number C_var2 which results in a 16-bit complex number.</p><p style="text-align:left;" align="left" class="MsoNormal"><a name="_c9eb0df9-9ac1-4f8b-aa51-ec69fffca862" id="_c9eb0df9-9ac1-4f8b-aa51-ec69fffca862"></a>The formula for multiplying two complex numbers, (x+iy) and (u+iv) is:<br/>
<tt>(x+iy)*(u+iv) = (xu - yv) + i(xv + yu);</tt><br/>
The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>W_tmp1 = W_mult_16_16(C_var1.re, C_var2.re);</tt><br/>
<tt>W_tmp2 = W_mult_16_16(C_var1.im, C_var2.im);</tt><br/>
<tt>W_tmp3 = W_mult_16_16(C_var1.re, C_var2.im);</tt><br/>
<tt>W_tmp4 = W_mult_16_16(C_var1.im, C_var2.re);</tt></p>
<p class="MsoNormal"><a name="_ad9d3af8-69ea-4a57-94f7-9fc9a648582b" id="_ad9d3af8-69ea-4a57-94f7-9fc9a648582b"></a><tt>C_result.re = round_fx(W_sat_l (W_sub_nosat (W_tmp1, W_tmp2)));</tt><br/>
<tt>C_result.im = round_fx(W_sat_l (W_add_nosat (W_tmp3, W_tmp4)));</tt></p></td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_form(re, im)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2f28af4d-b0a0-4f3b-8be3-84d913ffe91c" id="_2f28af4d-b0a0-4f3b-8be3-84d913ffe91c"></a>Combines the two 16-bit variable re and im and returns a 16-bit complex number</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_scale_32(CL_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_772a1ff6-c5a2-4e40-99bd-771e6a2065e6" id="_772a1ff6-c5a2-4e40-99bd-771e6a2065e6"></a>Multiplies the real and imaginary parts of a 32-bit complex number CL_var1 by a 32-bit L_var2.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_2447fefb-479f-458b-af36-1cc92813e5bd" id="_2447fefb-479f-458b-af36-1cc92813e5bd"></a>The resulting 64-bit product for each part is rounded, saturated and 32-bit MSB of 64-bit result are returned.<br/>
The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = Mpy_32_32_r(CL_var1.re, L_var2);</tt><br/>
<tt>CL_result.im = Mpy_32_32_r(CL_var1.im, L_var2);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_dscale_32(CL_var1, L_var2, L_var3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ffa8bb57-2fae-4ff0-811e-ae9aa2fe0406" id="_ffa8bb57-2fae-4ff0-811e-ae9aa2fe0406"></a>Multiplies the real parts of a 32-bit complex number CL_var1 by a 32-bit L_var2 and imaginary parts of a 32-bit complex number CL_var1 by a 32-bit L_var3. The resulting 64-bit product for each part is rounded, saturated and 32-bit MSB of 64-bit result are returned.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_f6ee62b8-dba0-4112-9fd7-bb00c39de7c4" id="_f6ee62b8-dba0-4112-9fd7-bb00c39de7c4"></a>The following code snippet describes the operations performed on the real and imaginary parts of a complex number:<br/>
<tt>CL_result.re = Mpy_32_32_r(CL_var1.re, L_var2);</tt><br/>
<tt>CL_result.im = Mpy_32_32_r(CL_var1.im, L_var3);</tt></p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_multr_32x32(CL_var1, CL_var2)</tt>
</p></td><td valign="top"><p class="MsoNormal"><a name="_2e2e8525-f996-4cca-bb6e-2c805939a793" id="_2e2e8525-f996-4cca-bb6e-2c805939a793"></a>Complex multiplication of CL_var1 and CL_var2. Multiplication is in fractional mode. Both input and outputs are in 1Q31 format.</p><p style="text-align:left;" align="left" class="MsoNormal"><a name="_7b418fd8-88c3-4bc2-a380-d552b5601dd0" id="_7b418fd8-88c3-4bc2-a380-d552b5601dd0"></a>The following code snippet describes the performed operations:<br/>
<tt>W_tmp1 = W_mult_32_32(CL_var1.re, CL_var2.re);</tt><br/>
<tt>W_tmp2 = W_mult_32_32(CL_var1.im, CL_var2.im);</tt><br/>
<tt>W_tmp3 = W_mult_32_32(CL_var1.re, CL_var2.im);</tt><br/>
<tt>W_tmp4 = W_mult_32_32(CL_var1.im, CL_var2.re);</tt></p>
<p class="MsoNormal"><a name="_b26e852c-e953-4705-ab39-cc1e6a2c08a7" id="_b26e852c-e953-4705-ab39-cc1e6a2c08a7"></a><tt>CL_res.re = W_round64_L(W_sub (W_tmp1, W_tmp2));</tt><br/>
<tt>CL_res.im = W_round64_L(W_add (W_tmp3, W_tmp4));</tt></p></td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_mac_r(CL_var1, C_var2, var3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_829a47e4-90a9-4b8c-8a0b-aba6b3bfb510" id="_829a47e4-90a9-4b8c-8a0b-aba6b3bfb510"></a>Multiplies real and imaginary parts of C_var2 by var3 and shifts the result left by 1. Adds the 32-bit result to CL_var1 with saturation. Rounds the 16 least significant bits of the result into the 16 most significant bits with saturation and shifts the result right by 16. Returns a 16-bit complex result.</p>
<p class="MsoNormal"><a name="_b5f8bb92-62b4-40b2-bfeb-595d17933d01" id="_b5f8bb92-62b4-40b2-bfeb-595d17933d01"></a>
<tt>C_result = CL_round32_16(CL_add(Cl_var1, C_scale(C_var2, var3)));</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_msu_r(CL_var1, C_var2, var3)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_7c03a49d-19a0-4547-969b-b71299e2d5fe" id="_7c03a49d-19a0-4547-969b-b71299e2d5fe"></a>Multiplies real and imaginary parts of C_var2 by var3 and shifts the result left by 1. Subtracts the 32-bit result from CL_var1 with saturation. Rounds the 16 least significant bits of the result into the 16 most significant bits with saturation and shifts the result right by 16. Returns a 16-bit complex result.</p>
<p class="MsoNormal"><a name="_b4c187e0-0cf1-4e68-ad18-7310edb2a8c1" id="_b4c187e0-0cf1-4e68-ad18-7310edb2a8c1"></a>
<tt>C_result = CL_round32_16(CL_sub(Cl_var1, C_scale(C_var2, var3)));</tt>
</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>CL_round32_16(CL_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_531fc9df-5d29-4096-88b3-12d37966104f" id="_531fc9df-5d29-4096-88b3-12d37966104f"></a>Rounds the lower 16 bits of the 32-bit complex number CL_var1 into the most significant 16 bits with saturation. Shifts the resulting bits right by 16 and returns the 16-bit complex number.</p>
<p class="MsoNormal"><a name="_ba10721f-66dd-4e20-98f6-fd33499c1bdf" id="_ba10721f-66dd-4e20-98f6-fd33499c1bdf"></a>If real and imaginary of CL_var1 is in 1Q31 format, then the result returned will be rounded and saturated to 1Q15 format.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_Extract_real(C_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ce5947e4-6604-4473-bbdf-27ddc6904d7a" id="_ce5947e4-6604-4473-bbdf-27ddc6904d7a"></a>Returns the real part of a 16-bit complex number C_var1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_Extract_imag(C_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_e954747d-2f27-4604-92c7-42f4bbeecdc9" id="_e954747d-2f27-4604-92c7-42f4bbeecdc9"></a>Returns the imaginary part of a 16-bit complex number C_var1.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_scale(C_var1,var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_11812968-7619-4825-a733-30bb1b5e2545" id="_11812968-7619-4825-a733-30bb1b5e2545"></a>Multiplies the real and imaginary parts of a 16-bit complex number C_var1 by a 16-bit var2. Returns 32-bit complex number.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_negate(C_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_879faee1-d046-42c0-80c5-29f7199c1c5a" id="_879faee1-d046-42c0-80c5-29f7199c1c5a"></a>Negates the 16-bit complex number, saturates and returns a 16-bit complex number.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_conjugate(C_var1)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_00399098-747f-4af5-8d68-479c23dfe429" id="_00399098-747f-4af5-8d68-479c23dfe429"></a>Negates only the imaginary part of a 16-bit complex number C_var1 with saturation. No change in the real part.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_shr(C_var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_a029ec7d-203d-4187-9270-10aa857a1b70" id="_a029ec7d-203d-4187-9270-10aa857a1b70"></a>Arithmetically shifts right the real and imaginary parts of the 16-bit complex number C_var1 by var2 positions.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_ed5bb3fe-ae99-42c1-a9dc-553c362360eb" id="_ed5bb3fe-ae99-42c1-a9dc-553c362360eb"></a>If var2 is negative, the real and imaginary parts of C_var1 are shifted to the most significant bits by (-var2) positions with 16-bit saturation control.<br/>
If var2 is positive, the real and imaginary parts of C_var1 are shifted to the least significant bits by (var2) positions with sign extension.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>C_shl(C_var1,var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_a3b7f20c-f11c-48c4-9220-e05c712f2122" id="_a3b7f20c-f11c-48c4-9220-e05c712f2122"></a>Arithmetically shifts left the real and imaginary parts of the 16-bit complex number C_var1 by var2 positions.</p>
<p style="text-align:left;" align="left" class="MsoNormal"><a name="_df0a5e14-667c-403c-a791-38d2fbf93789" id="_df0a5e14-667c-403c-a791-38d2fbf93789"></a>If var2 is negative, the real and imaginary parts of C_var1 are shifted to the least significant bits by (-var2) positions with sign extension.<br/>
If var2 is positive, the real and imaginary parts of C_var1 are shifted to the most significant bits by (var2) positions with 16-bit saturation control.</p>
</td></tr></table></div>
<div><a name="_basic_operators_for_control_operation" id="_basic_operators_for_control_operation"></a><h3>A.14.8.<span style="mso-tab-count:1">&#xA0; </span>Basic operators for control operation</h3><p style="text-align:left;" align="left" class="MsoNormal"><a name="_8b67e9de-ad89-4a3f-beef-3c705f19415f" id="_8b67e9de-ad89-4a3f-beef-3c705f19415f"></a>Name: <tt>control.c</tt><br/>
Associated header file: <tt>control.h</tt>, <tt>stl.h</tt><br/></p>
<p class="MsoNormal"><a name="_73cfa99a-0f8b-4d49-8a81-bd75092e059a" id="_73cfa99a-0f8b-4d49-8a81-bd75092e059a"></a>The following basic operators should be used in the control processing part of the reference code. They are expected to help compilers generate more efficient code for control sections of the reference C code. In addition, they also help in computing a more accurate representation of control code operations in the total WMOPs (weighted millions of operations) of the reference code.</p>
<p class="MsoNormal"><a name="_d812407e-1fbe-4356-ad6c-2d2d61221647" id="_d812407e-1fbe-4356-ad6c-2d2d61221647"></a>Variable definitions:</p>

<p style="mso-list:l3 level1 lfo9;" class="MsoListParagraphCxSpFirst">
var1, var2: 16-bit variables
</p>
<p style="mso-list:l3 level1 lfo9;" class="MsoListParagraphCxSpMiddle">
L_var1, L_var2: 32-bit variables
</p>
<p style="mso-list:l3 level1 lfo9;" class="MsoListParagraphCxSpLast">
W_var1, W_var2: 64-bit variables
</p>

<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LT_16(var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_956d1d3d-c6a8-48e1-ac43-83e49c02070e" id="_956d1d3d-c6a8-48e1-ac43-83e49c02070e"></a>Returns 1 if 16-bit variable var1 is less than 16-bit variable var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>GT_16(var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_171c9da2-5553-4848-bbfb-590adb0fa9dd" id="_171c9da2-5553-4848-bbfb-590adb0fa9dd"></a>Returns 1 if 16-bit variable var1 is greater than 16-bit variable var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LE_16(var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_a01d10c5-7bb6-4964-b1ef-fa70500f9312" id="_a01d10c5-7bb6-4964-b1ef-fa70500f9312"></a>Returns 1 if 16-bit variable var1 is less than or equal to 16-bit variable var2, else return 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>GE_16(var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_bef7e421-1e73-49cf-8424-af58b8b3597f" id="_bef7e421-1e73-49cf-8424-af58b8b3597f"></a>Returns 1 if 16-bit variable var1 is greater than or equal to 16-bit variable var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>EQ_16(var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_b30449a5-e316-468a-a53e-7df0535bdd7d" id="_b30449a5-e316-468a-a53e-7df0535bdd7d"></a>Returns 1 if 16-bit variable var1 is equal to 16-bit variable var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>NE_16(var1, var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ffb807b5-8250-4298-b4d4-c98bec708d21" id="_ffb807b5-8250-4298-b4d4-c98bec708d21"></a>Returns 1 if 16-bit variable var1 is not equal to 16-bit variable var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LT_32(L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_4caf0dbc-1420-40b2-9292-c268bf7f0c2c" id="_4caf0dbc-1420-40b2-9292-c268bf7f0c2c"></a>Returns 1 if 32-bit variable L_var1 is less than 32-bit variable L_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>GT_32(L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d354254d-99ba-44d8-9812-61d046087035" id="_d354254d-99ba-44d8-9812-61d046087035"></a>Returns 1 if 32-bit variable L_var1 is greater than 32-bit variable L_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LE_32(L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_69aad9f4-2bce-4a4a-8182-0251eea9f537" id="_69aad9f4-2bce-4a4a-8182-0251eea9f537"></a>Returns 1 if 32-bit variable L_var1 is less than or equal to 32-bit variable L_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>GE_32(L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1035e226-2945-46b7-84f4-8ace519a2582" id="_1035e226-2945-46b7-84f4-8ace519a2582"></a>Returns 1 if 32-bit variable L_var1 is greater than or equal to 32-bit variable L_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>EQ_32(L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_42feaadf-71d9-491f-984f-f59ada20f5d1" id="_42feaadf-71d9-491f-984f-f59ada20f5d1"></a>Returns 1 if 32-bit variable L_var1 is equal to 32-bit variable L_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>NE_32(L_var1, L_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_3ff1ed5b-9e8f-4974-be71-abcaba3fc1f9" id="_3ff1ed5b-9e8f-4974-be71-abcaba3fc1f9"></a>Returns 1 if 32-bit variable L_var1 is not equal to 32-bit variable L_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LT_64(W_var1, W_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_28420546-f027-476b-85a7-96bf0b59a3d0" id="_28420546-f027-476b-85a7-96bf0b59a3d0"></a>Returns 1 if 64-bit variable W_var1 is less than 64-bit variable W_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>GT_64(W_var1, W_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d0992de7-32b3-4835-aba4-b698c7fe37a1" id="_d0992de7-32b3-4835-aba4-b698c7fe37a1"></a>Returns 1 if 64-bit variable W_var1 is greater than 64-bit variable W_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>LE_64(W_var1, W_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1eea8091-814e-487a-a54f-c72d64974e5a" id="_1eea8091-814e-487a-a54f-c72d64974e5a"></a>Returns 1 if 64-bit variable W_var1 is less than or equal to 64-bit variable W_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>GE_64(W_var1, W_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_267e5d24-101a-45f3-8d63-813b68cb5e3f" id="_267e5d24-101a-45f3-8d63-813b68cb5e3f"></a>Returns 1 if 64-bit variable W_var1 is greater than or equal to 64-bit variable W_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>NE_64(W_var1, W_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_01f42291-3579-477e-8912-8eb8c9d6e962" id="_01f42291-3579-477e-8912-8eb8c9d6e962"></a>Returns 1 if 64-bit variable W_var1 is not equal to 64-bit variable W_var2, else returns 0.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>EQ_64(W_var1, W_var2)</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_978ea77b-68fb-42f8-a776-a0a4eee1e923" id="_978ea77b-68fb-42f8-a776-a0a4eee1e923"></a>Returns 1 if 64-bit variable W_var1 is equal to 64-bit variable W_var2, else returns 0.</p>
</td></tr></table>
<p class="MsoNormal"><a name="_5d52d08d-550a-4e77-891c-74db130373ff" id="_5d52d08d-550a-4e77-891c-74db130373ff"></a>The basic operators module is supplemented by two tools: one to evaluate program ROM complexity for fixed-point code, and another to evaluate complexity (including program ROM) of floating-point implementations.</p></div>
<div><a name="_program_rom_estimation_tool_for_fixed_point_c_code" id="_program_rom_estimation_tool_for_fixed_point_c_code"></a><h3>A.14.9.<span style="mso-tab-count:1">&#xA0; </span>Program ROM estimation tool for fixed-point C code</h3><p style="text-align:left;" align="left" class="MsoNormal"><a name="_6df8b159-fd2a-405e-a231-76e5fe7df927" id="_6df8b159-fd2a-405e-a231-76e5fe7df927"></a>Name: <tt>basop_cnt.c</tt><br/>
Associated header file: None.<br/>
Usage: <tt>basop cnt input.c [result_file_name.txt]</tt></p>
<p class="MsoNormal"><a name="_19c16d3f-31a4-4281-93ee-1291238b5516" id="_19c16d3f-31a4-4281-93ee-1291238b5516"></a>The basop_cnt tool estimates the program ROM of applications written using the ITU-T basic operator libraries. It counts the number of calls to basic operators in the input C source file, and also the number of calls to user defined functions. The sum of these two numbers gives an estimation of the required PROM.</p></div>
<div><a name="_complexity_evaluation_tool_for_floating_point_c_code" id="_complexity_evaluation_tool_for_floating_point_c_code"></a><h3>A.14.10.<span style="mso-tab-count:1">&#xA0; </span>Complexity evaluation tool for floating-point C code</h3><p style="text-align:left;" align="left" class="MsoNormal"><a name="_2c50cbb7-85ac-4341-8fe6-72cad68c4164" id="_2c50cbb7-85ac-4341-8fe6-72cad68c4164"></a>Name: <tt>flc.c</tt><br/>
Associated header file: <tt>flc.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>FLC_init</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_ac4d73a3-8abf-4010-9f80-683e15879a6e" id="_ac4d73a3-8abf-4010-9f80-683e15879a6e"></a>Initialize the floating-point counters.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>FLC_sub_start</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_d0f96d54-c27c-4ffd-8cfe-ba8070bfb278" id="_d0f96d54-c27c-4ffd-8cfe-ba8070bfb278"></a>Marks the start of a subroutine/subsection.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>FLC_sub_end</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_59815418-f6ed-4ceb-a80b-2665789ae891" id="_59815418-f6ed-4ceb-a80b-2665789ae891"></a>Marks the end of a subroutine/subsection.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>FLC_end</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_cdd990c7-6db9-4c7d-a314-6a11cb5c45b1" id="_cdd990c7-6db9-4c7d-a314-6a11cb5c45b1"></a>Computes and prints complexity, i.e., floating-point counter results.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>FLC_frame_update</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_731d6702-c883-4bf4-a6f3-c0a5bd6e0a64" id="_731d6702-c883-4bf4-a6f3-c0a5bd6e0a64"></a>Marks the end of a frame processing to keep track of the per-frame maxima.</p>
</td></tr></table></div></div>
        <div><a name="_reverberation_module" id="_reverberation_module"></a><h2>A.15.<span style="mso-tab-count:1">&#xA0; </span>Reverberation module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_558c67fe-d805-467f-88fb-1d3840bc1231" id="_558c67fe-d805-467f-88fb-1d3840bc1231"></a>Name: <tt>reverb-lib.c</tt><br/>
Associated header file: <tt>reverb-lib.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>conv</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_1e717dbf-4366-42b0-a029-92dc970ddb49" id="_1e717dbf-4366-42b0-a029-92dc970ddb49"></a>Convolution routine.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>shift</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_2cfb5f90-22d4-4ddd-bde1-309ac90826ef" id="_2cfb5f90-22d4-4ddd-bde1-309ac90826ef"></a>Shift elements of a vector for the block-based convolution.</p>
</td></tr></table></div>
        <div><a name="_bit_stream_truncation_module" id="_bit_stream_truncation_module"></a><h2>A.16.<span style="mso-tab-count:1">&#xA0; </span>Bit stream truncation module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_d8e4680b-467a-4023-93d2-c99e0ea082ce" id="_d8e4680b-467a-4023-93d2-c99e0ea082ce"></a>Name: <tt>trunc-lib.c</tt><br/>
Associated header file: <tt>trunc-lib.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>trunc</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_208632a8-46b2-4bc9-a5cc-dff2762d2039" id="_208632a8-46b2-4bc9-a5cc-dff2762d2039"></a>Frame truncation routine.</p>
</td></tr></table></div>
        <div><a name="_frequency_response_calculation_module" id="_frequency_response_calculation_module"></a><h2>A.17.<span style="mso-tab-count:1">&#xA0; </span>Frequency response calculation module</h2><p style="text-align:left;" align="left" class="MsoNormal"><a name="_dab6c0e9-f50b-4904-85e0-bfc9245051a6" id="_dab6c0e9-f50b-4904-85e0-bfc9245051a6"></a>Name: <tt>fft.c</tt><br/>
Associated header file: <tt>fft.h</tt><br/>
The functions included are as follows.</p>
<table class="dl"><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>rdft</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_250e4abb-5f2e-496d-9421-5807fdb1c1eb" id="_250e4abb-5f2e-496d-9421-5807fdb1c1eb"></a>Discrete Fourier transform for real signals.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>genHanning</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_159842ba-8165-473c-994c-08a4602ded8a" id="_159842ba-8165-473c-994c-08a4602ded8a"></a>Hanning window generation routine.</p>
</td></tr><tr><td valign="top" align="left"><p align="left" style="margin-left:0pt;text-align:left;" class="MsoNormal">
<tt>powSpect</tt>
</p></td><td valign="top">
<p class="MsoNormal"><a name="_5e2dae7d-4bb3-4ebe-8a6e-33ba9b85ebcc" id="_5e2dae7d-4bb3-4ebe-8a6e-33ba9b85ebcc"></a>Power spectrum computation routine.</p>
</td></tr></table></div>
      </div>
      <p class="MsoNormal">
        <br clear="all" style="mso-special-character:line-break;page-break-before:always"/>
      </p>
      <div class="Section3"><a name="annexB" id="annexB"></a>
        <h1 class="Annex">
          <b>Annex B</b>
          <br/>
          <br/>
          <b>ITU-T software tools General Public Licence</b>
        </h1>
        <p class="annex_obligation">(This annex forms an integral part of this Recommendation.)</p>
        <p class="Normalaftertitle"><a name="_19e6e725-2b63-43df-991d-8a3216c275a6" id="_19e6e725-2b63-43df-991d-8a3216c275a6"></a>
<b>Terms and conditions</b>
</p>
        <div><a name="_7e84f331-328a-4e82-836b-f5ff659cdf35" id="_7e84f331-328a-4e82-836b-f5ff659cdf35"></a><h2>B.1.</h2>

<p class="MsoNormal"><a name="_c6c5ae5d-8310-4d5b-895e-5a75b85ff079" id="_c6c5ae5d-8310-4d5b-895e-5a75b85ff079"></a>This Licence Agreement applies to any module or other work related to the ITU-T Software Tool Library, and developed by the User's Group on Software Tools. The term "Module" refers to any such module or work, and a "work based on the Module" means either the Module or any work containing the Module or a portion of it, either verbatim or with modifications. Each licensee is addressed as "you".</p>
</div>
        <div><a name="_2" id="_2"></a><h2>B.2.</h2><p class="MsoNormal"><a name="_d4c6b33d-193b-4b25-a94e-38f406bf691f" id="_d4c6b33d-193b-4b25-a94e-38f406bf691f"></a>You may copy and distribute verbatim copies of the Module's source code as you receive it, in any medium, provided that you:</p>

<p style="mso-list:l3 level1 lfo10;" class="MsoListParagraphCxSpFirst">
conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty;
</p>
<p style="mso-list:l3 level1 lfo10;" class="MsoListParagraphCxSpMiddle">
keep intact all the notices that refer to this General Public Licence and to the absence of any warranty; and
</p>
<p style="mso-list:l3 level1 lfo10;" class="MsoListParagraphCxSpLast">
give any other recipients of the Module a copy of this General Public Licence along with the Module.
</p>

<p class="MsoNormal"><a name="_33edd1f0-8967-45e4-ab07-ce6a39a68e3b" id="_33edd1f0-8967-45e4-ab07-ce6a39a68e3b"></a>You may charge a fee for the physical act of transferring a copy.</p></div>
        <div><a name="_3" id="_3"></a><h2>B.3.</h2><p class="MsoNormal"><a name="_94fd5606-a8d3-43b8-b19a-228282d1cbb8" id="_94fd5606-a8d3-43b8-b19a-228282d1cbb8"></a>You may modify your copy or copies of the Module or any portion of it, and copy and distribute such modifications under the terms of clause B.1, provided that you also do the following:</p>

<p style="mso-list:l3 level1 lfo11;" class="MsoListParagraphCxSpFirst">
cause the modified files to carry prominent notices stating that you changed the files and the date of any change; and
</p>
<p style="mso-list:l3 level1 lfo11;" class="MsoListParagraphCxSpMiddle">
cause the whole of any work that you distribute or publish, that in whole or in part contains the Module or any part thereof, either with or without modifications, to be licensed at no charge to all third parties under the terms of this General Public Licence (except that you may choose to grant warranty protection to some or all third parties, at your option);
</p>
<p style="mso-list:l3 level1 lfo11;" class="MsoListParagraphCxSpLast">
if the modified module normally reads commands interactively when run, you must cause it, on start-up for such interactive use, in the simplest and most usual way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the module under these conditions, and telling the user how to view a copy of this General Public Licence.
</p>

<p class="MsoNormal"><a name="_09a303f8-4009-412e-8370-2d54fcc3976f" id="_09a303f8-4009-412e-8370-2d54fcc3976f"></a>You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.</p>
<p class="MsoNormal"><a name="_8b9903a5-a392-4c2e-852d-aa18bbcbd431" id="_8b9903a5-a392-4c2e-852d-aa18bbcbd431"></a>Mere aggregation of another independent work with the Module (or its derivative) on a volume of a storage or distribution medium does not bring the other work under the scope of these terms.</p></div>
        <div><a name="_4" id="_4"></a><h2>B.4.</h2><p class="MsoNormal"><a name="_8ff93b7a-6892-466e-a4c4-9c6eeccf42c8" id="_8ff93b7a-6892-466e-a4c4-9c6eeccf42c8"></a>You may copy and distribute the Module (or a portion or derivative of it, under clause B.2) in object code or executable form under the terms of clauses B.1 and B.2, provided that you also do one of the following:</p>

<p style="mso-list:l3 level1 lfo12;" class="MsoListParagraphCxSpFirst">
accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of clauses B.1 and B.2; or
</p>
<p style="mso-list:l3 level1 lfo12;" class="MsoListParagraphCxSpMiddle">
accompany it with a written offer, valid for at least three years, to give any third party free (except for a nominal charge for the cost of distribution) a complete machine-readable copy of the corresponding source code, to be distributed under the terms of clauses B.1 and B.2; or
</p>
<p style="mso-list:l3 level1 lfo12;" class="MsoListParagraphCxSpLast">
accompany it with the information you received as to where the corresponding source code may be obtained. (This alternative is allowed only for non-commercial distribution and only if you received the module in object code or executable form alone.)
</p>

<p class="MsoNormal"><a name="_0cc832fa-a097-4047-b0a5-25c5e19d0f0a" id="_0cc832fa-a097-4047-b0a5-25c5e19d0f0a"></a>Source code for a work means the preferred form of the work for making modifications to it. For an executable file, complete source code means all the source code for all modules it contains; but, as a special exception, it need not include source code for modules that are standard libraries that accompany the operating system on which the executable file runs, or for standard header files or definition files that accompany that operating system.</p></div>
        <div><a name="_5" id="_5"></a><h2>B.5.</h2>

<p class="MsoNormal"><a name="_93361e6a-e408-4dfe-9180-e9bff6821c4d" id="_93361e6a-e408-4dfe-9180-e9bff6821c4d"></a>You may not copy, modify, sublicense, distribute or transfer the Module except as expressly provided under this General Public Licence. Any attempt otherwise to copy, modify, sublicense, distribute or transfer the Module is void, and will automatically terminate your rights to use the Module under this Licence. However, parties who have received copies, or rights to use copies, from you under this General Public Licence will not have their licences terminated so long as such parties remain in full compliance.</p>
</div>
        <div><a name="_6" id="_6"></a><h2>B.6.</h2>

<p class="MsoNormal"><a name="_3096746a-662c-4663-b71c-069e9e9b66d0" id="_3096746a-662c-4663-b71c-069e9e9b66d0"></a>By copying, distributing or modifying the Module (or any work based on the Module) you indicate your acceptance of this licence to do so, and all its terms and conditions.</p>
</div>
        <div><a name="_7" id="_7"></a><h2>B.7.</h2>

<p class="MsoNormal"><a name="_d0a6c731-107c-4caf-a420-26b833639bab" id="_d0a6c731-107c-4caf-a420-26b833639bab"></a>Each time you redistribute the Module (or any work based on the Module), the recipient automatically receives a licence from the original licensor to copy, distribute or modify the Module subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein.</p>
</div>
        <div><a name="_8" id="_8"></a><h2>B.8.</h2><p class="MsoNormal"><a name="_16c72b4b-c9a6-406b-8fc0-4f4a33ae125f" id="_16c72b4b-c9a6-406b-8fc0-4f4a33ae125f"></a>The ITU-T may publish revised and/or new versions of this General Public Licence from time to time. Such new versions will be similar in spirit to this version, but may differ in detail to address new problems or concerns.</p>
<p class="MsoNormal"><a name="_11c82e95-997a-4635-8b01-c3f30f5b5e35" id="_11c82e95-997a-4635-8b01-c3f30f5b5e35"></a>Each version is given a distinguishing version number. If the Module specifies a version number of the licence that applies to it and "any later version", you have the option of following the terms and conditions either of that version or of any later version published by ITU-T. If the Module does not specify a version number of the licence, you may choose any version ever published by ITU T.</p></div>
        <div><a name="_9" id="_9"></a><h2>B.9.</h2>

<p class="MsoNormal"><a name="_41f4796b-e2e0-4083-9f0b-4fe1bfb4b308" id="_41f4796b-e2e0-4083-9f0b-4fe1bfb4b308"></a>If you wish to incorporate parts of the Module into other free modules whose distribution conditions are different, write to the author to ask for permission. For software that is copyrighted by the ITU-T, write to the ITU-T Secretariat; exceptions may be made for this. This decision will be guided by the two goals of preserving the free status of all derivatives of this free software and of promoting the sharing and reuse of software generally.</p>
</div>
        <div><a name="_10" id="_10"></a><h2>B.10.</h2>

<p class="MsoNormal"><a name="_11f9d0bc-9a7f-4df4-9132-a79f5264f0ba" id="_11f9d0bc-9a7f-4df4-9132-a79f5264f0ba"></a>Because the Module is licensed free of charge, there is no warranty for the Module, to the extent permitted by applicable law. Except when otherwise stated in writing, the copyright holders and/or other parties provide the Module "as is" without warranty of any kind, either expressed or implied, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose. The entire risk as to the quality and performance of the Module is with you. Should the Module prove defective, you assume the cost of all necessary servicing, repair or correction.</p>
</div>
        <div><a name="_11" id="_11"></a><h2>B.11.</h2>

<p class="MsoNormal"><a name="_2334c659-063f-4d9a-91b1-889e3a6c17b5" id="_2334c659-063f-4d9a-91b1-889e3a6c17b5"></a>In no event, unless required by applicable law or agreed to in writing, will any copyright holder, or any other party who may modify and/or redistribute the Module as permitted above, be liable to you for damages, including any general, special, incidental or consequential damages arising out of the use or inability to use the Module (including, but not limited to, loss of data or data being rendered inaccurate or losses sustained by you or third parties or a failure of the Module to operate with any other modules), even if such holder or other party has been advised of the possibility of such damages.</p>
</div>
      </div>
      <p class="MsoNormal">
        <br clear="all" style="mso-special-character:line-break;page-break-before:always"/>
      </p>
      <div>
        <h1 class="Section3">Bibliography</h1>
        <table class="biblio" border="0">
          <tbody>
            <tr class="Biblio"><a name="b-CMake" id="b-CMake"></a>
              <td style="vertical-align:top">[b&#x2011;CMake]</td>
              <td>b-CMake, Kitware (2018), <i>CMake</i>. <a href="https://cmake.org/" class="url">https://cmake.org/</a>.</td>
            </tr>
            <tr class="Biblio"><a name="b-GSM-06.10" id="b-GSM-06.10"></a>
              <td style="vertical-align:top">[b&#x2011;GSM&#xA0;06.10]</td>
              <td>b-GSM 06.10, ETSI Recommendation GSM 06.10 (1992), <i>GSM full-rate speech transcoding</i>.</td>
            </tr>
            <tr class="Biblio"><a name="b-STLgit" id="b-STLgit"></a>
              <td style="vertical-align:top">[b&#x2011;STLgit]</td>
              <td>b-STLgit, ITU (2019), <i>ITU-T software tool library (G.191)</i>, GitHub repository. <a href="https://github.com/openitu/STL" class="url">https://github.com/openitu/STL</a>.</td>
            </tr>
          </tbody>
        </table>
      </div>
      
    </div>
  <div style="mso-element:footnote-list"><div style="mso-element:footnote" id="ftn1">
  
  <p class="MsoFootnoteText"><a name="_c8efc44d-f857-43e7-acd4-df336f8b99c0" id="_c8efc44d-f857-43e7-acd4-df336f8b99c0"></a><a style="mso-footnote-id:ftn1" href="#_ftn1" name="_ftnref1" title="" id="_ftnref1"><span class="MsoFootnoteReference"><span style="mso-special-character:footnote"></span></span></a><span style="mso-tab-count:1"></span>This Recommendation includes an electronic attachment containing STL2019 and manual.</p>
</div>
</div></body>
</html>


------=_NextPart_1f9c1f14.8e9d.4eb5
Content-Location: file:///C:/Doc/G.191_files/filelist.xml
Content-Transfer-Encoding: base64
Content-Type: application/xml

PHhtbCB4bWxuczpvPSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOm9mZmljZTpvZmZpY2UiPgog
ICAgICAgIDxvOk1haW5GaWxlIEhSZWY9Ii4uLy9fX3cvbW4tc2FtcGxlcy1pdHUvbW4tc2FtcGxl
cy1pdHUvc2l0ZS9kb2N1bWVudHMvRy4xOTEuaHRtIi8+ICA8bzpGaWxlIEhSZWY9IjFiZDgxMzg2
LTUxYzMtNDc1OS1hZmMwLTczNjE5YmU2NzFmZi5zdmciLz4KICA8bzpGaWxlIEhSZWY9Ijk4YTg0
MWMxLTMwNjUtNGJlMS1hNTRkLWU1MTI3ZTA0ZDA1MS5wbmciLz4KICA8bzpGaWxlIEhSZWY9ImZp
bGVsaXN0LnhtbCIvPgogIDxvOkZpbGUgSFJlZj0iaGVhZGVyLmh0bWwiLz4KPC94bWw+Cg==

------=_NextPart_1f9c1f14.8e9d.4eb5
Content-Location: file:///C:/Doc/G.191_files/header.html
Content-Transfer-Encoding: base64
Content-Type: text/html charset="utf-8"

PGh0bWwgeG1sbnM6dj0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp2bWwiDQp4bWxuczpvPSJ1
cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOm9mZmljZTpvZmZpY2UiDQp4bWxuczp3PSJ1cm46c2No
ZW1hcy1taWNyb3NvZnQtY29tOm9mZmljZTp3b3JkIg0KeG1sbnM6bT0iaHR0cDovL3NjaGVtYXMu
bWljcm9zb2Z0LmNvbS9vZmZpY2UvMjAwNC8xMi9vbW1sIg0KeG1sbnM6bXY9Imh0dHA6Ly9tYWNW
bWxTY2hlbWFVcmkiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy9UUi9SRUMtaHRtbDQwIj4NCg0K
PGhlYWQ+DQo8bWV0YSBuYW1lPVRpdGxlIGNvbnRlbnQ9IiI+DQo8bWV0YSBuYW1lPUtleXdvcmRz
IGNvbnRlbnQ9IiI+DQo8bWV0YSBodHRwLWVxdWl2PUNvbnRlbnQtVHlwZSBjb250ZW50PSJ0ZXh0
L2h0bWw7IGNoYXJzZXQ9dXRmLTgiPg0KPG1ldGEgbmFtZT1Qcm9nSWQgY29udGVudD1Xb3JkLkRv
Y3VtZW50Pg0KPG1ldGEgbmFtZT1HZW5lcmF0b3IgY29udGVudD0iTWljcm9zb2Z0IFdvcmQgMTUi
Pg0KPG1ldGEgbmFtZT1PcmlnaW5hdG9yIGNvbnRlbnQ9Ik1pY3Jvc29mdCBXb3JkIDE1Ij4NCjxs
aW5rIGlkPU1haW4tRmlsZSByZWw9TWFpbi1GaWxlIGhyZWY9Ii4uLy9fX3cvbW4tc2FtcGxlcy1p
dHUvbW4tc2FtcGxlcy1pdHUvc2l0ZS9kb2N1bWVudHMvRy4xOTEuaHRtbCI+DQo8IS0tW2lmIGd0
ZSBtc28gOV0+PHhtbD4NCiA8bzpzaGFwZWRlZmF1bHRzIHY6ZXh0PSJlZGl0IiBzcGlkbWF4PSIy
MDQ5Ii8+DQo8L3htbD48IVtlbmRpZl0tLT4NCjwvaGVhZD4NCg0KPGJvZHkgbGFuZz1FTiBsaW5r
PWJsdWUgdmxpbms9IiM5NTRGNzIiPg0KDQo8ZGl2IHN0eWxlPSdtc28tZWxlbWVudDpmb290bm90
ZS1zZXBhcmF0b3InIGlkPWZzPg0KDQo8cCBjbGFzcz1Nc29Ob3JtYWwgc3R5bGU9J21hcmdpbi1i
b3R0b206MGNtO21hcmdpbi1ib3R0b206LjAwMDFwdDtsaW5lLWhlaWdodDoNCm5vcm1hbCc+PHNw
YW4gbGFuZz1FTi1HQj48c3BhbiBzdHlsZT0nbXNvLXNwZWNpYWwtY2hhcmFjdGVyOmZvb3Rub3Rl
LXNlcGFyYXRvcic+PCFbaWYgIXN1cHBvcnRGb290bm90ZXNdPg0KDQo8aHIgYWxpZ249bGVmdCBz
aXplPTEgd2lkdGg9IjMzJSI+DQoNCjwhW2VuZGlmXT48L3NwYW4+PC9zcGFuPjwvcD4NCg0KPC9k
aXY+DQoNCjxkaXYgc3R5bGU9J21zby1lbGVtZW50OmZvb3Rub3RlLWNvbnRpbnVhdGlvbi1zZXBh
cmF0b3InIGlkPWZjcz4NCg0KPHAgY2xhc3M9TXNvTm9ybWFsIHN0eWxlPSdtYXJnaW4tYm90dG9t
OjBjbTttYXJnaW4tYm90dG9tOi4wMDAxcHQ7bGluZS1oZWlnaHQ6DQpub3JtYWwnPjxzcGFuIGxh
bmc9RU4tR0I+PHNwYW4gc3R5bGU9J21zby1zcGVjaWFsLWNoYXJhY3Rlcjpmb290bm90ZS1jb250
aW51YXRpb24tc2VwYXJhdG9yJz48IVtpZiAhc3VwcG9ydEZvb3Rub3Rlc10+DQoNCjxociBhbGln
bj1sZWZ0IHNpemU9MT4NCg0KPCFbZW5kaWZdPjwvc3Bhbj48L3NwYW4+PC9wPg0KDQo8L2Rpdj4N
Cg0KPGRpdiBzdHlsZT0nbXNvLWVsZW1lbnQ6ZW5kbm90ZS1zZXBhcmF0b3InIGlkPWVzPg0KDQo8
cCBjbGFzcz1Nc29Ob3JtYWwgc3R5bGU9J21hcmdpbi1ib3R0b206MGNtO21hcmdpbi1ib3R0b206
LjAwMDFwdDtsaW5lLWhlaWdodDoNCm5vcm1hbCc+PHNwYW4gbGFuZz1FTi1HQj48c3BhbiBzdHls
ZT0nbXNvLXNwZWNpYWwtY2hhcmFjdGVyOmZvb3Rub3RlLXNlcGFyYXRvcic+PCFbaWYgIXN1cHBv
cnRGb290bm90ZXNdPg0KDQo8aHIgYWxpZ249bGVmdCBzaXplPTEgd2lkdGg9IjMzJSI+DQoNCjwh
W2VuZGlmXT48L3NwYW4+PC9zcGFuPjwvcD4NCg0KPC9kaXY+DQoNCjxkaXYgc3R5bGU9J21zby1l
bGVtZW50OmVuZG5vdGUtY29udGludWF0aW9uLXNlcGFyYXRvcicgaWQ9ZWNzPg0KDQo8cCBjbGFz
cz1Nc29Ob3JtYWwgc3R5bGU9J21hcmdpbi1ib3R0b206MGNtO21hcmdpbi1ib3R0b206LjAwMDFw
dDtsaW5lLWhlaWdodDoNCm5vcm1hbCc+PHNwYW4gbGFuZz1FTi1HQj48c3BhbiBzdHlsZT0nbXNv
LXNwZWNpYWwtY2hhcmFjdGVyOmZvb3Rub3RlLWNvbnRpbnVhdGlvbi1zZXBhcmF0b3InPjwhW2lm
ICFzdXBwb3J0Rm9vdG5vdGVzXT4NCg0KPGhyIGFsaWduPWxlZnQgc2l6ZT0xPg0KDQo8IVtlbmRp
Zl0+PC9zcGFuPjwvc3Bhbj48L3A+DQoNCjwvZGl2Pg0KDQo8ZGl2IHN0eWxlPSdtc28tZWxlbWVu
dDpoZWFkZXInIGlkPWVoMT4NCg0KPHAgY2xhc3M9TXNvSGVhZGVyIGFsaWduPWxlZnQgc3R5bGU9
J3RleHQtYWxpZ246bGVmdDtsaW5lLWhlaWdodDoxMi4wcHQ7DQptc28tbGluZS1oZWlnaHQtcnVs
ZTpleGFjdGx5Jz48c3BhbiBsYW5nPUVOLUdCPjwvc3Bhbj48L3A+DQoNCjwvZGl2Pg0KDQo8ZGl2
IHN0eWxlPSdtc28tZWxlbWVudDpoZWFkZXInIGlkPWgxPg0KDQo8cCBjbGFzcz1Nc29IZWFkZXIg
c3R5bGU9J21hcmdpbi1ib3R0b206MTguMHB0Jz48c3BhbiBsYW5nPUVOLUdCDQpzdHlsZT0nZm9u
dC1zaXplOjEwLjBwdDttc28tYmlkaS1mb250LXNpemU6MTEuMHB0O2ZvbnQtd2VpZ2h0Om5vcm1h
bCc+DQo8L3NwYW4+PHNwYW4gbGFuZz1FTi1HQg0Kc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbCc+
PG86cD48L286cD48L3NwYW4+PC9wPg0KDQo8L2Rpdj4NCg0KPGRpdiBzdHlsZT0nbXNvLWVsZW1l
bnQ6Zm9vdGVyJyBpZD1lZjE+DQoNCjxwIGNsYXNzPU1zb0Zvb3RlciBzdHlsZT0nbWFyZ2luLXRv
cDoxMi4wcHQ7bGluZS1oZWlnaHQ6MTIuMHB0O21zby1saW5lLWhlaWdodC1ydWxlOg0KZXhhY3Rs
eSc+PC9wPg0KDQo8L2Rpdj4NCg0KPGRpdiBzdHlsZT0nbXNvLWVsZW1lbnQ6aGVhZGVyJyBpZD1l
aDI+DQo8cCBjbGFzcz1Nc29IZWFkZXIgYWxpZ249bGVmdCBzdHlsZT0ndGV4dC1hbGlnbjpsZWZ0
O2xpbmUtaGVpZ2h0OjEyLjBwdDsNCm1zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHknPjxzcGFu
IGxhbmc9RU4tR0I+PC9zcGFuPjwvcD4NCjwvZGl2Pg0KDQo8ZGl2IHN0eWxlPSdtc28tZWxlbWVu
dDpoZWFkZXInIGlkPWVoMmw+DQo8cCBjbGFzcz1Nc29IZWFkZXJMYW5kc2NhcGUgYWxpZ249bGVm
dCBzdHlsZT0ndGV4dC1hbGlnbjpsZWZ0O2xpbmUtaGVpZ2h0OjEyLjBwdDsNCm1zby1saW5lLWhl
aWdodC1ydWxlOmV4YWN0bHknPjxzcGFuIGxhbmc9RU4tR0I+PC9zcGFuPjwvcD4NCjwvZGl2Pg0K
DQo8ZGl2IHN0eWxlPSdtc28tZWxlbWVudDpoZWFkZXInIGlkPWgyPg0KPHAgY2xhc3M9TXNvSGVh
ZGVyIGFsaWduPXJpZ2h0IHN0eWxlPSd0ZXh0LWFsaWduOnJpZ2h0O2xpbmUtaGVpZ2h0OjEyLjBw
dDsNCm1zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHknPjxzcGFuIGxhbmc9RU4tR0I+PC9zcGFu
PjwvcD4NCjwvZGl2Pg0KDQo8ZGl2IHN0eWxlPSdtc28tZWxlbWVudDpoZWFkZXInIGlkPWgybD4N
CjxwIGNsYXNzPU1zb0hlYWRlckxhbmRzY2FwZSBhbGlnbj1yaWdodCBzdHlsZT0ndGV4dC1hbGln
bjpyaWdodDtsaW5lLWhlaWdodDoxMi4wcHQ7DQptc28tbGluZS1oZWlnaHQtcnVsZTpleGFjdGx5
Jz48c3BhbiBsYW5nPUVOLUdCPjwvc3Bhbj48L3A+DQo8L2Rpdj4NCg0KPGRpdiBzdHlsZT0nbXNv
LWVsZW1lbnQ6Zm9vdGVyJyBpZD1lZjI+DQo8cCBjbGFzcz1Gb290ZXJRUCBzdHlsZT0nbGluZS1o
ZWlnaHQ6MTIuMHB0O21zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHknPjwhLS1baWYgc3VwcG9y
dEZpZWxkc10+PHNwYW4gbGFuZz1FTi1HQiBzdHlsZT0nZm9udC13ZWlnaHQ6DQpub3JtYWwnPjxz
cGFuIHN0eWxlPSdtc28tZWxlbWVudDpmaWVsZC1iZWdpbic+PC9zcGFuPjwvc3Bhbj48c3BhbiBs
YW5nPUZSLUNIDQpzdHlsZT0nbXNvLWFuc2ktbGFuZ3VhZ2U6RlItQ0g7Zm9udC13ZWlnaHQ6bm9y
bWFsJz48c3Bhbg0Kc3R5bGU9J21zby1zcGFjZXJ1bjp5ZXMnPsKgPC9zcGFuPlBBR0U8c3BhbiBz
dHlsZT0nbXNvLXNwYWNlcnVuOnllcyc+wqAgPC9zcGFuPlwqDQpNRVJHRUZPUk1BVCA8L3NwYW4+
PHNwYW4gbGFuZz1FTi1HQiBzdHlsZT0nZm9udC13ZWlnaHQ6bm9ybWFsJz48c3Bhbg0Kc3R5bGU9
J21zby1lbGVtZW50OmZpZWxkLXNlcGFyYXRvcic+PC9zcGFuPjwvc3Bhbj48IVtlbmRpZl0tLT48
c3BhbiBsYW5nPUZSLUNIDQpzdHlsZT0nbXNvLWFuc2ktbGFuZ3VhZ2U6RlItQ0g7Zm9udC13ZWln
aHQ6bm9ybWFsO21zby1uby1wcm9vZjp5ZXMnPmlpPC9zcGFuPjwhLS1baWYgc3VwcG9ydEZpZWxk
c10+PHNwYW4NCmxhbmc9RU4tR0Igc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbCc+PHNwYW4gc3R5
bGU9J21zby1lbGVtZW50OmZpZWxkLWVuZCc+PC9zcGFuPjwvc3Bhbj48IVtlbmRpZl0tLT48c3Bh
bg0KICAgICAgICAgICAgICAgICAgICAgIGxhbmc9RlItQ0ggc3R5bGU9J21zby1hbnNpLWxhbmd1
YWdlOkZSLUNIJz48c3BhbiBzdHlsZT0nbXNvLXRhYi1jb3VudDoxJz7CoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCA8L3NwYW4+UmVjLiBJVFUtVCBHLjE5MS1FICAgKDAxLzIwMTkpPG86cD48L286
cD48L3NwYW4+PC9wPg0KPC9kaXY+DQoNCjxkaXYgc3R5bGU9J21zby1lbGVtZW50OmZvb3Rlcicg
aWQ9ZWYybD4NCjxwIGNsYXNzPUZvb3RlclFQIHN0eWxlPSdsaW5lLWhlaWdodDoxMi4wcHQ7bXNv
LWxpbmUtaGVpZ2h0LXJ1bGU6ZXhhY3RseSc+PCEtLVtpZiBzdXBwb3J0RmllbGRzXT48c3BhbiBs
YW5nPUVOLUdCIHN0eWxlPSdmb250LXdlaWdodDoNCm5vcm1hbCc+PHNwYW4gc3R5bGU9J21zby1l
bGVtZW50OmZpZWxkLWJlZ2luJz48L3NwYW4+PC9zcGFuPjxzcGFuIGxhbmc9RlItQ0gNCnN0eWxl
PSdtc28tYW5zaS1sYW5ndWFnZTpGUi1DSDtmb250LXdlaWdodDpub3JtYWwnPjxzcGFuDQpzdHls
ZT0nbXNvLXNwYWNlcnVuOnllcyc+wqA8L3NwYW4+UEFHRTxzcGFuIHN0eWxlPSdtc28tc3BhY2Vy
dW46eWVzJz7CoCA8L3NwYW4+XCoNCk1FUkdFRk9STUFUIDwvc3Bhbj48c3BhbiBsYW5nPUVOLUdC
IHN0eWxlPSdmb250LXdlaWdodDpub3JtYWwnPjxzcGFuDQpzdHlsZT0nbXNvLWVsZW1lbnQ6Zmll
bGQtc2VwYXJhdG9yJz48L3NwYW4+PC9zcGFuPjwhW2VuZGlmXS0tPjxzcGFuIGxhbmc9RlItQ0gN
CnN0eWxlPSdtc28tYW5zaS1sYW5ndWFnZTpGUi1DSDtmb250LXdlaWdodDpub3JtYWw7bXNvLW5v
LXByb29mOnllcyc+aWk8L3NwYW4+PCEtLVtpZiBzdXBwb3J0RmllbGRzXT48c3Bhbg0KbGFuZz1F
Ti1HQiBzdHlsZT0nZm9udC13ZWlnaHQ6bm9ybWFsJz48c3BhbiBzdHlsZT0nbXNvLWVsZW1lbnQ6
ZmllbGQtZW5kJz48L3NwYW4+PC9zcGFuPjwhW2VuZGlmXS0tPjxzcGFuDQogICAgICAgICAgICAg
ICAgICAgICAgbGFuZz1GUi1DSCBzdHlsZT0nbXNvLWFuc2ktbGFuZ3VhZ2U6RlItQ0gnPjxzcGFu
IHN0eWxlPSdtc28tdGFiLWNvdW50OjEnPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIDwvc3Bh
bj5SZWMuIElUVS1UIEcuMTkxLUUgICAoMDEvMjAxOSk8L3NwYW4+PC9wPg0KPC9kaXY+DQoNCjxk
aXYgc3R5bGU9J21zby1lbGVtZW50OmZvb3RlcicgaWQ9ZjI+DQo8cCBjbGFzcz1Gb290ZXJRUCBz
dHlsZT0nbGluZS1oZWlnaHQ6MTIuMHB0Jz48c3BhbiBsYW5nPUVOLUdCPjxzcGFuIHN0eWxlPSdt
c28tdGFiLWNvdW50OjInPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA8L3NwYW4+
UmVjLiBJVFUtVCBHLjE5MS1FICAgKDAxLzIwMTkpDQogIDxzcGFuIHN0eWxlPSdtc28tdGFiLWNv
dW50OjEnPsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA8L3NwYW4+PC9zcGFuPjwhLS1baWYgc3Vw
cG9ydEZpZWxkc10+PHNwYW4NCmxhbmc9RU4tR0Igc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbCc+
PHNwYW4gc3R5bGU9J21zby1lbGVtZW50OmZpZWxkLWJlZ2luJz48L3NwYW4+DQpQQUdFPHNwYW4g
c3R5bGU9J21zby1zcGFjZXJ1bjp5ZXMnPsKgIDwvc3Bhbj5cKiBNRVJHRUZPUk1BVCA8c3Bhbg0K
c3R5bGU9J21zby1lbGVtZW50OmZpZWxkLXNlcGFyYXRvcic+PC9zcGFuPjwvc3Bhbj48IVtlbmRp
Zl0tLT48c3BhbiBsYW5nPUVOLUdCDQpzdHlsZT0nZm9udC13ZWlnaHQ6bm9ybWFsJz48c3BhbiBz
dHlsZT0nbXNvLW5vLXByb29mOnllcyc+Mjk8L3NwYW4+PC9zcGFuPjwhLS1baWYgc3VwcG9ydEZp
ZWxkc10+PHNwYW4NCmxhbmc9RU4tR0Igc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbCc+PHNwYW4g
c3R5bGU9J21zby1lbGVtZW50OmZpZWxkLWVuZCc+PC9zcGFuPjwvc3Bhbj48IVtlbmRpZl0tLT48
c3Bhbg0KbGFuZz1FTi1HQiBzdHlsZT0nZm9udC13ZWlnaHQ6bm9ybWFsJz48bzpwPjwvbzpwPjwv
c3Bhbj48L3A+DQo8L2Rpdj4NCg0KPGRpdiBzdHlsZT0nbXNvLWVsZW1lbnQ6Zm9vdGVyJyBpZD1m
Mmw+DQo8cCBjbGFzcz1Gb290ZXJRUExhbmRzY2FwZSBzdHlsZT0nbGluZS1oZWlnaHQ6MTIuMHB0
Jz48c3BhbiBsYW5nPUVOLUdCPjxzcGFuIHN0eWxlPSdtc28tdGFiLWNvdW50OjInPsKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA8L3NwYW4+UmVjLiBJVFUtVCBHLjE5MS1FICAgKDAx
LzIwMTkpDQogIDxzcGFuIHN0eWxlPSdtc28tdGFiLWNvdW50OjEnPsKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCA8L3NwYW4+PC9zcGFuPjwhLS1baWYgc3VwcG9ydEZpZWxkc10+PHNwYW4NCmxhbmc9
RU4tR0Igc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbCc+PHNwYW4gc3R5bGU9J21zby1lbGVtZW50
OmZpZWxkLWJlZ2luJz48L3NwYW4+DQpQQUdFPHNwYW4gc3R5bGU9J21zby1zcGFjZXJ1bjp5ZXMn
PsKgIDwvc3Bhbj5cKiBNRVJHRUZPUk1BVCA8c3Bhbg0Kc3R5bGU9J21zby1lbGVtZW50OmZpZWxk
LXNlcGFyYXRvcic+PC9zcGFuPjwvc3Bhbj48IVtlbmRpZl0tLT48c3BhbiBsYW5nPUVOLUdCDQpz
dHlsZT0nZm9udC13ZWlnaHQ6bm9ybWFsJz48c3BhbiBzdHlsZT0nbXNvLW5vLXByb29mOnllcyc+
Mjk8L3NwYW4+PC9zcGFuPjwhLS1baWYgc3VwcG9ydEZpZWxkc10+PHNwYW4NCmxhbmc9RU4tR0Ig
c3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbCc+PHNwYW4gc3R5bGU9J21zby1lbGVtZW50OmZpZWxk
LWVuZCc+PC9zcGFuPjwvc3Bhbj48IVtlbmRpZl0tLT48c3Bhbg0KbGFuZz1FTi1HQiBzdHlsZT0n
Zm9udC13ZWlnaHQ6bm9ybWFsJz48bzpwPjwvbzpwPjwvc3Bhbj48L3A+DQo8L2Rpdj4NCg0KPGRp
diBzdHlsZT0nbXNvLWVsZW1lbnQ6Zm9vdGVyJyBpZD1lZjM+DQo8cCBjbGFzcz1Gb290ZXJRUCBz
dHlsZT0nbGluZS1oZWlnaHQ6MTIuMHB0O21zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHknPjwh
LS1baWYgc3VwcG9ydEZpZWxkc10+PHNwYW4gbGFuZz1FTi1HQiBzdHlsZT0nZm9udC13ZWlnaHQ6
DQpub3JtYWwnPjxzcGFuIHN0eWxlPSdtc28tZWxlbWVudDpmaWVsZC1iZWdpbic+PC9zcGFuPjwv
c3Bhbj48c3BhbiBsYW5nPUZSLUNIDQpzdHlsZT0nbXNvLWFuc2ktbGFuZ3VhZ2U6RlItQ0g7Zm9u
dC13ZWlnaHQ6bm9ybWFsJz48c3Bhbg0Kc3R5bGU9J21zby1zcGFjZXJ1bjp5ZXMnPsKgPC9zcGFu
PlBBR0U8c3BhbiBzdHlsZT0nbXNvLXNwYWNlcnVuOnllcyc+wqAgPC9zcGFuPlwqDQpNRVJHRUZP
Uk1BVCA8L3NwYW4+PHNwYW4gbGFuZz1FTi1HQiBzdHlsZT0nZm9udC13ZWlnaHQ6bm9ybWFsJz48
c3Bhbg0Kc3R5bGU9J21zby1lbGVtZW50OmZpZWxkLXNlcGFyYXRvcic+PC9zcGFuPjwvc3Bhbj48
IVtlbmRpZl0tLT48c3BhbiBsYW5nPUZSLUNIDQpzdHlsZT0nbXNvLWFuc2ktbGFuZ3VhZ2U6RlIt
Q0g7Zm9udC13ZWlnaHQ6bm9ybWFsO21zby1uby1wcm9vZjp5ZXMnPmlpPC9zcGFuPjwhLS1baWYg
c3VwcG9ydEZpZWxkc10+PHNwYW4NCmxhbmc9RU4tR0Igc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1h
bCc+PHNwYW4gc3R5bGU9J21zby1lbGVtZW50OmZpZWxkLWVuZCc+PC9zcGFuPjwvc3Bhbj48IVtl
bmRpZl0tLT48c3Bhbg0KICAgICAgICAgICAgICAgICAgICAgIGxhbmc9RlItQ0ggc3R5bGU9J21z
by1hbnNpLWxhbmd1YWdlOkZSLUNIJz48c3BhbiBzdHlsZT0nbXNvLXRhYi1jb3VudDoxJz7CoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCA8L3NwYW4+UmVjLiBJVFUtVCBHLjE5MS1FICAgKDAxLzIw
MTkpPC9zcGFuPjwvcD4NCjwvZGl2Pg0KDQo8ZGl2IHN0eWxlPSdtc28tZWxlbWVudDpmb290ZXIn
IGlkPWVmM2w+DQo8cCBjbGFzcz1Gb290ZXJRUExhbmRzY2FwZSBzdHlsZT0nbGluZS1oZWlnaHQ6
MTIuMHB0O21zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHknPjwhLS1baWYgc3VwcG9ydEZpZWxk
c10+PHNwYW4gbGFuZz1FTi1HQiBzdHlsZT0nZm9udC13ZWlnaHQ6DQpub3JtYWwnPjxzcGFuIHN0
eWxlPSdtc28tZWxlbWVudDpmaWVsZC1iZWdpbic+PC9zcGFuPjwvc3Bhbj48c3BhbiBsYW5nPUZS
LUNIDQpzdHlsZT0nbXNvLWFuc2ktbGFuZ3VhZ2U6RlItQ0g7Zm9udC13ZWlnaHQ6bm9ybWFsJz48
c3Bhbg0Kc3R5bGU9J21zby1zcGFjZXJ1bjp5ZXMnPsKgPC9zcGFuPlBBR0U8c3BhbiBzdHlsZT0n
bXNvLXNwYWNlcnVuOnllcyc+wqAgPC9zcGFuPlwqDQpNRVJHRUZPUk1BVCA8L3NwYW4+PHNwYW4g
bGFuZz1FTi1HQiBzdHlsZT0nZm9udC13ZWlnaHQ6bm9ybWFsJz48c3Bhbg0Kc3R5bGU9J21zby1l
bGVtZW50OmZpZWxkLXNlcGFyYXRvcic+PC9zcGFuPjwvc3Bhbj48IVtlbmRpZl0tLT48c3BhbiBs
YW5nPUZSLUNIDQpzdHlsZT0nbXNvLWFuc2ktbGFuZ3VhZ2U6RlItQ0g7Zm9udC13ZWlnaHQ6bm9y
bWFsO21zby1uby1wcm9vZjp5ZXMnPmlpPC9zcGFuPjwhLS1baWYgc3VwcG9ydEZpZWxkc10+PHNw
YW4NCmxhbmc9RU4tR0Igc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbCc+PHNwYW4gc3R5bGU9J21z
by1lbGVtZW50OmZpZWxkLWVuZCc+PC9zcGFuPjwvc3Bhbj48IVtlbmRpZl0tLT48c3Bhbg0KICAg
ICAgICAgICAgICAgICAgICAgIGxhbmc9RlItQ0ggc3R5bGU9J21zby1hbnNpLWxhbmd1YWdlOkZS
LUNIJz48c3BhbiBzdHlsZT0nbXNvLXRhYi1jb3VudDoxJz7CoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCA8L3NwYW4+UmVjLiBJVFUtVCBHLjE5MS1FICAgKDAxLzIwMTkpPC9zcGFuPjwvcD4NCjwv
ZGl2Pg0KDQo8ZGl2IHN0eWxlPSdtc28tZWxlbWVudDpmb290ZXInIGlkPWYzPg0KPHAgY2xhc3M9
Rm9vdGVyUVAgc3R5bGU9J2xpbmUtaGVpZ2h0OjEyLjBwdCc+PHNwYW4gbGFuZz1FTi1HQj48c3Bh
biBzdHlsZT0nbXNvLXRhYi1jb3VudDoyJz7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgPC9zcGFuPlJlYy4gSVRVLVQgRy4xOTEtRSAgICgwMS8yMDE5KQ0KICA8c3BhbiBzdHlsZT0n
bXNvLXRhYi1jb3VudDoxJz7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgPC9zcGFuPjwvc3Bhbj48
IS0tW2lmIHN1cHBvcnRGaWVsZHNdPjxzcGFuDQpsYW5nPUVOLUdCIHN0eWxlPSdmb250LXdlaWdo
dDpub3JtYWwnPjxzcGFuIHN0eWxlPSdtc28tZWxlbWVudDpmaWVsZC1iZWdpbic+PC9zcGFuPg0K
UEFHRTxzcGFuIHN0eWxlPSdtc28tc3BhY2VydW46eWVzJz7CoCA8L3NwYW4+XCogTUVSR0VGT1JN
QVQgPHNwYW4NCnN0eWxlPSdtc28tZWxlbWVudDpmaWVsZC1zZXBhcmF0b3InPjwvc3Bhbj48L3Nw
YW4+PCFbZW5kaWZdLS0+PHNwYW4gbGFuZz1FTi1HQg0Kc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1h
bCc+PHNwYW4gc3R5bGU9J21zby1uby1wcm9vZjp5ZXMnPjI5PC9zcGFuPjwvc3Bhbj48IS0tW2lm
IHN1cHBvcnRGaWVsZHNdPjxzcGFuDQpsYW5nPUVOLUdCIHN0eWxlPSdmb250LXdlaWdodDpub3Jt
YWwnPjxzcGFuIHN0eWxlPSdtc28tZWxlbWVudDpmaWVsZC1lbmQnPjwvc3Bhbj48L3NwYW4+PCFb
ZW5kaWZdLS0+PHNwYW4NCmxhbmc9RU4tR0Igc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbCc+PG86
cD48L286cD48L3NwYW4+PC9wPg0KPC9kaXY+DQoNCjxkaXYgc3R5bGU9J21zby1lbGVtZW50OmZv
b3RlcicgaWQ9ZjNsPg0KPHAgY2xhc3M9Rm9vdGVyUVBMYW5kc2NhcGUgc3R5bGU9J2xpbmUtaGVp
Z2h0OjEyLjBwdCc+PHNwYW4gbGFuZz1FTi1HQj48c3BhbiBzdHlsZT0nbXNvLXRhYi1jb3VudDoy
Jz7CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgPC9zcGFuPlJlYy4gSVRVLVQgRy4x
OTEtRSAgICgwMS8yMDE5KQ0KICA8c3BhbiBzdHlsZT0nbXNvLXRhYi1jb3VudDoxJz7CoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgPC9zcGFuPjwvc3Bhbj48IS0tW2lmIHN1cHBvcnRGaWVsZHNdPjxz
cGFuDQpsYW5nPUVOLUdCIHN0eWxlPSdmb250LXdlaWdodDpub3JtYWwnPjxzcGFuIHN0eWxlPSdt
c28tZWxlbWVudDpmaWVsZC1iZWdpbic+PC9zcGFuPg0KUEFHRTxzcGFuIHN0eWxlPSdtc28tc3Bh
Y2VydW46eWVzJz7CoCA8L3NwYW4+XCogTUVSR0VGT1JNQVQgPHNwYW4NCnN0eWxlPSdtc28tZWxl
bWVudDpmaWVsZC1zZXBhcmF0b3InPjwvc3Bhbj48L3NwYW4+PCFbZW5kaWZdLS0+PHNwYW4gbGFu
Zz1FTi1HQg0Kc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbCc+PHNwYW4gc3R5bGU9J21zby1uby1w
cm9vZjp5ZXMnPjI5PC9zcGFuPjwvc3Bhbj48IS0tW2lmIHN1cHBvcnRGaWVsZHNdPjxzcGFuDQps
YW5nPUVOLUdCIHN0eWxlPSdmb250LXdlaWdodDpub3JtYWwnPjxzcGFuIHN0eWxlPSdtc28tZWxl
bWVudDpmaWVsZC1lbmQnPjwvc3Bhbj48L3NwYW4+PCFbZW5kaWZdLS0+PHNwYW4NCmxhbmc9RU4t
R0Igc3R5bGU9J2ZvbnQtd2VpZ2h0Om5vcm1hbCc+PG86cD48L286cD48L3NwYW4+PC9wPg0KPC9k
aXY+DQoNCjwvYm9keT4NCg0KPC9odG1sPg0K

------=_NextPart_1f9c1f14.8e9d.4eb5
Content-Location: file:///C:/Doc/G.191_files/98a841c1-3065-4be1-a54d-e5127e04d051.png
Content-Transfer-Encoding: base64
Content-Type: image/png

iVBORw0KGgoAAAANSUhEUgAAAHoAAANLCAMAAAC5SXlDAAADAFBMVEX2kYX1zcLNeITqUw/+7Nnh
cnP3yr3/jD72iYD+xZnWY2vwhH7z0MbSW2bCSVzmgX3so5n3vrG5RFy5SGD5wr7+9evUbXH5h0Tz
mYz+z6uuLErblZj/ZQD+n1vDUmP3xLiyMU3+qGv4wbTsaze1OlT+eRryraD+lkzDWmvpubPyoZL+
vIu9PVT2jILcgoLNVGL1pHfoi4PcfHv2j4TynI7/sn/cChv0lYnyv7Xim5rps67ztqjyqJrmZmv+
4svqlIr/2L/hlJL2iH/2uazyrJ3UdXrynpDypJXVjZPzsKHLZHDrnZPmfHrUhIz//vztwrn+bAna
cXPz1MrHS1znoZ7uqqLeior02c/YFyf53drKYW3CRVn//PzjkY72vK6pIkTjiYT+giz0l4r1uKrr
fnrkravyppj0183LUF/4cx/LWWXhjouzNVHNaXSzLkupH0LxsabuekzrkIfKXWnzuZ/fo6PCQlfk
mJX+2bWuJkb0taapIEP3x7vMc3/ylne4NlDObXj+n1jYhIj00MSkGD/HZXTcZmvkTFLxiIDVaG7+
bwzcam7rmY7qpaD2kobmeHbUcHbWen/yopPrenf+7uPzsqLWiY7+snbgbnD++PPnqaXzlYnzmIzz
08fqhX/+1LTGanrzs6XuycD+3cP+17zyqpvjhYDCVWjonpn+dBXwimX+/Pr+9u/1h3/ATmH+aATz
1szyuK/0po3adnjBXm/1lIndf379/fytKUjsgmv0zsLeh4b1longLTe3PVb+0av0s6Tz1cr53NDp
XR+pI0X++/f2k4fzm4ziO0T0mIv//f3mc3P0rJv3zcv408TWf4XfJS/feXjGV2b0ppL2rZuuLk32
zMDGaHfuglrwi4O6QFjwk5fgp6jwhFrtiYzsr6jcnJ71lIjzl4v1xMPmWF6uJ0fzn4WmIEPgdnbw
gXv///7vjoT+/v7+///+//7zz8T+/v/z0MTXX2f00MP9/v30z8P9/f3qcnfhoKDxemHfSRj//v6j
GT//ZgD///+kGT9CyJ4iAAAAAWJLR0QAiAUdSAAAAAxjbVBQSkNtcDA3MTIAAAADSABzvAAAVV9J
REFUeF7NfQm8nVWR5xNpiLHBsDbLwwAKYUBAECRsatgUaDC2iSh7AIEmItsICqEJdCPNEgREWQWR
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

------=_NextPart_1f9c1f14.8e9d.4eb5
Content-Location: file:///C:/Doc/G.191_files/1bd81386-51c3-4759-afc0-73619be671ff.svg
Content-Transfer-Encoding: base64
Content-Type: image/svg+xml

PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53
My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNzIiIGhlaWdodD0iMzAwIiB2aWV3Qm94PSIwIDAgMjcy
IDMwMCI+PGRlZnM+PHN0eWxlPi5jbHMtMXtmaWxsOiMxNmEwZGI7fTwvc3R5bGU+PC9kZWZzPjx0
aXRsZT5JVFU8L3RpdGxlPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0iTTUzLjk1MTc2LDEyNC4wNDMz
NGExLjM5OTEzLDEuMzk5MTMsMCwwLDEsMS40MDA2OCwxLjQwMDk0djg0LjgwNzM4YTEuNDA0LDEu
NDA0LDAsMCwxLTEuNDAwNjgsMS40MDY2NkgyOC41NjI2MWExLjQwNzY0LDEuNDA3NjQsMCwwLDEt
MS40MDA2OC0xLjQwNjY2VjEyNS40NDQyOGExLjQwMjcyLDEuNDAyNzIsMCwwLDEsMS40MDA2OC0x
LjQwMDk0SDUzLjk1MTc2Ii8+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMTQ1LjY3MTA1LDEyNC4w
NDMzNGExLjM5OTE0LDEuMzk5MTQsMCwwLDEsMS40MDA2OCwxLjQwMDk0VjE0Ni4zMjZhMS40MDQs
MS40MDQsMCwwLDEtMS40MDA2OCwxLjQwNjY4SDEyMy41MDg2N2ExLjQwNCwxLjQwNCwwLDAsMC0x
LjQwNjYzLDEuNDAwOTJ2NjEuMTE4YTEuNDA0MSwxLjQwNDEsMCwwLDEtMS40MDEsMS40MDY2Nkg5
NS4zMTIyMWExLjQwNCwxLjQwNCwwLDAsMS0xLjQwMDY4LTEuNDA2NjZ2LTYxLjExOGExLjQwMjc3
LDEuNDAyNzcsMCwwLDAtMS40MDEtMS40MDA5Mkg3MC44NTk0MWExLjQwODksMS40MDg5LDAsMCwx
LTEuNDA2NjQtMS40MDY2OFYxMjUuNDQ0MjhhMS40MDQsMS40MDQsMCwwLDEsMS40MDY2NC0xLjQw
MDk0aDc0LjgxMTY0Ii8+PHBhdGggY2xhc3M9ImNscy0xIiBkPSJNMjQ0LjQ2OTQyLDEyNC4wNDMz
NGExLjQwNDIyLDEuNDA0MjIsMCwwLDEsMS40MDY2MywxLjQwMDk0djQzLjIyMTg1YzAsMjguNjI3
LTE1LjAwMjcsNDMuNzYxNTQtNDMuMzgyNzksNDMuNzYxNTQtMjcuNDE1NywwLTQxLjMxNTU5LTE0
LjkzOTMzLTQxLjMxNTU5LTQ0LjQwNDZWMTI1LjQ0NDI4YTEuMzk5MjEsMS4zOTkyMSwwLDAsMSwx
LjQwMS0xLjQwMDk0aDI1LjM4Mjg0YTEuNDAwNDMsMS40MDA0MywwLDAsMSwxLjQwNjY0LDEuNDAw
OTR2NDIuNDQxYzAsOS4zMzU2NCwyLjQ1NzU4LDIwLjQ2MjYzLDE0LjE1ODUsMjAuNDYyNjMsOS41
MjUxLDAsMTQuMTUyOS02LjY5NDU3LDE0LjE1MjktMjAuNDYyNjN2LTQyLjQ0MWExLjQwNCwxLjQw
NCwwLDAsMSwxLjQwNjY0LTEuNDAwOTRoMjUuMzgzMiIvPjxwYXRoIGNsYXNzPSJjbHMtMSIgZD0i
TTI3MS4xMjAxMiwyOTljLTE2Ljg0NTYyLTguMzA3OTItMzUuODA0LTE3Ljc4NzEtNTMuMjg2Ny0y
OC4yMDc4OXE0LjQ2OTYtMy40NjIwNyw4LjYzNS03LjI4MDE4QTEzMy4wMzkxNSwxMzMuMDM5MTUs
MCwwLDAsMjQ3LjI4MTI4LDg5LjI2OTVhMTM0LjQ3NDU3LDEzNC40NzQ1NywwLDAsMC0xODMuMzM2
OTUtMzguOTFDNTMuMDEyNiwzNS4xMTU4OCw0Mi4wMzUsMTguNTgwNDMsMzAuNDMxNDYsMSwzNC4w
ODMsOC40MTIyNSw0NC45MTEzMSwzMS4yNjMzNiw1Ny42MDU3Miw1NC42MDgyMkExMzUuMDM4OSwx
MzUuMDM4OSwwLDAsMCwuODc5ODgsMTY0LjUxMTYxLDEzMi4zOTY3MywxMzIuMzk2NzMsMCwwLDAs
MTQuMTk0NTQsMjIyLjU1MjIsMTM0LjUxNDI0LDEzNC41MTQyNCwwLDAsMCwyMDkuOTc4ODQsMjc2
LjQzNmMyMC40ODU1Niw4LjQ3NDQyLDQxLjA3NDQ5LDE1LjU1MzY3LDYxLjE0MTI4LDIyLjU2NE0x
MjIuOTMyNTYsMjg3LjMxMDM1YTEyNC40MjI5LDEyNC40MjI5LDAsMCwxLTc5LjEyOTMxLTM5LjYz
MzQyLDMzLjYwMjI5LDMzLjYwMjI5LDAsMCwxLTUuNTU3NS0xNS45NjcwNiwxNzUuNjM4OTMsMTc1
LjYzODkzLDAsMCwwLDQ2LjIzNiwzMS42Mjk4LDE4Ny4wMDE0OCwxODcuMDAxNDgsMCwwLDAsNTku
Nzk3MzgsMTcuNDQyNjFjLTYuOTc1Nyw0Ljg3NDUzLTE0LjE5Mjg1LDcuMTMwOTMtMjEuMzQ2NTcs
Ni41MjgwN00zNS4yODg4LDIyMC4zNjQ3MmMtLjEyMDU1LDEuMjQwMTYtLjE5NTE5LDIuNDUxNi0u
MjQ3MDUsMy42NTE1Ny0xLjExMzY4LTEuMjExNDUtMi4yMTA1My0yLjQyMjkxLTMuMjU1MTctMy42
NTE1N0gyNy43OTAyNmMyLjIzMzY1LDIuNzQ0NDEsNC42NTY1NCw1LjQ0ODY1LDcuMjI4NzEsOC4x
MDdhNDUuNzc1NDYsNDUuNzc1NDYsMCwwLDAsMS41MjcxOCwxMC41NTI4NUExMjIuNjg4OTEsMTIy
LjY4ODkxLDAsMCwxLDMxLjkxMjc0LDk2LjQ5MjNhNjcuMDQyODMsNjcuMDQyODMsMCwwLDAtMS45
MTc1NywxOC44MjYzMUgzMi45OThhNjAuMDE2NDEsNjAuMDE2NDEsMCwwLDEsNC45MzE2My0yNy4w
OTk3OUExMjQuOTczMywxMjQuOTczMywwLDAsMSw1NC4zOTA1LDcxLjExNXE0LjcwMjQ1LTIuNjQz
OTUsOS42NTE2LTQuOTI2MmM3LjMzNzcsMTIuODc4MTYsMTQuOTc5NTcsMjUuMTMwNDQsMjIuMDA3
MTQsMzQuMTg0NzVhMTQ4LjM2Mzc5LDE0OC4zNjM3OSwwLDAsMS0yMy43MTIzNC0uNDkzNzVsMS4y
ODYwOS4zNjE3MWMtLjQwNzU2LS4wMzQ0NS0uODA5NS0uMDc0NjQtMS4yMjMtLjExNDgzLDIuNTAz
MTMsNS4yMDc1LDUuMjQyMTEsMTAuMjY1NzUsOC4xNDcxOSwxNS4xOTJoNTEuMTc0cS00LjAxMzMy
LTMuMjgxMjctNy45MDA0OS02LjgwMzY2QTIxNC44Mzc1NywyMTQuODM3NTcsMCwwLDEsMTUwLjQ1
NjksODQuMzc3NzhhNTMuMzQ5NDUsNTMuMzQ5NDUsMCwwLDAsMTUuMzMsMTEuNzI0MSw1NS44Njg3
Myw1NS44Njg3MywwLDAsMCwyMy42OTQ4Miw2LjQ2NDljLjkwMTY2LDQuMTM5NjEsMS42NzY4MSw4
LjM5OTc5LDIuMzE5ODYsMTIuNzUxODNoMy4wNTQzNnEtLjk0NzIyLTYuNTM2NjctMi4yOTA3Ny0x
Mi43NzQ4MWM3LjY0NzQ4LS4zMjE1MiwxNC4xNjQxMS0yLjc3MzEyLDE4LjA3NDIzLTcuMjUxNDZh
MTM0LjA3MTM5LDEzNC4wNzEzOSwwLDAsMSwxNy4wMjMyOSwyMC4wMjYyN2gzLjY0NTlBMTM2Ljk3
NzQ5LDEzNi45Nzc0OSwwLDAsMCwyMTIuNDE5MjUsOTIuODEyYTE2Ljc5MTg0LDE2Ljc5MTg0LDAs
MCwwLDEuMzY2MzMtMTIuOTM1NTIsMjguNzQ0MzMsMjguNzQ0MzMsMCwwLDAtNC4zMTc2Ny04Ljk1
Njc0LDMwLjc1OTkyLDMwLjc1OTkyLDAsMCwxLDE0Ljk2OCw3LjAyNzYxLDEyMi43NzIsMTIyLjc3
MiwwLDAsMSwyNy4zOTI1OCwxMzEuMDcyMmMtMTAuNTI0MTgsMjEuODkyMjUtMzUuOTg3NjIsMzMu
NzgyODUtNjcuMjg0MzYsMzQuNjU1NTYsMTMuMjE2ODktMy4zNDE1MiwyMy43NDY2OC03LjkyMzIz
LDM2LjIyODcyLTE1LjgyOTI2LTQuNjY3NzYtMi4xNDE1NS05LjM1MjY4LTQuNDg0MDgtMTQuMDM4
LTYuOTg3MzctMS40NDY1OC4wNzQ2NC0yLjkxMDY5LjEyMDU3LTQuNDIwNy4xMjA1Ny0yNi4wNzIx
NSwwLTQyLjMwOTA3LTExLjQ4My00Ny41OTExMy0zNC4xODQ3Ni04LjE4NzQ5LTYuMjc1NDUtMTYu
MTg1NDEtMTIuODE1LTIzLjkxOTA5LTE5LjQ4MDg1VjE4Ni4zMTJjMTAuOTU0ODYsOS45Nzg3LDIx
Ljg5MjE5LDE5LjE0MjExLDMyLjEwNjIzLDI3LjU4NzgtNy44NTk4NCw1LjIzNjI1LTMzLjMwNjEx
LDEyLjk2NDI4LTM4LjI5LDEzLjgzN3E2LjQyNSw1LjE0MTQ5LDEzLjAwNDU0LDkuNzgzNDdhMTkz
LjE1NzMyLDE5My4xNTczMiwwLDAsMS0zMS40MjI5LTExLjgzODkzcS0xLjUwNzU1LS43MjM0Mi0y
Ljk5NzI0LTEuNDY5ODJjLS4xNDMzMy0uMDY4OTEtLjI4MTQtLjEzNzc5LS40MTkxMi0uMjA2Njlx
LTIuNzkwMTQtMS40MDM4MS01LjUwNi0yLjg3NjQ4YTE0Mi43NDkyMiwxNDIuNzQ5MjIsMCwwLDEt
MzMuMjQ5LTI0LjYzMXY0LjIxNDI1cTQuNDM1NDEsNC4yOTc1LDkuNDEwMTUsOC4yOTA3YTE2MS4z
Njc0NCwxNjEuMzY3NDQsMCwwLDAsMzMuNzcxNDksMjAuNDc0MSwxOTMuODc3NzYsMTkzLjg3Nzc2
LDAsMCwwLDM3LjU5NTQsMTMuMDA0NDVxMTAuNDgwOSw2Ljk3NTkxLDIxLjIyNiwxMi45NDEzYy0u
MDgwMjUuMTQzNTUtLjE2NjQ2LjI5MjgxLS4yNTI2Ny40NDIxLTUuNTI4NzYsOS4zNzU4My0xMS41
NDA0MiwxNi43ODIzMy0xNy43OTI4MywyMi4wNTg3NS0xOS43Nzk0NC0xLjcyMjQ0LTQxLjMzODM3
LTcuNTA0MTEtNjIuMjY2MTgtMTcuNTExNS0xOC44MjYyNi05LjAwMjY1LTM1LjE5NTI5LTIwLjU4
MzItNDcuNzI4ODUtMzMuMzA2MzJhNTkuMjU4MjUsNTkuMjU4MjUsMCwwLDEsLjMyMTM1LTYuNzQw
NDlaTTE0My40MDA2LDcxLjkzMDI2YTI5LjUwMDcxLDI5LjUwMDcxLDAsMCwwLDUuMDkyODMsMTAu
MDU5MDYsMjE5LjMzMjU3LDIxOS4zMzI1NywwLDAsMC0zNi45MzQ4NCwyNC40NjQ0M2MtMTMuNjI0
NDUtMTIuNjQ4NDctMjYuMjUwMTctMjcuNDI3LTM4LjcyNjI1LTQzLjk4NTQ3LjA2ODY5LS4wMjMu
MTMyMTEtLjA1NzM4LjIwMDgtLjA4MDM4LjAxMTU2LS4wMDU3NC4wMjg3My0uMDExNDcuMDQwMy0u
MDE3MjF2LjAwNTc0QTEwOS41MjEsMTA5LjUyMSwwLDAsMSw5MC42NDgsNTcuNDI3MjdhMTI2LjY3
MzYsMTI2LjY3MzYsMCwwLDEsNTQuMTEzNzIsMS41NzMxOCwxNi43NTQxMiwxNi43NTQxMiwwLDAs
MC0xLjM2MTA4LDEyLjkyOTgxbTIuOTE3LS43NzUxMmExMy43MDIyMSwxMy43MDIyMSwwLDAsMSwx
LjM4MzUtMTEuMTg0MzljLjA0MDMtLjA2MzE2LjA5MTgyLS4xMjA1OS4xMzIxMi0uMTgzNzFhMTQz
LjQ0NzgzLDE0My40NDc4MywwLDAsMSwyOC4zMjg1NywxMC45MzE3N3EtMi44Njc5Mi44MjY3OC01
LjgyNzY4LDEuODM3MjdhMTU3LjYxMzg1LDE1Ny42MTM4NSwwLDAsMC0xOS4wNjE3NSw4LjAzMjM0
LDI2LjgxMTYyLDI2LjgxMTYyLDAsMCwxLTQuOTU0NzYtOS40MzMyOG0zMS4wNTU2NC0zLjE5OEEx
NDcuMTg3NTIsMTQ3LjE4NzUyLDAsMCwwLDE1MC4wMjY1Nyw1Ny4yNTVjMy43MjAxOS0zLjM3MDI0
LDkuNDc5MTktNS4wODEyMywxNi4xNDQ3Ni01LjA5MjdhNjkuNTE3NTcsNjkuNTE3NTcsMCwwLDEs
MTEuMjAxOTEsMTUuNzk0OG0tNi43NjkzLTE1LjU1OTRhNTQuNzc1NjUsNTQuNzc1NjUsMCwwLDEs
MTkuNDAwMjcsNS45OTQxLDUyLjQyOTUxLDUyLjQyOTUxLDAsMCwxLDEyLjA2ODg4LDguNTgzNTIs
NzguNjE0MDcsNzguNjE0MDcsMCwwLDAtMjAuNTc3NzIsMi4zNDgyNSw3OS4xNDIzNCw3OS4xNDIz
NCwwLDAsMC0xMC44OTE0My0xNi45MjU4N20uNzA2MTIsMjMuMDE3NjFjMi45MDUwOC0uOTkzMyw1
LjczNTg3LTEuODM3MjgsOC41MDg4NC0yLjU1NXExLjgzNDUxLDMuOTUzLDMuNDc5NDQsOC4zNDIz
NGExNTIuMTc5MzMsMTUyLjE3OTMzLDAsMCwxLDUuNTAwMzgsMTguMzc4NDgsNTMuNjYwNDQsNTMu
NjYwNDQsMCwwLDEtMjEuNjE2NzUtNi4xNjA2LDUwLjkxNzU1LDUwLjkxNzU1LDAsMCwxLTEzLjkw
MDI0LTEwLjQ2MSwxNTQuNDA0NzMsMTU0LjQwNDczLDAsMCwxLDE4LjAyODMzLTcuNTQ0MjdtMTQu
ODE4NzIsNC43MzFxLS45NzMtMi42MDA5MS0yLjAxNTMzLTUuMDUyNDlhMTQyLjYzMzc2LDE0Mi42
MzM3NiwwLDAsMSwyNC4zMzI2LDE4LjEyNTg0Yy0zLjQ1MDcxLDQuMDc2NDUtOS40MzMyOCw2LjIy
OTUtMTYuNTI5ODgsNi40MDc0OGExNTcuNjYzNDcsMTU3LjY2MzQ3LDAsMCwwLTUuNzg3MzktMTku
NDgwODNNMTg0LjQxMiw3MS43ODFhNjkuNTI4ODcsNjkuNTI4ODcsMCwwLDEsMjAuNzQ5NzgtMS40
ODdBMjcuNjEwMTUsMjcuNjEwMTUsMCwwLDEsMjEwLjg2Myw4MC42NTE1NWExNC4wNzU1NywxNC4w
NzU1NywwLDAsMS0uNzE3NjksMTAuMDE4ODlBMTQ2LjEyMTc4LDE0Ni4xMjE3OCwwLDAsMCwxODQu
NDEyLDcxLjc4MW02Ljk4MTY1LTE2LjA3MDM4YTU1LjY4MDMsNTUuNjgwMywwLDAsMC0yMy43MTc5
NC02LjQ1OTE2LDQzLjMyMjUsNDMuMzIyNSwwLDAsMC03LjA1MDY5LTUuNzEyNzksMTI0LjI3Njc1
LDEyNC4yNzY3NSwwLDAsMSw1My45NTg0OCwyNS40NzQ5Myw0Mi40OTEyMiw0Mi40OTEyMiwwLDAs
MC03Ljk2MzIyLTEuNjkzNzMsNTMuMjIzNjQsNTMuMjIzNjQsMCwwLDAtMTUuMjI2NjMtMTEuNjA5
MjVtLTI4LjE5MDUtNi4zNTU4M2MtNi45NTI5My41NDU0NS0xMi44NjA4NiwyLjg5OTQ0LTE2LjUz
NTQ5LDcuMDEwMzVhMTI5LjkzNzQzLDEyOS45Mzc0MywwLDAsMC01Ni41OTkzNC0xLjkwMDQzLDEx
My4wMzIzMywxMTMuMDMyMzMsMCwwLDAtMTguNTc0LDUuMjcwNjd2LjAxMTQ4Yy0uMTc4LjA2ODkt
LjM2MTY0LjE0MzU0LS41NDUyNy4yMTI0NS0uMTM3NzItLjE4OTUtLjI4Ny0uMzg0NjktLjQyNTA4
LS41NzQxNGExMjQuNTM1MTUsMTI0LjUzNTE1LDAsMCwxLDY1LjIyMzQ3LTE4LjMxNTMzcTUuNTU0
NTMsMCwxMC45ODkyLjQ3NjU0YzUuNzQ3MDkuNjc3NDcsMTEuMzA0OTQsMy4zNTMsMTYuNDY2NDYs
Ny44MDg0MU0xNDguNzI4OTIsMjgxLjIwMTQxYzMuODUyNjUuMzA0MzEsNy42NjQ2NS40NzY1NSwx
MS40MTk4OC40NzY1NSwyLjc4NDUzLDAsNS41NDYyOS0uMDg2MTIsOC4yNjE3OS0uMjU4MzcsMy42
OTc0MS0uMjI5NjUsNy4yNTc0NC0uNjMxNTYsMTAuNjc5MDYtMS4xNzEyNWExMjQuODQzODUsMTI0
Ljg0Mzg1LDAsMCwxLTQxLjYwODIsNy42ODIwOSw0NS41MjA1OCw0NS41MjA1OCwwLDAsMCwxMS4y
NDc0Ny02LjcyOW0zLjQ0NDc1LTIuOTc0MDhhOTIuNjEwNDksOTIuNjEwNDksMCwwLDAsMTYuMjA4
MTgtMjAuODMwMDljLjEwMzM4LS4xNzIyNC4yMDExNS0uMzQ0NDcuMjk4NTctLjUxNjcxLDkuNzA5
MDcsNS4zMTA4NiwxOS41NDM5NSwxMC4wODc3OCwyOS40MjUwOCwxNC40NzQyNS0uNjgzLjM5NjE2
LTEuMzc3OS43NjkzNi0yLjA2Njg1LDEuMTQ4My0xMi4yNjk2OCw0Ljc0ODItMjcuMzY5OCw2LjY4
ODgyLTQzLjg2NSw1LjcyNDI1bTMxLjM0My0zMS41MTVjNC4xOTY3OC0uMDg2MTIsOC4zMzY0My0u
MzYxNzEsMTIuMzc4MzEtLjgzODI2LDIwLjc1NTc1LTIuNDYzMDgsMzcuNDUxNzMtOS44ODY4Myw0
OC42MDczOS0yMS4zNjRhMTI0LjMzOTE4LDEyNC4zMzkxOCwwLDAsMS0zNi4yNzQ2Myw0MC4zNDUz
NywyMTQuNjA3MjgsMjE0LjYwNzI4LDAsMCwxLTI0LjcxMTA3LTE4LjE0MzA5Ii8+PC9zdmc+

------=_NextPart_1f9c1f14.8e9d.4eb5--